//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-31968024
// Cuda compilation tools, release 12.0, V12.0.76
// Based on NVVM 7.0.1
//

.version 8.0
.target sm_75
.address_size 64

	// .globl	fill
.global .align 4 .f32 epsilon = 0f3A83126F;
.global .align 4 .u32 SharedMemorySize = 16384;
.extern .shared .align 16 .b8 shared[];

.visible .entry fill(
	.param .u64 fill_param_0,
	.param .f32 fill_param_1,
	.param .u32 fill_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<2>;
	.reg .b32 	%r<6>;
	.reg .b64 	%rd<5>;


	ld.param.u64 	%rd1, [fill_param_0];
	ld.param.f32 	%f1, [fill_param_1];
	ld.param.u32 	%r2, [fill_param_2];
	mov.u32 	%r3, %ntid.x;
	mov.u32 	%r4, %ctaid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB0_2;

	cvta.to.global.u64 	%rd2, %rd1;
	mul.wide.s32 	%rd3, %r1, 4;
	add.s64 	%rd4, %rd2, %rd3;
	st.global.f32 	[%rd4], %f1;

$L__BB0_2:
	ret;

}
	// .globl	gelu
.visible .entry gelu(
	.param .u64 gelu_param_0,
	.param .u64 gelu_param_1,
	.param .u32 gelu_param_2
)
{
	.reg .pred 	%p<4>;
	.reg .f32 	%f<32>;
	.reg .b32 	%r<10>;
	.reg .b64 	%rd<10>;


	ld.param.u64 	%rd2, [gelu_param_0];
	ld.param.u64 	%rd3, [gelu_param_1];
	ld.param.u32 	%r2, [gelu_param_2];
	mov.u32 	%r3, %ntid.x;
	mov.u32 	%r4, %ctaid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB1_5;

	cvta.to.global.u64 	%rd4, %rd2;
	cvt.s64.s32 	%rd1, %r1;
	mul.wide.s32 	%rd5, %r1, 4;
	add.s64 	%rd6, %rd4, %rd5;
	ld.global.nc.f32 	%f1, [%rd6];
	mul.ftz.f32 	%f7, %f1, %f1;
	mul.ftz.f32 	%f8, %f1, %f7;
	mul.ftz.f32 	%f9, %f8, 0f3D122277;
	fma.rn.ftz.f32 	%f2, %f1, 0f3F4C422A, %f9;
	abs.ftz.f32 	%f3, %f2;
	setp.ltu.ftz.f32 	%p2, %f3, 0f3F19999A;
	@%p2 bra 	$L__BB1_3;
	bra.uni 	$L__BB1_2;

$L__BB1_3:
	mul.ftz.f32 	%f18, %f2, %f2;
	mov.f32 	%f19, 0fBD563CAE;
	mov.f32 	%f20, 0f3C80F082;
	fma.rn.ftz.f32 	%f21, %f20, %f18, %f19;
	mov.f32 	%f22, 0f3E085941;
	fma.rn.ftz.f32 	%f23, %f21, %f18, %f22;
	mov.f32 	%f24, 0fBEAAA9ED;
	fma.rn.ftz.f32 	%f25, %f23, %f18, %f24;
	mov.f32 	%f26, 0f00000000;
	fma.rn.ftz.f32 	%f27, %f25, %f18, %f26;
	fma.rn.ftz.f32 	%f31, %f27, %f2, %f2;
	bra.uni 	$L__BB1_4;

$L__BB1_2:
	mul.ftz.f32 	%f10, %f3, 0f4038AA3B;
	ex2.approx.ftz.f32 	%f11, %f10;
	add.ftz.f32 	%f12, %f11, 0f3F800000;
	mov.f32 	%f13, 0f3F800000;
	rcp.approx.ftz.f32 	%f14, %f12;
	mov.f32 	%f15, 0fC0000000;
	fma.rn.ftz.f32 	%f16, %f14, %f15, %f13;
	setp.ge.ftz.f32 	%p3, %f3, 0f41102CB4;
	selp.f32 	%f17, 0f3F800000, %f16, %p3;
	mov.b32 	%r6, %f17;
	mov.b32 	%r7, %f2;
	and.b32  	%r8, %r7, -2147483648;
	or.b32  	%r9, %r8, %r6;
	mov.b32 	%f31, %r9;

$L__BB1_4:
	add.ftz.f32 	%f28, %f31, 0f3F800000;
	mul.ftz.f32 	%f29, %f1, 0f3F000000;
	mul.ftz.f32 	%f30, %f29, %f28;
	cvta.to.global.u64 	%rd7, %rd3;
	shl.b64 	%rd8, %rd1, 2;
	add.s64 	%rd9, %rd7, %rd8;
	st.global.f32 	[%rd9], %f30;

$L__BB1_5:
	ret;

}
	// .globl	set
.visible .entry set(
	.param .u64 set_param_0,
	.param .u32 set_param_1,
	.param .f32 set_param_2
)
{
	.reg .f32 	%f<2>;
	.reg .b32 	%r<2>;
	.reg .b64 	%rd<5>;


	ld.param.u64 	%rd1, [set_param_0];
	ld.param.u32 	%r1, [set_param_1];
	ld.param.f32 	%f1, [set_param_2];
	cvta.to.global.u64 	%rd2, %rd1;
	mul.wide.s32 	%rd3, %r1, 4;
	add.s64 	%rd4, %rd2, %rd3;
	st.global.f32 	[%rd4], %f1;
	ret;

}
	// .globl	multiplyIndex
.visible .entry multiplyIndex(
	.param .u64 multiplyIndex_param_0,
	.param .u32 multiplyIndex_param_1,
	.param .u32 multiplyIndex_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<2>;
	.reg .b32 	%r<8>;
	.reg .b64 	%rd<5>;


	ld.param.u64 	%rd1, [multiplyIndex_param_0];
	ld.param.u32 	%r2, [multiplyIndex_param_1];
	ld.param.u32 	%r3, [multiplyIndex_param_2];
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %ctaid.x;
	mov.u32 	%r6, %tid.x;
	mad.lo.s32 	%r1, %r4, %r5, %r6;
	setp.ge.s32 	%p1, %r1, %r3;
	@%p1 bra 	$L__BB3_2;

	cvta.to.global.u64 	%rd2, %rd1;
	mul.lo.s32 	%r7, %r1, %r2;
	cvt.rn.f32.s32 	%f1, %r7;
	mul.wide.s32 	%rd3, %r1, 4;
	add.s64 	%rd4, %rd2, %rd3;
	st.global.f32 	[%rd4], %f1;

$L__BB3_2:
	ret;

}
	// .globl	imageVector
.visible .entry imageVector(
	.param .u64 imageVector_param_0,
	.param .u64 imageVector_param_1,
	.param .u32 imageVector_param_2,
	.param .u32 imageVector_param_3,
	.param .u32 imageVector_param_4,
	.param .u32 imageVector_param_5
)
{
	.reg .pred 	%p<14>;
	.reg .f32 	%f<8>;
	.reg .b32 	%r<62>;
	.reg .b64 	%rd<21>;


	ld.param.u64 	%rd13, [imageVector_param_0];
	ld.param.u64 	%rd14, [imageVector_param_1];
	ld.param.u32 	%r29, [imageVector_param_2];
	ld.param.u32 	%r26, [imageVector_param_3];
	ld.param.u32 	%r27, [imageVector_param_4];
	ld.param.u32 	%r28, [imageVector_param_5];
	cvta.to.global.u64 	%rd1, %rd14;
	cvta.to.global.u64 	%rd2, %rd13;
	mov.u32 	%r30, %ctaid.x;
	mov.u32 	%r31, %ntid.x;
	mov.u32 	%r32, %tid.x;
	mad.lo.s32 	%r33, %r31, %r30, %r32;
	mul.lo.s32 	%r1, %r33, %r28;
	mov.u32 	%r34, %ctaid.y;
	mov.u32 	%r35, %ntid.y;
	mov.u32 	%r36, %tid.y;
	mad.lo.s32 	%r37, %r35, %r34, %r36;
	mul.lo.s32 	%r2, %r37, %r28;
	mov.u32 	%r38, %ctaid.z;
	mov.u32 	%r39, %ntid.z;
	mov.u32 	%r40, %tid.z;
	mad.lo.s32 	%r3, %r39, %r38, %r40;
	setp.ge.s32 	%p1, %r1, %r29;
	setp.ge.s32 	%p2, %r2, %r26;
	or.pred  	%p3, %p1, %p2;
	setp.ge.s32 	%p4, %r3, %r28;
	or.pred  	%p5, %p4, %p3;
	@%p5 bra 	$L__BB4_12;

	setp.lt.s32 	%p6, %r28, 1;
	@%p6 bra 	$L__BB4_12;

	mul.lo.s32 	%r41, %r28, %r27;
	mul.lo.s32 	%r42, %r41, %r28;
	add.s32 	%r43, %r1, %r3;
	mad.lo.s32 	%r4, %r43, %r26, %r2;
	setp.lt.s32 	%p7, %r27, 1;
	div.s32 	%r44, %r1, %r28;
	mul.lo.s32 	%r45, %r42, %r26;
	div.s32 	%r46, %r45, %r28;
	div.s32 	%r47, %r2, %r28;
	mul.lo.s32 	%r48, %r41, %r3;
	mad.lo.s32 	%r49, %r47, %r42, %r48;
	mad.lo.s32 	%r61, %r44, %r46, %r49;
	@%p7 bra 	$L__BB4_12;

	add.s32 	%r6, %r27, -1;
	and.b32  	%r7, %r27, 3;
	sub.s32 	%r8, %r27, %r7;
	add.s64 	%rd3, %rd1, 8;
	add.s64 	%rd4, %rd2, 8;
	mov.u32 	%r53, 0;

$L__BB4_4:
	add.s32 	%r52, %r4, %r53;
	mul.lo.s32 	%r59, %r52, %r27;
	setp.lt.u32 	%p8, %r6, 3;
	@%p8 bra 	$L__BB4_7;

	mul.wide.s32 	%rd15, %r61, 4;
	add.s64 	%rd20, %rd3, %rd15;
	mul.wide.s32 	%rd16, %r59, 4;
	add.s64 	%rd19, %rd4, %rd16;
	mov.u32 	%r57, %r8;

$L__BB4_6:
	ld.global.nc.f32 	%f1, [%rd19+-8];
	st.global.f32 	[%rd20+-8], %f1;
	ld.global.nc.f32 	%f2, [%rd19+-4];
	st.global.f32 	[%rd20+-4], %f2;
	ld.global.nc.f32 	%f3, [%rd19];
	st.global.f32 	[%rd20], %f3;
	ld.global.nc.f32 	%f4, [%rd19+4];
	st.global.f32 	[%rd20+4], %f4;
	add.s32 	%r61, %r61, 4;
	add.s32 	%r59, %r59, 4;
	add.s64 	%rd20, %rd20, 16;
	add.s64 	%rd19, %rd19, 16;
	add.s32 	%r57, %r57, -4;
	setp.ne.s32 	%p9, %r57, 0;
	@%p9 bra 	$L__BB4_6;

$L__BB4_7:
	mov.u32 	%r20, %r61;
	setp.eq.s32 	%p10, %r7, 0;
	@%p10 bra 	$L__BB4_11;

	setp.eq.s32 	%p11, %r7, 1;
	mul.wide.s32 	%rd17, %r59, 4;
	add.s64 	%rd11, %rd2, %rd17;
	ld.global.nc.f32 	%f5, [%rd11];
	mul.wide.s32 	%rd18, %r20, 4;
	add.s64 	%rd12, %rd1, %rd18;
	st.global.f32 	[%rd12], %f5;
	add.s32 	%r61, %r20, 1;
	@%p11 bra 	$L__BB4_11;

	setp.eq.s32 	%p12, %r7, 2;
	ld.global.nc.f32 	%f6, [%rd11+4];
	st.global.f32 	[%rd12+4], %f6;
	add.s32 	%r61, %r20, 2;
	@%p12 bra 	$L__BB4_11;

	ld.global.nc.f32 	%f7, [%rd11+8];
	st.global.f32 	[%rd12+8], %f7;
	add.s32 	%r61, %r20, 3;

$L__BB4_11:
	add.s32 	%r53, %r53, 1;
	setp.lt.s32 	%p13, %r53, %r28;
	@%p13 bra 	$L__BB4_4;

$L__BB4_12:
	ret;

}
	// .globl	imageVector_half
.visible .entry imageVector_half(
	.param .u64 imageVector_half_param_0,
	.param .u64 imageVector_half_param_1,
	.param .u32 imageVector_half_param_2,
	.param .u32 imageVector_half_param_3,
	.param .u32 imageVector_half_param_4,
	.param .u32 imageVector_half_param_5
)
{
	.reg .pred 	%p<14>;
	.reg .f32 	%f<8>;
	.reg .b32 	%r<62>;
	.reg .b64 	%rd<21>;


	ld.param.u64 	%rd13, [imageVector_half_param_0];
	ld.param.u64 	%rd14, [imageVector_half_param_1];
	ld.param.u32 	%r29, [imageVector_half_param_2];
	ld.param.u32 	%r26, [imageVector_half_param_3];
	ld.param.u32 	%r27, [imageVector_half_param_4];
	ld.param.u32 	%r28, [imageVector_half_param_5];
	cvta.to.global.u64 	%rd1, %rd14;
	cvta.to.global.u64 	%rd2, %rd13;
	mov.u32 	%r30, %ctaid.x;
	mov.u32 	%r31, %ntid.x;
	mov.u32 	%r32, %tid.x;
	mad.lo.s32 	%r33, %r31, %r30, %r32;
	mul.lo.s32 	%r1, %r33, %r28;
	mov.u32 	%r34, %ctaid.y;
	mov.u32 	%r35, %ntid.y;
	mov.u32 	%r36, %tid.y;
	mad.lo.s32 	%r37, %r35, %r34, %r36;
	mul.lo.s32 	%r2, %r37, %r28;
	mov.u32 	%r38, %ctaid.z;
	mov.u32 	%r39, %ntid.z;
	mov.u32 	%r40, %tid.z;
	mad.lo.s32 	%r3, %r39, %r38, %r40;
	setp.ge.s32 	%p1, %r1, %r29;
	setp.ge.s32 	%p2, %r2, %r26;
	or.pred  	%p3, %p1, %p2;
	setp.ge.s32 	%p4, %r3, %r28;
	or.pred  	%p5, %p4, %p3;
	@%p5 bra 	$L__BB5_12;

	setp.lt.s32 	%p6, %r28, 1;
	@%p6 bra 	$L__BB5_12;

	mul.lo.s32 	%r41, %r28, %r27;
	mul.lo.s32 	%r42, %r41, %r28;
	add.s32 	%r43, %r1, %r3;
	mad.lo.s32 	%r4, %r43, %r26, %r2;
	setp.lt.s32 	%p7, %r27, 1;
	div.s32 	%r44, %r1, %r28;
	mul.lo.s32 	%r45, %r42, %r26;
	div.s32 	%r46, %r45, %r28;
	div.s32 	%r47, %r2, %r28;
	mul.lo.s32 	%r48, %r41, %r3;
	mad.lo.s32 	%r49, %r47, %r42, %r48;
	mad.lo.s32 	%r61, %r44, %r46, %r49;
	@%p7 bra 	$L__BB5_12;

	add.s32 	%r6, %r27, -1;
	and.b32  	%r7, %r27, 3;
	sub.s32 	%r8, %r27, %r7;
	add.s64 	%rd3, %rd1, 8;
	add.s64 	%rd4, %rd2, 8;
	mov.u32 	%r53, 0;

$L__BB5_4:
	add.s32 	%r52, %r4, %r53;
	mul.lo.s32 	%r59, %r52, %r27;
	setp.lt.u32 	%p8, %r6, 3;
	@%p8 bra 	$L__BB5_7;

	mul.wide.s32 	%rd15, %r61, 4;
	add.s64 	%rd20, %rd3, %rd15;
	mul.wide.s32 	%rd16, %r59, 4;
	add.s64 	%rd19, %rd4, %rd16;
	mov.u32 	%r57, %r8;

$L__BB5_6:
	ld.global.nc.f32 	%f1, [%rd19+-8];
	st.global.f32 	[%rd20+-8], %f1;
	ld.global.nc.f32 	%f2, [%rd19+-4];
	st.global.f32 	[%rd20+-4], %f2;
	ld.global.nc.f32 	%f3, [%rd19];
	st.global.f32 	[%rd20], %f3;
	ld.global.nc.f32 	%f4, [%rd19+4];
	st.global.f32 	[%rd20+4], %f4;
	add.s32 	%r61, %r61, 4;
	add.s32 	%r59, %r59, 4;
	add.s64 	%rd20, %rd20, 16;
	add.s64 	%rd19, %rd19, 16;
	add.s32 	%r57, %r57, -4;
	setp.ne.s32 	%p9, %r57, 0;
	@%p9 bra 	$L__BB5_6;

$L__BB5_7:
	mov.u32 	%r20, %r61;
	setp.eq.s32 	%p10, %r7, 0;
	@%p10 bra 	$L__BB5_11;

	setp.eq.s32 	%p11, %r7, 1;
	mul.wide.s32 	%rd17, %r59, 4;
	add.s64 	%rd11, %rd2, %rd17;
	ld.global.nc.f32 	%f5, [%rd11];
	mul.wide.s32 	%rd18, %r20, 4;
	add.s64 	%rd12, %rd1, %rd18;
	st.global.f32 	[%rd12], %f5;
	add.s32 	%r61, %r20, 1;
	@%p11 bra 	$L__BB5_11;

	setp.eq.s32 	%p12, %r7, 2;
	ld.global.nc.f32 	%f6, [%rd11+4];
	st.global.f32 	[%rd12+4], %f6;
	add.s32 	%r61, %r20, 2;
	@%p12 bra 	$L__BB5_11;

	ld.global.nc.f32 	%f7, [%rd11+8];
	st.global.f32 	[%rd12+8], %f7;
	add.s32 	%r61, %r20, 3;

$L__BB5_11:
	add.s32 	%r53, %r53, 1;
	setp.lt.s32 	%p13, %r53, %r28;
	@%p13 bra 	$L__BB5_4;

$L__BB5_12:
	ret;

}
	// .globl	backImageVector
.visible .entry backImageVector(
	.param .u64 backImageVector_param_0,
	.param .u64 backImageVector_param_1,
	.param .u32 backImageVector_param_2,
	.param .u32 backImageVector_param_3,
	.param .u32 backImageVector_param_4,
	.param .u32 backImageVector_param_5
)
{
	.reg .pred 	%p<14>;
	.reg .f32 	%f<8>;
	.reg .b32 	%r<62>;
	.reg .b64 	%rd<21>;


	ld.param.u64 	%rd13, [backImageVector_param_0];
	ld.param.u64 	%rd14, [backImageVector_param_1];
	ld.param.u32 	%r29, [backImageVector_param_2];
	ld.param.u32 	%r26, [backImageVector_param_3];
	ld.param.u32 	%r27, [backImageVector_param_4];
	ld.param.u32 	%r28, [backImageVector_param_5];
	cvta.to.global.u64 	%rd1, %rd14;
	cvta.to.global.u64 	%rd2, %rd13;
	mov.u32 	%r30, %ctaid.x;
	mov.u32 	%r31, %ntid.x;
	mov.u32 	%r32, %tid.x;
	mad.lo.s32 	%r33, %r31, %r30, %r32;
	mul.lo.s32 	%r1, %r33, %r28;
	mov.u32 	%r34, %ctaid.y;
	mov.u32 	%r35, %ntid.y;
	mov.u32 	%r36, %tid.y;
	mad.lo.s32 	%r37, %r35, %r34, %r36;
	mul.lo.s32 	%r2, %r37, %r28;
	mov.u32 	%r38, %ctaid.z;
	mov.u32 	%r39, %ntid.z;
	mov.u32 	%r40, %tid.z;
	mad.lo.s32 	%r3, %r39, %r38, %r40;
	setp.ge.s32 	%p1, %r1, %r29;
	setp.ge.s32 	%p2, %r2, %r26;
	or.pred  	%p3, %p1, %p2;
	setp.ge.s32 	%p4, %r3, %r28;
	or.pred  	%p5, %p4, %p3;
	@%p5 bra 	$L__BB6_12;

	setp.lt.s32 	%p6, %r28, 1;
	@%p6 bra 	$L__BB6_12;

	mul.lo.s32 	%r41, %r28, %r27;
	mul.lo.s32 	%r42, %r41, %r28;
	add.s32 	%r43, %r1, %r3;
	mad.lo.s32 	%r4, %r43, %r26, %r2;
	setp.lt.s32 	%p7, %r27, 1;
	div.s32 	%r44, %r1, %r28;
	mul.lo.s32 	%r45, %r42, %r26;
	div.s32 	%r46, %r45, %r28;
	div.s32 	%r47, %r2, %r28;
	mul.lo.s32 	%r48, %r41, %r3;
	mad.lo.s32 	%r49, %r47, %r42, %r48;
	mad.lo.s32 	%r61, %r44, %r46, %r49;
	@%p7 bra 	$L__BB6_12;

	add.s32 	%r6, %r27, -1;
	and.b32  	%r7, %r27, 3;
	sub.s32 	%r8, %r27, %r7;
	add.s64 	%rd3, %rd2, 8;
	add.s64 	%rd4, %rd1, 8;
	mov.u32 	%r53, 0;

$L__BB6_4:
	add.s32 	%r52, %r4, %r53;
	mul.lo.s32 	%r59, %r52, %r27;
	setp.lt.u32 	%p8, %r6, 3;
	@%p8 bra 	$L__BB6_7;

	mul.wide.s32 	%rd15, %r61, 4;
	add.s64 	%rd20, %rd3, %rd15;
	mul.wide.s32 	%rd16, %r59, 4;
	add.s64 	%rd19, %rd4, %rd16;
	mov.u32 	%r57, %r8;

$L__BB6_6:
	ld.global.nc.f32 	%f1, [%rd20+-8];
	st.global.f32 	[%rd19+-8], %f1;
	ld.global.nc.f32 	%f2, [%rd20+-4];
	st.global.f32 	[%rd19+-4], %f2;
	ld.global.nc.f32 	%f3, [%rd20];
	st.global.f32 	[%rd19], %f3;
	ld.global.nc.f32 	%f4, [%rd20+4];
	st.global.f32 	[%rd19+4], %f4;
	add.s32 	%r61, %r61, 4;
	add.s32 	%r59, %r59, 4;
	add.s64 	%rd20, %rd20, 16;
	add.s64 	%rd19, %rd19, 16;
	add.s32 	%r57, %r57, -4;
	setp.ne.s32 	%p9, %r57, 0;
	@%p9 bra 	$L__BB6_6;

$L__BB6_7:
	mov.u32 	%r20, %r61;
	setp.eq.s32 	%p10, %r7, 0;
	@%p10 bra 	$L__BB6_11;

	setp.eq.s32 	%p11, %r7, 1;
	mul.wide.s32 	%rd17, %r20, 4;
	add.s64 	%rd11, %rd2, %rd17;
	ld.global.nc.f32 	%f5, [%rd11];
	mul.wide.s32 	%rd18, %r59, 4;
	add.s64 	%rd12, %rd1, %rd18;
	st.global.f32 	[%rd12], %f5;
	add.s32 	%r61, %r20, 1;
	@%p11 bra 	$L__BB6_11;

	setp.eq.s32 	%p12, %r7, 2;
	ld.global.nc.f32 	%f6, [%rd11+4];
	st.global.f32 	[%rd12+4], %f6;
	add.s32 	%r61, %r20, 2;
	@%p12 bra 	$L__BB6_11;

	ld.global.nc.f32 	%f7, [%rd11+8];
	st.global.f32 	[%rd12+8], %f7;
	add.s32 	%r61, %r20, 3;

$L__BB6_11:
	add.s32 	%r53, %r53, 1;
	setp.lt.s32 	%p13, %r53, %r28;
	@%p13 bra 	$L__BB6_4;

$L__BB6_12:
	ret;

}
	// .globl	add3
.visible .entry add3(
	.param .u64 add3_param_0,
	.param .u64 add3_param_1,
	.param .u32 add3_param_2,
	.param .u32 add3_param_3
)
{
	.reg .pred 	%p<6>;
	.reg .f32 	%f<8>;
	.reg .b32 	%r<19>;
	.reg .b64 	%rd<9>;


	ld.param.u64 	%rd3, [add3_param_0];
	ld.param.u64 	%rd4, [add3_param_1];
	ld.param.u32 	%r5, [add3_param_2];
	ld.param.u32 	%r6, [add3_param_3];
	mov.u32 	%r7, %ctaid.x;
	mov.u32 	%r8, %ntid.x;
	mov.u32 	%r9, %tid.x;
	mad.lo.s32 	%r1, %r8, %r7, %r9;
	mov.u32 	%r10, %ctaid.y;
	mov.u32 	%r2, %ntid.y;
	mov.u32 	%r11, %tid.y;
	mad.lo.s32 	%r3, %r2, %r10, %r11;
	setp.ge.s32 	%p1, %r1, %r5;
	setp.ge.s32 	%p2, %r3, %r6;
	or.pred  	%p3, %p1, %p2;
	@%p3 bra 	$L__BB7_6;

	ld.global.u32 	%r12, [SharedMemorySize];
	setp.ge.s32 	%p4, %r3, %r12;
	cvta.to.global.u64 	%rd5, %rd3;
	mul.wide.s32 	%rd6, %r3, 4;
	add.s64 	%rd1, %rd5, %rd6;
	shl.b32 	%r13, %r3, 2;
	mov.u32 	%r14, shared;
	add.s32 	%r4, %r14, %r13;
	@%p4 bra 	$L__BB7_3;

	ld.global.nc.f32 	%f1, [%rd1];
	st.shared.f32 	[%r4], %f1;

$L__BB7_3:
	bar.sync 	0;
	mov.u32 	%r15, %nctaid.y;
	mul.lo.s32 	%r16, %r15, %r2;
	mad.lo.s32 	%r17, %r16, %r1, %r3;
	ld.global.u32 	%r18, [SharedMemorySize];
	setp.lt.s32 	%p5, %r3, %r18;
	cvta.to.global.u64 	%rd7, %rd4;
	mul.wide.s32 	%rd8, %r17, 4;
	add.s64 	%rd2, %rd7, %rd8;
	@%p5 bra 	$L__BB7_5;
	bra.uni 	$L__BB7_4;

$L__BB7_5:
	ld.shared.f32 	%f5, [%r4];
	ld.global.f32 	%f6, [%rd2];
	add.ftz.f32 	%f7, %f5, %f6;
	st.global.f32 	[%rd2], %f7;
	bra.uni 	$L__BB7_6;

$L__BB7_4:
	ld.global.nc.f32 	%f2, [%rd1];
	ld.global.f32 	%f3, [%rd2];
	add.ftz.f32 	%f4, %f2, %f3;
	st.global.f32 	[%rd2], %f4;

$L__BB7_6:
	ret;

}
	// .globl	dot_VectorAndMatrix
.visible .entry dot_VectorAndMatrix(
	.param .u64 dot_VectorAndMatrix_param_0,
	.param .u64 dot_VectorAndMatrix_param_1,
	.param .u64 dot_VectorAndMatrix_param_2,
	.param .u32 dot_VectorAndMatrix_param_3,
	.param .u32 dot_VectorAndMatrix_param_4
)
{
	.reg .pred 	%p<7>;
	.reg .f32 	%f<30>;
	.reg .b32 	%r<25>;
	.reg .b64 	%rd<28>;


	ld.param.u64 	%rd15, [dot_VectorAndMatrix_param_0];
	ld.param.u64 	%rd16, [dot_VectorAndMatrix_param_1];
	ld.param.u64 	%rd14, [dot_VectorAndMatrix_param_2];
	ld.param.u32 	%r12, [dot_VectorAndMatrix_param_3];
	ld.param.u32 	%r11, [dot_VectorAndMatrix_param_4];
	cvta.to.global.u64 	%rd1, %rd15;
	cvta.to.global.u64 	%rd2, %rd16;
	mov.u32 	%r13, %ctaid.x;
	mov.u32 	%r14, %ntid.x;
	mov.u32 	%r15, %tid.x;
	mad.lo.s32 	%r1, %r14, %r13, %r15;
	setp.ge.s32 	%p1, %r1, %r12;
	@%p1 bra 	$L__BB8_9;

	setp.lt.s32 	%p2, %r11, 1;
	mov.f32 	%f29, 0f00000000;
	@%p2 bra 	$L__BB8_8;

	add.s32 	%r17, %r11, -1;
	and.b32  	%r24, %r11, 3;
	setp.lt.u32 	%p3, %r17, 3;
	mov.f32 	%f29, 0f00000000;
	mov.u32 	%r23, 0;
	@%p3 bra 	$L__BB8_5;

	sub.s32 	%r22, %r11, %r24;
	mul.lo.s32 	%r19, %r11, %r1;
	mul.wide.s32 	%rd17, %r19, 4;
	add.s64 	%rd18, %rd1, %rd17;
	add.s64 	%rd25, %rd18, 8;
	mov.u64 	%rd24, %rd2;

$L__BB8_4:
	ld.global.nc.f32 	%f12, [%rd25+-8];
	ld.global.nc.f32 	%f13, [%rd24];
	fma.rn.ftz.f32 	%f14, %f13, %f12, %f29;
	ld.global.nc.f32 	%f15, [%rd25+-4];
	ld.global.nc.f32 	%f16, [%rd24+4];
	fma.rn.ftz.f32 	%f17, %f16, %f15, %f14;
	ld.global.nc.f32 	%f18, [%rd25];
	ld.global.nc.f32 	%f19, [%rd24+8];
	fma.rn.ftz.f32 	%f20, %f19, %f18, %f17;
	ld.global.nc.f32 	%f21, [%rd25+4];
	ld.global.nc.f32 	%f22, [%rd24+12];
	fma.rn.ftz.f32 	%f29, %f22, %f21, %f20;
	add.s32 	%r23, %r23, 4;
	add.s64 	%rd25, %rd25, 16;
	add.s64 	%rd24, %rd24, 16;
	add.s32 	%r22, %r22, -4;
	setp.ne.s32 	%p4, %r22, 0;
	@%p4 bra 	$L__BB8_4;

$L__BB8_5:
	setp.eq.s32 	%p5, %r24, 0;
	@%p5 bra 	$L__BB8_8;

	mad.lo.s32 	%r20, %r11, %r1, %r23;
	mul.wide.s32 	%rd19, %r20, 4;
	add.s64 	%rd27, %rd1, %rd19;
	mul.wide.s32 	%rd20, %r23, 4;
	add.s64 	%rd26, %rd2, %rd20;

$L__BB8_7:
	.pragma "nounroll";
	ld.global.nc.f32 	%f23, [%rd27];
	ld.global.nc.f32 	%f24, [%rd26];
	fma.rn.ftz.f32 	%f29, %f24, %f23, %f29;
	add.s64 	%rd27, %rd27, 4;
	add.s64 	%rd26, %rd26, 4;
	add.s32 	%r24, %r24, -1;
	setp.ne.s32 	%p6, %r24, 0;
	@%p6 bra 	$L__BB8_7;

$L__BB8_8:
	cvta.to.global.u64 	%rd21, %rd14;
	mul.wide.s32 	%rd22, %r1, 4;
	add.s64 	%rd23, %rd21, %rd22;
	st.global.f32 	[%rd23], %f29;

$L__BB8_9:
	ret;

}
	// .globl	dotT_VectorAndMatrix
.visible .entry dotT_VectorAndMatrix(
	.param .u64 dotT_VectorAndMatrix_param_0,
	.param .u64 dotT_VectorAndMatrix_param_1,
	.param .u64 dotT_VectorAndMatrix_param_2,
	.param .u32 dotT_VectorAndMatrix_param_3,
	.param .u32 dotT_VectorAndMatrix_param_4
)
{
	.reg .pred 	%p<7>;
	.reg .f32 	%f<40>;
	.reg .b32 	%r<49>;
	.reg .b64 	%rd<27>;


	ld.param.u64 	%rd9, [dotT_VectorAndMatrix_param_0];
	ld.param.u64 	%rd10, [dotT_VectorAndMatrix_param_1];
	ld.param.u64 	%rd8, [dotT_VectorAndMatrix_param_2];
	ld.param.u32 	%r26, [dotT_VectorAndMatrix_param_3];
	ld.param.u32 	%r27, [dotT_VectorAndMatrix_param_4];
	cvta.to.global.u64 	%rd1, %rd10;
	cvta.to.global.u64 	%rd2, %rd9;
	mov.u32 	%r28, %ctaid.x;
	mov.u32 	%r29, %ntid.x;
	mul.lo.s32 	%r1, %r29, %r28;
	mov.u32 	%r2, %tid.x;
	add.s32 	%r3, %r1, %r2;
	setp.ge.s32 	%p1, %r3, %r27;
	@%p1 bra 	$L__BB9_9;

	setp.lt.s32 	%p2, %r26, 1;
	mov.f32 	%f39, 0f00000000;
	@%p2 bra 	$L__BB9_8;

	add.s32 	%r31, %r26, -1;
	and.b32  	%r48, %r26, 3;
	setp.lt.u32 	%p3, %r31, 3;
	mov.f32 	%f39, 0f00000000;
	mov.u32 	%r46, 0;
	@%p3 bra 	$L__BB9_5;

	add.s32 	%r33, %r2, %r27;
	add.s32 	%r44, %r33, %r1;
	shl.b32 	%r6, %r27, 2;
	shl.b32 	%r34, %r27, 1;
	add.s32 	%r43, %r3, %r34;
	mad.lo.s32 	%r42, %r27, 3, %r3;
	sub.s32 	%r9, %r48, %r26;
	mov.u32 	%r41, %r3;
	mov.u64 	%rd25, %rd2;

$L__BB9_4:
	cvt.rn.f32.s32 	%f12, %r41;
	cvt.rmi.ftz.f32.f32 	%f13, %f12;
	cvt.rzi.ftz.s32.f32 	%r35, %f13;
	mul.wide.s32 	%rd11, %r35, 4;
	add.s64 	%rd12, %rd1, %rd11;
	ld.global.nc.f32 	%f14, [%rd12];
	ld.global.nc.f32 	%f15, [%rd25];
	fma.rn.ftz.f32 	%f16, %f15, %f14, %f39;
	cvt.rn.f32.s32 	%f17, %r44;
	cvt.rmi.ftz.f32.f32 	%f18, %f17;
	cvt.rzi.ftz.s32.f32 	%r36, %f18;
	mul.wide.s32 	%rd13, %r36, 4;
	add.s64 	%rd14, %rd1, %rd13;
	ld.global.nc.f32 	%f19, [%rd14];
	ld.global.nc.f32 	%f20, [%rd25+4];
	fma.rn.ftz.f32 	%f21, %f20, %f19, %f16;
	cvt.rn.f32.s32 	%f22, %r43;
	cvt.rmi.ftz.f32.f32 	%f23, %f22;
	cvt.rzi.ftz.s32.f32 	%r37, %f23;
	mul.wide.s32 	%rd15, %r37, 4;
	add.s64 	%rd16, %rd1, %rd15;
	ld.global.nc.f32 	%f24, [%rd16];
	ld.global.nc.f32 	%f25, [%rd25+8];
	fma.rn.ftz.f32 	%f26, %f25, %f24, %f21;
	cvt.rn.f32.s32 	%f27, %r42;
	cvt.rmi.ftz.f32.f32 	%f28, %f27;
	cvt.rzi.ftz.s32.f32 	%r38, %f28;
	mul.wide.s32 	%rd17, %r38, 4;
	add.s64 	%rd18, %rd1, %rd17;
	ld.global.nc.f32 	%f29, [%rd18];
	ld.global.nc.f32 	%f30, [%rd25+12];
	fma.rn.ftz.f32 	%f39, %f30, %f29, %f26;
	add.s64 	%rd25, %rd25, 16;
	add.s32 	%r44, %r44, %r6;
	add.s32 	%r43, %r43, %r6;
	add.s32 	%r42, %r42, %r6;
	add.s32 	%r41, %r41, %r6;
	add.s32 	%r46, %r46, 4;
	add.s32 	%r39, %r9, %r46;
	setp.ne.s32 	%p4, %r39, 0;
	@%p4 bra 	$L__BB9_4;

$L__BB9_5:
	setp.eq.s32 	%p5, %r48, 0;
	@%p5 bra 	$L__BB9_8;

	mul.wide.s32 	%rd19, %r46, 4;
	add.s64 	%rd26, %rd2, %rd19;
	mad.lo.s32 	%r47, %r46, %r27, %r3;

$L__BB9_7:
	.pragma "nounroll";
	cvt.rn.f32.s32 	%f31, %r47;
	cvt.rmi.ftz.f32.f32 	%f32, %f31;
	cvt.rzi.ftz.s32.f32 	%r40, %f32;
	mul.wide.s32 	%rd20, %r40, 4;
	add.s64 	%rd21, %rd1, %rd20;
	ld.global.nc.f32 	%f33, [%rd21];
	ld.global.nc.f32 	%f34, [%rd26];
	fma.rn.ftz.f32 	%f39, %f34, %f33, %f39;
	add.s64 	%rd26, %rd26, 4;
	add.s32 	%r47, %r47, %r27;
	add.s32 	%r48, %r48, -1;
	setp.ne.s32 	%p6, %r48, 0;
	@%p6 bra 	$L__BB9_7;

$L__BB9_8:
	cvta.to.global.u64 	%rd22, %rd8;
	mul.wide.s32 	%rd23, %r3, 4;
	add.s64 	%rd24, %rd22, %rd23;
	st.global.f32 	[%rd24], %f39;

$L__BB9_9:
	ret;

}
	// .globl	derivativeWeight
.visible .entry derivativeWeight(
	.param .u64 derivativeWeight_param_0,
	.param .u64 derivativeWeight_param_1,
	.param .u64 derivativeWeight_param_2,
	.param .u32 derivativeWeight_param_3,
	.param .u32 derivativeWeight_param_4
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<5>;
	.reg .b32 	%r<11>;
	.reg .b64 	%rd<13>;


	ld.param.u64 	%rd1, [derivativeWeight_param_0];
	ld.param.u64 	%rd2, [derivativeWeight_param_1];
	ld.param.u64 	%rd3, [derivativeWeight_param_2];
	ld.param.u32 	%r3, [derivativeWeight_param_3];
	ld.param.u32 	%r2, [derivativeWeight_param_4];
	mov.u32 	%r4, %tid.x;
	mov.u32 	%r5, %ctaid.x;
	mov.u32 	%r6, %ntid.x;
	mad.lo.s32 	%r1, %r6, %r5, %r4;
	mul.lo.s32 	%r7, %r2, %r3;
	setp.ge.u32 	%p1, %r1, %r7;
	@%p1 bra 	$L__BB10_2;

	cvta.to.global.u64 	%rd4, %rd2;
	div.u32 	%r8, %r1, %r2;
	mul.wide.u32 	%rd5, %r8, 4;
	add.s64 	%rd6, %rd4, %rd5;
	mul.lo.s32 	%r9, %r8, %r2;
	sub.s32 	%r10, %r1, %r9;
	cvta.to.global.u64 	%rd7, %rd1;
	mul.wide.u32 	%rd8, %r10, 4;
	add.s64 	%rd9, %rd7, %rd8;
	ld.global.nc.f32 	%f1, [%rd9];
	ld.global.nc.f32 	%f2, [%rd6];
	cvta.to.global.u64 	%rd10, %rd3;
	mul.wide.u32 	%rd11, %r1, 4;
	add.s64 	%rd12, %rd10, %rd11;
	ld.global.f32 	%f3, [%rd12];
	fma.rn.ftz.f32 	%f4, %f2, %f1, %f3;
	st.global.f32 	[%rd12], %f4;

$L__BB10_2:
	ret;

}
	// .globl	findMean_part
.visible .entry findMean_part(
	.param .u64 findMean_part_param_0,
	.param .u64 findMean_part_param_1,
	.param .u32 findMean_part_param_2,
	.param .u32 findMean_part_param_3
)
{
	.reg .pred 	%p<7>;
	.reg .f32 	%f<25>;
	.reg .b32 	%r<22>;
	.reg .b64 	%rd<18>;


	ld.param.u64 	%rd9, [findMean_part_param_0];
	ld.param.u64 	%rd8, [findMean_part_param_1];
	ld.param.u32 	%r13, [findMean_part_param_2];
	ld.param.u32 	%r12, [findMean_part_param_3];
	cvta.to.global.u64 	%rd1, %rd9;
	mov.u32 	%r14, %ctaid.x;
	mov.u32 	%r15, %ntid.x;
	mov.u32 	%r16, %tid.x;
	mad.lo.s32 	%r1, %r15, %r14, %r16;
	setp.ge.s32 	%p1, %r1, %r13;
	@%p1 bra 	$L__BB11_9;

	mul.lo.s32 	%r20, %r1, %r12;
	setp.lt.s32 	%p2, %r12, 1;
	mov.f32 	%f24, 0f00000000;
	@%p2 bra 	$L__BB11_8;

	add.s32 	%r17, %r12, -1;
	and.b32  	%r21, %r12, 3;
	setp.lt.u32 	%p3, %r17, 3;
	mov.f32 	%f24, 0f00000000;
	@%p3 bra 	$L__BB11_5;

	sub.s32 	%r19, %r12, %r21;
	mul.wide.s32 	%rd10, %r20, 4;
	add.s64 	%rd11, %rd1, %rd10;
	add.s64 	%rd16, %rd11, 8;

$L__BB11_4:
	ld.global.nc.f32 	%f12, [%rd16+-8];
	add.ftz.f32 	%f13, %f24, %f12;
	ld.global.nc.f32 	%f14, [%rd16+-4];
	add.ftz.f32 	%f15, %f13, %f14;
	ld.global.nc.f32 	%f16, [%rd16];
	add.ftz.f32 	%f17, %f15, %f16;
	ld.global.nc.f32 	%f18, [%rd16+4];
	add.ftz.f32 	%f24, %f17, %f18;
	add.s32 	%r20, %r20, 4;
	add.s64 	%rd16, %rd16, 16;
	add.s32 	%r19, %r19, -4;
	setp.ne.s32 	%p4, %r19, 0;
	@%p4 bra 	$L__BB11_4;

$L__BB11_5:
	setp.eq.s32 	%p5, %r21, 0;
	@%p5 bra 	$L__BB11_8;

	mul.wide.s32 	%rd12, %r20, 4;
	add.s64 	%rd17, %rd1, %rd12;

$L__BB11_7:
	.pragma "nounroll";
	ld.global.nc.f32 	%f19, [%rd17];
	add.ftz.f32 	%f24, %f24, %f19;
	add.s64 	%rd17, %rd17, 4;
	add.s32 	%r21, %r21, -1;
	setp.ne.s32 	%p6, %r21, 0;
	@%p6 bra 	$L__BB11_7;

$L__BB11_8:
	cvta.to.global.u64 	%rd13, %rd8;
	mul.wide.s32 	%rd14, %r1, 4;
	add.s64 	%rd15, %rd13, %rd14;
	st.global.f32 	[%rd15], %f24;

$L__BB11_9:
	ret;

}
	// .globl	generateErrorNorm
.visible .entry generateErrorNorm(
	.param .u64 generateErrorNorm_param_0,
	.param .u64 generateErrorNorm_param_1,
	.param .u64 generateErrorNorm_param_2,
	.param .u32 generateErrorNorm_param_3,
	.param .u32 generateErrorNorm_param_4
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<4>;
	.reg .b32 	%r<15>;
	.reg .b64 	%rd<12>;


	ld.param.u64 	%rd1, [generateErrorNorm_param_0];
	ld.param.u64 	%rd2, [generateErrorNorm_param_1];
	ld.param.u64 	%rd3, [generateErrorNorm_param_2];
	ld.param.u32 	%r3, [generateErrorNorm_param_3];
	ld.param.u32 	%r4, [generateErrorNorm_param_4];
	mov.u32 	%r5, %ntid.x;
	mov.u32 	%r6, %ctaid.x;
	mov.u32 	%r7, %tid.x;
	mad.lo.s32 	%r8, %r5, %r6, %r7;
	mov.u32 	%r9, %ctaid.y;
	mov.u32 	%r10, %ntid.y;
	mov.u32 	%r11, %tid.y;
	mad.lo.s32 	%r1, %r10, %r9, %r11;
	mov.u32 	%r12, %nctaid.y;
	mul.lo.s32 	%r13, %r12, %r10;
	mad.lo.s32 	%r2, %r13, %r8, %r1;
	mul.lo.s32 	%r14, %r4, %r3;
	setp.ge.s32 	%p1, %r2, %r14;
	@%p1 bra 	$L__BB12_2;

	cvta.to.global.u64 	%rd4, %rd1;
	mul.wide.s32 	%rd5, %r2, 4;
	add.s64 	%rd6, %rd4, %rd5;
	cvta.to.global.u64 	%rd7, %rd2;
	mul.wide.s32 	%rd8, %r1, 4;
	add.s64 	%rd9, %rd7, %rd8;
	ld.global.nc.f32 	%f1, [%rd9];
	ld.global.nc.f32 	%f2, [%rd6];
	mul.ftz.f32 	%f3, %f2, %f1;
	cvta.to.global.u64 	%rd10, %rd3;
	add.s64 	%rd11, %rd10, %rd5;
	st.global.f32 	[%rd11], %f3;

$L__BB12_2:
	ret;

}
	// .globl	derVar_part_2
.visible .entry derVar_part_2(
	.param .u64 derVar_part_2_param_0,
	.param .u64 derVar_part_2_param_1,
	.param .u64 derVar_part_2_param_2,
	.param .u64 derVar_part_2_param_3,
	.param .u32 derVar_part_2_param_4,
	.param .u32 derVar_part_2_param_5
)
{
	.reg .pred 	%p<7>;
	.reg .f32 	%f<36>;
	.reg .b32 	%r<22>;
	.reg .b64 	%rd<33>;


	ld.param.u64 	%rd18, [derVar_part_2_param_0];
	ld.param.u64 	%rd19, [derVar_part_2_param_1];
	ld.param.u64 	%rd16, [derVar_part_2_param_2];
	ld.param.u64 	%rd17, [derVar_part_2_param_3];
	ld.param.u32 	%r13, [derVar_part_2_param_4];
	ld.param.u32 	%r12, [derVar_part_2_param_5];
	cvta.to.global.u64 	%rd1, %rd19;
	cvta.to.global.u64 	%rd2, %rd18;
	mov.u32 	%r14, %ctaid.x;
	mov.u32 	%r15, %ntid.x;
	mov.u32 	%r16, %tid.x;
	mad.lo.s32 	%r1, %r15, %r14, %r16;
	setp.ge.s32 	%p1, %r1, %r13;
	@%p1 bra 	$L__BB13_9;

	cvta.to.global.u64 	%rd20, %rd16;
	mul.lo.s32 	%r20, %r1, %r12;
	cvt.s64.s32 	%rd3, %r1;
	mul.wide.s32 	%rd21, %r1, 4;
	add.s64 	%rd22, %rd20, %rd21;
	ld.global.nc.f32 	%f1, [%rd22];
	setp.lt.s32 	%p2, %r12, 1;
	mov.f32 	%f35, 0f00000000;
	@%p2 bra 	$L__BB13_8;

	add.s32 	%r17, %r12, -1;
	and.b32  	%r21, %r12, 3;
	setp.lt.u32 	%p3, %r17, 3;
	mov.f32 	%f35, 0f00000000;
	@%p3 bra 	$L__BB13_5;

	sub.s32 	%r19, %r12, %r21;
	mul.wide.s32 	%rd23, %r20, 4;
	add.s64 	%rd24, %rd23, 8;
	add.s64 	%rd30, %rd2, %rd24;
	add.s64 	%rd29, %rd1, %rd24;

$L__BB13_4:
	ld.global.nc.f32 	%f13, [%rd29+-8];
	sub.ftz.f32 	%f14, %f13, %f1;
	ld.global.nc.f32 	%f15, [%rd30+-8];
	fma.rn.ftz.f32 	%f16, %f15, %f14, %f35;
	ld.global.nc.f32 	%f17, [%rd29+-4];
	sub.ftz.f32 	%f18, %f17, %f1;
	ld.global.nc.f32 	%f19, [%rd30+-4];
	fma.rn.ftz.f32 	%f20, %f19, %f18, %f16;
	ld.global.nc.f32 	%f21, [%rd29];
	sub.ftz.f32 	%f22, %f21, %f1;
	ld.global.nc.f32 	%f23, [%rd30];
	fma.rn.ftz.f32 	%f24, %f23, %f22, %f20;
	ld.global.nc.f32 	%f25, [%rd29+4];
	sub.ftz.f32 	%f26, %f25, %f1;
	ld.global.nc.f32 	%f27, [%rd30+4];
	fma.rn.ftz.f32 	%f35, %f27, %f26, %f24;
	add.s32 	%r20, %r20, 4;
	add.s64 	%rd30, %rd30, 16;
	add.s64 	%rd29, %rd29, 16;
	add.s32 	%r19, %r19, -4;
	setp.ne.s32 	%p4, %r19, 0;
	@%p4 bra 	$L__BB13_4;

$L__BB13_5:
	setp.eq.s32 	%p5, %r21, 0;
	@%p5 bra 	$L__BB13_8;

	mul.wide.s32 	%rd25, %r20, 4;
	add.s64 	%rd32, %rd1, %rd25;
	add.s64 	%rd31, %rd2, %rd25;

$L__BB13_7:
	.pragma "nounroll";
	ld.global.nc.f32 	%f28, [%rd32];
	sub.ftz.f32 	%f29, %f28, %f1;
	ld.global.nc.f32 	%f30, [%rd31];
	fma.rn.ftz.f32 	%f35, %f30, %f29, %f35;
	add.s64 	%rd32, %rd32, 4;
	add.s64 	%rd31, %rd31, 4;
	add.s32 	%r21, %r21, -1;
	setp.ne.s32 	%p6, %r21, 0;
	@%p6 bra 	$L__BB13_7;

$L__BB13_8:
	cvta.to.global.u64 	%rd26, %rd17;
	shl.b64 	%rd27, %rd3, 2;
	add.s64 	%rd28, %rd26, %rd27;
	st.global.f32 	[%rd28], %f35;

$L__BB13_9:
	ret;

}
	// .globl	derMean_part_2
.visible .entry derMean_part_2(
	.param .u64 derMean_part_2_param_0,
	.param .u64 derMean_part_2_param_1,
	.param .u64 derMean_part_2_param_2,
	.param .u64 derMean_part_2_param_3,
	.param .u64 derMean_part_2_param_4,
	.param .u32 derMean_part_2_param_5,
	.param .u32 derMean_part_2_param_6
)
{
	.reg .pred 	%p<7>;
	.reg .f32 	%f<54>;
	.reg .b32 	%r<22>;
	.reg .b64 	%rd<36>;


	ld.param.u64 	%rd19, [derMean_part_2_param_0];
	ld.param.u64 	%rd20, [derMean_part_2_param_1];
	ld.param.u64 	%rd16, [derMean_part_2_param_2];
	ld.param.u64 	%rd17, [derMean_part_2_param_3];
	ld.param.u64 	%rd18, [derMean_part_2_param_4];
	ld.param.u32 	%r13, [derMean_part_2_param_5];
	ld.param.u32 	%r12, [derMean_part_2_param_6];
	cvta.to.global.u64 	%rd1, %rd20;
	cvta.to.global.u64 	%rd2, %rd19;
	mov.u32 	%r14, %ctaid.x;
	mov.u32 	%r15, %ntid.x;
	mov.u32 	%r16, %tid.x;
	mad.lo.s32 	%r1, %r15, %r14, %r16;
	setp.ge.s32 	%p1, %r1, %r13;
	@%p1 bra 	$L__BB14_9;

	cvta.to.global.u64 	%rd21, %rd16;
	mul.lo.s32 	%r20, %r1, %r12;
	cvt.s64.s32 	%rd3, %r1;
	mul.wide.s32 	%rd22, %r1, 4;
	add.s64 	%rd23, %rd21, %rd22;
	ld.global.nc.f32 	%f1, [%rd23];
	setp.lt.s32 	%p2, %r12, 1;
	mov.f32 	%f52, 0f00000000;
	mov.f32 	%f53, %f52;
	@%p2 bra 	$L__BB14_8;

	add.s32 	%r17, %r12, -1;
	and.b32  	%r21, %r12, 3;
	setp.lt.u32 	%p3, %r17, 3;
	mov.f32 	%f53, 0f00000000;
	mov.f32 	%f52, %f53;
	@%p3 bra 	$L__BB14_5;

	sub.s32 	%r19, %r12, %r21;
	mul.wide.s32 	%rd24, %r20, 4;
	add.s64 	%rd25, %rd24, 8;
	add.s64 	%rd33, %rd2, %rd25;
	add.s64 	%rd32, %rd1, %rd25;

$L__BB14_4:
	ld.global.nc.f32 	%f23, [%rd33+-8];
	add.ftz.f32 	%f24, %f52, %f23;
	ld.global.nc.f32 	%f25, [%rd32+-8];
	sub.ftz.f32 	%f26, %f25, %f1;
	add.ftz.f32 	%f27, %f53, %f26;
	ld.global.nc.f32 	%f28, [%rd33+-4];
	add.ftz.f32 	%f29, %f24, %f28;
	ld.global.nc.f32 	%f30, [%rd32+-4];
	sub.ftz.f32 	%f31, %f30, %f1;
	add.ftz.f32 	%f32, %f27, %f31;
	ld.global.nc.f32 	%f33, [%rd33];
	add.ftz.f32 	%f34, %f29, %f33;
	ld.global.nc.f32 	%f35, [%rd32];
	sub.ftz.f32 	%f36, %f35, %f1;
	add.ftz.f32 	%f37, %f32, %f36;
	ld.global.nc.f32 	%f38, [%rd33+4];
	add.ftz.f32 	%f52, %f34, %f38;
	ld.global.nc.f32 	%f39, [%rd32+4];
	sub.ftz.f32 	%f40, %f39, %f1;
	add.ftz.f32 	%f53, %f37, %f40;
	add.s32 	%r20, %r20, 4;
	add.s64 	%rd33, %rd33, 16;
	add.s64 	%rd32, %rd32, 16;
	add.s32 	%r19, %r19, -4;
	setp.ne.s32 	%p4, %r19, 0;
	@%p4 bra 	$L__BB14_4;

$L__BB14_5:
	setp.eq.s32 	%p5, %r21, 0;
	@%p5 bra 	$L__BB14_8;

	mul.wide.s32 	%rd26, %r20, 4;
	add.s64 	%rd35, %rd1, %rd26;
	add.s64 	%rd34, %rd2, %rd26;

$L__BB14_7:
	.pragma "nounroll";
	ld.global.nc.f32 	%f41, [%rd34];
	add.ftz.f32 	%f52, %f52, %f41;
	ld.global.nc.f32 	%f42, [%rd35];
	sub.ftz.f32 	%f43, %f42, %f1;
	add.ftz.f32 	%f53, %f53, %f43;
	add.s64 	%rd35, %rd35, 4;
	add.s64 	%rd34, %rd34, 4;
	add.s32 	%r21, %r21, -1;
	setp.ne.s32 	%p6, %r21, 0;
	@%p6 bra 	$L__BB14_7;

$L__BB14_8:
	cvta.to.global.u64 	%rd27, %rd17;
	shl.b64 	%rd28, %rd3, 2;
	add.s64 	%rd29, %rd27, %rd28;
	st.global.f32 	[%rd29], %f52;
	cvta.to.global.u64 	%rd30, %rd18;
	add.s64 	%rd31, %rd30, %rd28;
	st.global.f32 	[%rd31], %f53;

$L__BB14_9:
	ret;

}
	// .globl	derNorm_part_2
.visible .entry derNorm_part_2(
	.param .u64 derNorm_part_2_param_0,
	.param .u64 derNorm_part_2_param_1,
	.param .u64 derNorm_part_2_param_2,
	.param .u64 derNorm_part_2_param_3,
	.param .u64 derNorm_part_2_param_4,
	.param .u64 derNorm_part_2_param_5,
	.param .u64 derNorm_part_2_param_6,
	.param .u32 derNorm_part_2_param_7,
	.param .u32 derNorm_part_2_param_8
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<11>;
	.reg .b32 	%r<14>;
	.reg .b64 	%rd<24>;


	ld.param.u64 	%rd1, [derNorm_part_2_param_0];
	ld.param.u64 	%rd2, [derNorm_part_2_param_1];
	ld.param.u64 	%rd3, [derNorm_part_2_param_2];
	ld.param.u64 	%rd4, [derNorm_part_2_param_3];
	ld.param.u64 	%rd5, [derNorm_part_2_param_4];
	ld.param.u64 	%rd6, [derNorm_part_2_param_5];
	ld.param.u64 	%rd7, [derNorm_part_2_param_6];
	ld.param.u32 	%r3, [derNorm_part_2_param_7];
	ld.param.u32 	%r4, [derNorm_part_2_param_8];
	mov.u32 	%r5, %ntid.x;
	mov.u32 	%r6, %ctaid.x;
	mov.u32 	%r7, %tid.x;
	mad.lo.s32 	%r1, %r5, %r6, %r7;
	mov.u32 	%r8, %nctaid.y;
	mov.u32 	%r9, %ctaid.y;
	mad.lo.s32 	%r10, %r1, %r8, %r9;
	mov.u32 	%r11, %ntid.y;
	mov.u32 	%r12, %tid.y;
	mad.lo.s32 	%r2, %r10, %r11, %r12;
	mul.lo.s32 	%r13, %r4, %r3;
	setp.ge.s32 	%p1, %r2, %r13;
	@%p1 bra 	$L__BB15_2;

	cvta.to.global.u64 	%rd8, %rd1;
	mul.wide.s32 	%rd9, %r2, 4;
	add.s64 	%rd10, %rd8, %rd9;
	cvta.to.global.u64 	%rd11, %rd2;
	mul.wide.s32 	%rd12, %r1, 4;
	add.s64 	%rd13, %rd11, %rd12;
	ld.global.nc.f32 	%f1, [%rd13];
	ld.global.nc.f32 	%f2, [%rd10];
	cvta.to.global.u64 	%rd14, %rd3;
	add.s64 	%rd15, %rd14, %rd12;
	cvta.to.global.u64 	%rd16, %rd4;
	add.s64 	%rd17, %rd16, %rd9;
	cvta.to.global.u64 	%rd18, %rd5;
	add.s64 	%rd19, %rd18, %rd12;
	ld.global.nc.f32 	%f3, [%rd19];
	ld.global.nc.f32 	%f4, [%rd17];
	sub.ftz.f32 	%f5, %f4, %f3;
	ld.global.nc.f32 	%f6, [%rd15];
	mul.ftz.f32 	%f7, %f6, %f5;
	fma.rn.ftz.f32 	%f8, %f2, %f1, %f7;
	cvta.to.global.u64 	%rd20, %rd6;
	add.s64 	%rd21, %rd20, %rd12;
	ld.global.nc.f32 	%f9, [%rd21];
	add.ftz.f32 	%f10, %f9, %f8;
	cvta.to.global.u64 	%rd22, %rd7;
	add.s64 	%rd23, %rd22, %rd9;
	st.global.f32 	[%rd23], %f10;

$L__BB15_2:
	ret;

}
	// .globl	derivativeWeight_2
.visible .entry derivativeWeight_2(
	.param .u64 derivativeWeight_2_param_0,
	.param .u64 derivativeWeight_2_param_1,
	.param .u64 derivativeWeight_2_param_2,
	.param .u64 derivativeWeight_2_param_3,
	.param .u64 derivativeWeight_2_param_4,
	.param .u64 derivativeWeight_2_param_5,
	.param .u32 derivativeWeight_2_param_6,
	.param .u32 derivativeWeight_2_param_7
)
{
	.reg .pred 	%p<7>;
	.reg .f32 	%f<66>;
	.reg .b32 	%r<49>;
	.reg .b64 	%rd<33>;


	ld.param.u64 	%rd9, [derivativeWeight_2_param_0];
	ld.param.u64 	%rd10, [derivativeWeight_2_param_1];
	ld.param.u64 	%rd5, [derivativeWeight_2_param_2];
	ld.param.u64 	%rd6, [derivativeWeight_2_param_3];
	ld.param.u64 	%rd7, [derivativeWeight_2_param_4];
	ld.param.u64 	%rd8, [derivativeWeight_2_param_5];
	ld.param.u32 	%r26, [derivativeWeight_2_param_6];
	ld.param.u32 	%r27, [derivativeWeight_2_param_7];
	cvta.to.global.u64 	%rd1, %rd10;
	cvta.to.global.u64 	%rd2, %rd9;
	mov.u32 	%r28, %ctaid.x;
	mov.u32 	%r29, %ntid.x;
	mul.lo.s32 	%r1, %r29, %r28;
	mov.u32 	%r2, %tid.x;
	add.s32 	%r3, %r1, %r2;
	setp.ge.s32 	%p1, %r3, %r27;
	@%p1 bra 	$L__BB16_9;

	cvta.to.global.u64 	%rd11, %rd7;
	mul.wide.s32 	%rd12, %r3, 4;
	add.s64 	%rd3, %rd11, %rd12;
	ld.global.f32 	%f64, [%rd3];
	cvta.to.global.u64 	%rd13, %rd8;
	add.s64 	%rd4, %rd13, %rd12;
	ld.global.f32 	%f65, [%rd4];
	cvta.to.global.u64 	%rd14, %rd6;
	add.s64 	%rd15, %rd14, %rd12;
	ld.global.nc.f32 	%f3, [%rd15];
	cvta.to.global.u64 	%rd16, %rd5;
	add.s64 	%rd17, %rd16, %rd12;
	ld.global.nc.f32 	%f4, [%rd17];
	setp.lt.s32 	%p2, %r26, 1;
	@%p2 bra 	$L__BB16_8;

	add.s32 	%r31, %r26, -1;
	and.b32  	%r48, %r26, 3;
	setp.lt.u32 	%p3, %r31, 3;
	mov.u32 	%r46, 0;
	@%p3 bra 	$L__BB16_5;

	add.s32 	%r33, %r2, %r27;
	add.s32 	%r44, %r33, %r1;
	shl.b32 	%r6, %r27, 2;
	shl.b32 	%r34, %r27, 1;
	add.s32 	%r43, %r3, %r34;
	mad.lo.s32 	%r42, %r27, 3, %r3;
	sub.s32 	%r9, %r48, %r26;
	mov.u32 	%r41, %r3;

$L__BB16_4:
	cvt.rn.f32.s32 	%f20, %r41;
	cvt.rmi.ftz.f32.f32 	%f21, %f20;
	cvt.rzi.ftz.s32.f32 	%r35, %f21;
	mul.wide.s32 	%rd18, %r35, 4;
	add.s64 	%rd19, %rd2, %rd18;
	ld.global.nc.f32 	%f22, [%rd19];
	add.ftz.f32 	%f23, %f64, %f22;
	add.s64 	%rd20, %rd1, %rd18;
	ld.global.nc.f32 	%f24, [%rd20];
	sub.ftz.f32 	%f25, %f24, %f4;
	div.approx.ftz.f32 	%f26, %f25, %f3;
	fma.rn.ftz.f32 	%f27, %f22, %f26, %f65;
	cvt.rn.f32.s32 	%f28, %r44;
	cvt.rmi.ftz.f32.f32 	%f29, %f28;
	cvt.rzi.ftz.s32.f32 	%r36, %f29;
	mul.wide.s32 	%rd21, %r36, 4;
	add.s64 	%rd22, %rd2, %rd21;
	ld.global.nc.f32 	%f30, [%rd22];
	add.ftz.f32 	%f31, %f23, %f30;
	add.s64 	%rd23, %rd1, %rd21;
	ld.global.nc.f32 	%f32, [%rd23];
	sub.ftz.f32 	%f33, %f32, %f4;
	div.approx.ftz.f32 	%f34, %f33, %f3;
	fma.rn.ftz.f32 	%f35, %f30, %f34, %f27;
	cvt.rn.f32.s32 	%f36, %r43;
	cvt.rmi.ftz.f32.f32 	%f37, %f36;
	cvt.rzi.ftz.s32.f32 	%r37, %f37;
	mul.wide.s32 	%rd24, %r37, 4;
	add.s64 	%rd25, %rd2, %rd24;
	ld.global.nc.f32 	%f38, [%rd25];
	add.ftz.f32 	%f39, %f31, %f38;
	add.s64 	%rd26, %rd1, %rd24;
	ld.global.nc.f32 	%f40, [%rd26];
	sub.ftz.f32 	%f41, %f40, %f4;
	div.approx.ftz.f32 	%f42, %f41, %f3;
	fma.rn.ftz.f32 	%f43, %f38, %f42, %f35;
	cvt.rn.f32.s32 	%f44, %r42;
	cvt.rmi.ftz.f32.f32 	%f45, %f44;
	cvt.rzi.ftz.s32.f32 	%r38, %f45;
	mul.wide.s32 	%rd27, %r38, 4;
	add.s64 	%rd28, %rd2, %rd27;
	ld.global.nc.f32 	%f46, [%rd28];
	add.ftz.f32 	%f64, %f39, %f46;
	add.s64 	%rd29, %rd1, %rd27;
	ld.global.nc.f32 	%f47, [%rd29];
	sub.ftz.f32 	%f48, %f47, %f4;
	div.approx.ftz.f32 	%f49, %f48, %f3;
	fma.rn.ftz.f32 	%f65, %f46, %f49, %f43;
	add.s32 	%r44, %r44, %r6;
	add.s32 	%r43, %r43, %r6;
	add.s32 	%r42, %r42, %r6;
	add.s32 	%r41, %r41, %r6;
	add.s32 	%r46, %r46, 4;
	add.s32 	%r39, %r9, %r46;
	setp.ne.s32 	%p4, %r39, 0;
	@%p4 bra 	$L__BB16_4;

$L__BB16_5:
	setp.eq.s32 	%p5, %r48, 0;
	@%p5 bra 	$L__BB16_8;

	mad.lo.s32 	%r47, %r46, %r27, %r3;

$L__BB16_7:
	.pragma "nounroll";
	cvt.rn.f32.s32 	%f50, %r47;
	cvt.rmi.ftz.f32.f32 	%f51, %f50;
	cvt.rzi.ftz.s32.f32 	%r40, %f51;
	mul.wide.s32 	%rd30, %r40, 4;
	add.s64 	%rd31, %rd2, %rd30;
	ld.global.nc.f32 	%f52, [%rd31];
	add.ftz.f32 	%f64, %f64, %f52;
	add.s64 	%rd32, %rd1, %rd30;
	ld.global.nc.f32 	%f53, [%rd32];
	sub.ftz.f32 	%f54, %f53, %f4;
	div.approx.ftz.f32 	%f55, %f54, %f3;
	fma.rn.ftz.f32 	%f65, %f52, %f55, %f65;
	add.s32 	%r47, %r47, %r27;
	add.s32 	%r48, %r48, -1;
	setp.ne.s32 	%p6, %r48, 0;
	@%p6 bra 	$L__BB16_7;

$L__BB16_8:
	st.global.f32 	[%rd3], %f64;
	st.global.f32 	[%rd4], %f65;

$L__BB16_9:
	ret;

}
	// .globl	findVariance_part
.visible .entry findVariance_part(
	.param .u64 findVariance_part_param_0,
	.param .u64 findVariance_part_param_1,
	.param .u64 findVariance_part_param_2,
	.param .u32 findVariance_part_param_3,
	.param .u32 findVariance_part_param_4
)
{
	.reg .pred 	%p<7>;
	.reg .f32 	%f<31>;
	.reg .b32 	%r<22>;
	.reg .b64 	%rd<23>;


	ld.param.u64 	%rd11, [findVariance_part_param_0];
	ld.param.u64 	%rd9, [findVariance_part_param_1];
	ld.param.u64 	%rd10, [findVariance_part_param_2];
	ld.param.u32 	%r13, [findVariance_part_param_3];
	ld.param.u32 	%r12, [findVariance_part_param_4];
	cvta.to.global.u64 	%rd1, %rd11;
	mov.u32 	%r14, %ctaid.x;
	mov.u32 	%r15, %ntid.x;
	mov.u32 	%r16, %tid.x;
	mad.lo.s32 	%r1, %r15, %r14, %r16;
	setp.ge.s32 	%p1, %r1, %r13;
	@%p1 bra 	$L__BB17_9;

	cvta.to.global.u64 	%rd12, %rd9;
	cvt.s64.s32 	%rd2, %r1;
	mul.wide.s32 	%rd13, %r1, 4;
	add.s64 	%rd14, %rd12, %rd13;
	ld.global.nc.f32 	%f1, [%rd14];
	mul.lo.s32 	%r20, %r1, %r12;
	setp.lt.s32 	%p2, %r12, 1;
	mov.f32 	%f30, 0f00000000;
	@%p2 bra 	$L__BB17_8;

	add.s32 	%r17, %r12, -1;
	and.b32  	%r21, %r12, 3;
	setp.lt.u32 	%p3, %r17, 3;
	mov.f32 	%f30, 0f00000000;
	@%p3 bra 	$L__BB17_5;

	sub.s32 	%r19, %r12, %r21;
	mul.wide.s32 	%rd15, %r20, 4;
	add.s64 	%rd16, %rd1, %rd15;
	add.s64 	%rd21, %rd16, 8;

$L__BB17_4:
	ld.global.nc.f32 	%f13, [%rd21+-8];
	sub.ftz.f32 	%f14, %f13, %f1;
	fma.rn.ftz.f32 	%f15, %f14, %f14, %f30;
	ld.global.nc.f32 	%f16, [%rd21+-4];
	sub.ftz.f32 	%f17, %f16, %f1;
	fma.rn.ftz.f32 	%f18, %f17, %f17, %f15;
	ld.global.nc.f32 	%f19, [%rd21];
	sub.ftz.f32 	%f20, %f19, %f1;
	fma.rn.ftz.f32 	%f21, %f20, %f20, %f18;
	ld.global.nc.f32 	%f22, [%rd21+4];
	sub.ftz.f32 	%f23, %f22, %f1;
	fma.rn.ftz.f32 	%f30, %f23, %f23, %f21;
	add.s32 	%r20, %r20, 4;
	add.s64 	%rd21, %rd21, 16;
	add.s32 	%r19, %r19, -4;
	setp.ne.s32 	%p4, %r19, 0;
	@%p4 bra 	$L__BB17_4;

$L__BB17_5:
	setp.eq.s32 	%p5, %r21, 0;
	@%p5 bra 	$L__BB17_8;

	mul.wide.s32 	%rd17, %r20, 4;
	add.s64 	%rd22, %rd1, %rd17;

$L__BB17_7:
	.pragma "nounroll";
	ld.global.nc.f32 	%f24, [%rd22];
	sub.ftz.f32 	%f25, %f24, %f1;
	fma.rn.ftz.f32 	%f30, %f25, %f25, %f30;
	add.s64 	%rd22, %rd22, 4;
	add.s32 	%r21, %r21, -1;
	setp.ne.s32 	%p6, %r21, 0;
	@%p6 bra 	$L__BB17_7;

$L__BB17_8:
	cvta.to.global.u64 	%rd18, %rd10;
	shl.b64 	%rd19, %rd2, 2;
	add.s64 	%rd20, %rd18, %rd19;
	st.global.f32 	[%rd20], %f30;

$L__BB17_9:
	ret;

}
	// .globl	normalization_part_2
.visible .entry normalization_part_2(
	.param .u64 normalization_part_2_param_0,
	.param .u64 normalization_part_2_param_1,
	.param .u64 normalization_part_2_param_2,
	.param .u64 normalization_part_2_param_3,
	.param .u64 normalization_part_2_param_4,
	.param .u64 normalization_part_2_param_5,
	.param .u64 normalization_part_2_param_6,
	.param .u32 normalization_part_2_param_7,
	.param .u32 normalization_part_2_param_8
)
{
	.reg .pred 	%p<4>;
	.reg .f32 	%f<9>;
	.reg .b32 	%r<14>;
	.reg .b64 	%rd<25>;


	ld.param.u64 	%rd1, [normalization_part_2_param_0];
	ld.param.u64 	%rd2, [normalization_part_2_param_1];
	ld.param.u64 	%rd3, [normalization_part_2_param_2];
	ld.param.u64 	%rd4, [normalization_part_2_param_3];
	ld.param.u64 	%rd5, [normalization_part_2_param_4];
	ld.param.u64 	%rd6, [normalization_part_2_param_5];
	ld.param.u64 	%rd7, [normalization_part_2_param_6];
	ld.param.u32 	%r4, [normalization_part_2_param_7];
	ld.param.u32 	%r5, [normalization_part_2_param_8];
	mov.u32 	%r6, %ntid.x;
	mov.u32 	%r7, %ctaid.x;
	mov.u32 	%r8, %tid.x;
	mad.lo.s32 	%r1, %r6, %r7, %r8;
	mov.u32 	%r9, %ctaid.y;
	mov.u32 	%r2, %ntid.y;
	mov.u32 	%r10, %tid.y;
	mad.lo.s32 	%r3, %r2, %r9, %r10;
	setp.ge.s32 	%p1, %r1, %r4;
	setp.ge.s32 	%p2, %r3, %r5;
	or.pred  	%p3, %p1, %p2;
	@%p3 bra 	$L__BB18_2;

	cvta.to.global.u64 	%rd8, %rd1;
	mov.u32 	%r11, %nctaid.y;
	mul.lo.s32 	%r12, %r11, %r2;
	mad.lo.s32 	%r13, %r12, %r1, %r3;
	mul.wide.s32 	%rd9, %r13, 4;
	add.s64 	%rd10, %rd8, %rd9;
	cvta.to.global.u64 	%rd11, %rd2;
	mul.wide.s32 	%rd12, %r1, 4;
	add.s64 	%rd13, %rd11, %rd12;
	ld.global.nc.f32 	%f1, [%rd13];
	ld.global.nc.f32 	%f2, [%rd10];
	sub.ftz.f32 	%f3, %f2, %f1;
	cvta.to.global.u64 	%rd14, %rd3;
	add.s64 	%rd15, %rd14, %rd12;
	ld.global.nc.f32 	%f4, [%rd15];
	div.approx.ftz.f32 	%f5, %f3, %f4;
	cvta.to.global.u64 	%rd16, %rd5;
	mul.wide.s32 	%rd17, %r3, 4;
	add.s64 	%rd18, %rd16, %rd17;
	ld.global.nc.f32 	%f6, [%rd18];
	cvta.to.global.u64 	%rd19, %rd6;
	add.s64 	%rd20, %rd19, %rd17;
	ld.global.nc.f32 	%f7, [%rd20];
	fma.rn.ftz.f32 	%f8, %f5, %f6, %f7;
	cvta.to.global.u64 	%rd21, %rd7;
	add.s64 	%rd22, %rd21, %rd9;
	st.global.f32 	[%rd22], %f8;
	cvta.to.global.u64 	%rd23, %rd4;
	add.s64 	%rd24, %rd23, %rd9;
	st.global.f32 	[%rd24], %f5;

$L__BB18_2:
	ret;

}
	// .globl	add_NNMatrix
.visible .entry add_NNMatrix(
	.param .u64 add_NNMatrix_param_0,
	.param .u64 add_NNMatrix_param_1,
	.param .u32 add_NNMatrix_param_2,
	.param .u32 add_NNMatrix_param_3
)
{
	.reg .pred 	%p<7>;
	.reg .f32 	%f<18>;
	.reg .b32 	%r<49>;
	.reg .f64 	%fd<23>;
	.reg .b64 	%rd<17>;


	ld.param.u64 	%rd4, [add_NNMatrix_param_0];
	ld.param.u64 	%rd3, [add_NNMatrix_param_1];
	ld.param.u32 	%r26, [add_NNMatrix_param_2];
	ld.param.u32 	%r27, [add_NNMatrix_param_3];
	cvta.to.global.u64 	%rd1, %rd4;
	mov.u32 	%r28, %ctaid.x;
	mov.u32 	%r29, %ntid.x;
	mul.lo.s32 	%r1, %r29, %r28;
	mov.u32 	%r2, %tid.x;
	add.s32 	%r3, %r1, %r2;
	setp.ge.s32 	%p1, %r3, %r27;
	@%p1 bra 	$L__BB19_9;

	cvta.to.global.u64 	%rd5, %rd3;
	mul.wide.s32 	%rd6, %r3, 4;
	add.s64 	%rd2, %rd5, %rd6;
	ld.global.f32 	%f1, [%rd2];
	cvt.ftz.f64.f32 	%fd22, %f1;
	setp.lt.s32 	%p2, %r26, 1;
	@%p2 bra 	$L__BB19_8;

	add.s32 	%r31, %r26, -1;
	and.b32  	%r48, %r26, 3;
	setp.lt.u32 	%p3, %r31, 3;
	mov.u32 	%r46, 0;
	@%p3 bra 	$L__BB19_5;

	add.s32 	%r33, %r2, %r27;
	add.s32 	%r44, %r33, %r1;
	shl.b32 	%r6, %r27, 2;
	shl.b32 	%r34, %r27, 1;
	add.s32 	%r43, %r3, %r34;
	mad.lo.s32 	%r42, %r27, 3, %r3;
	sub.s32 	%r9, %r48, %r26;
	mov.u32 	%r41, %r3;

$L__BB19_4:
	cvt.rn.f32.s32 	%f2, %r41;
	cvt.rmi.ftz.f32.f32 	%f3, %f2;
	cvt.rzi.ftz.s32.f32 	%r35, %f3;
	mul.wide.s32 	%rd7, %r35, 4;
	add.s64 	%rd8, %rd1, %rd7;
	ld.global.nc.f32 	%f4, [%rd8];
	cvt.ftz.f64.f32 	%fd10, %f4;
	add.f64 	%fd11, %fd22, %fd10;
	cvt.rn.f32.s32 	%f5, %r44;
	cvt.rmi.ftz.f32.f32 	%f6, %f5;
	cvt.rzi.ftz.s32.f32 	%r36, %f6;
	mul.wide.s32 	%rd9, %r36, 4;
	add.s64 	%rd10, %rd1, %rd9;
	ld.global.nc.f32 	%f7, [%rd10];
	cvt.ftz.f64.f32 	%fd12, %f7;
	add.f64 	%fd13, %fd11, %fd12;
	cvt.rn.f32.s32 	%f8, %r43;
	cvt.rmi.ftz.f32.f32 	%f9, %f8;
	cvt.rzi.ftz.s32.f32 	%r37, %f9;
	mul.wide.s32 	%rd11, %r37, 4;
	add.s64 	%rd12, %rd1, %rd11;
	ld.global.nc.f32 	%f10, [%rd12];
	cvt.ftz.f64.f32 	%fd14, %f10;
	add.f64 	%fd15, %fd13, %fd14;
	cvt.rn.f32.s32 	%f11, %r42;
	cvt.rmi.ftz.f32.f32 	%f12, %f11;
	cvt.rzi.ftz.s32.f32 	%r38, %f12;
	mul.wide.s32 	%rd13, %r38, 4;
	add.s64 	%rd14, %rd1, %rd13;
	ld.global.nc.f32 	%f13, [%rd14];
	cvt.ftz.f64.f32 	%fd16, %f13;
	add.f64 	%fd22, %fd15, %fd16;
	add.s32 	%r44, %r44, %r6;
	add.s32 	%r43, %r43, %r6;
	add.s32 	%r42, %r42, %r6;
	add.s32 	%r41, %r41, %r6;
	add.s32 	%r46, %r46, 4;
	add.s32 	%r39, %r9, %r46;
	setp.ne.s32 	%p4, %r39, 0;
	@%p4 bra 	$L__BB19_4;

$L__BB19_5:
	setp.eq.s32 	%p5, %r48, 0;
	@%p5 bra 	$L__BB19_8;

	mad.lo.s32 	%r47, %r46, %r27, %r3;

$L__BB19_7:
	.pragma "nounroll";
	cvt.rn.f32.s32 	%f14, %r47;
	cvt.rmi.ftz.f32.f32 	%f15, %f14;
	cvt.rzi.ftz.s32.f32 	%r40, %f15;
	mul.wide.s32 	%rd15, %r40, 4;
	add.s64 	%rd16, %rd1, %rd15;
	ld.global.nc.f32 	%f16, [%rd16];
	cvt.ftz.f64.f32 	%fd17, %f16;
	add.f64 	%fd22, %fd22, %fd17;
	add.s32 	%r47, %r47, %r27;
	add.s32 	%r48, %r48, -1;
	setp.ne.s32 	%p6, %r48, 0;
	@%p6 bra 	$L__BB19_7;

$L__BB19_8:
	cvt.rn.ftz.f32.f64 	%f17, %fd22;
	st.global.f32 	[%rd2], %f17;

$L__BB19_9:
	ret;

}
	// .globl	reverse
.visible .entry reverse(
	.param .u64 reverse_param_0,
	.param .u32 reverse_param_1,
	.param .u32 reverse_param_2,
	.param .u32 reverse_param_3
)
{



	ret;

}
	// .globl	set2
.visible .entry set2(
	.param .u64 set2_param_0,
	.param .u32 set2_param_1,
	.param .u32 set2_param_2,
	.param .u32 set2_param_3,
	.param .u32 set2_param_4,
	.param .u32 set2_param_5,
	.param .f32 set2_param_6
)
{
	.reg .f32 	%f<2>;
	.reg .b32 	%r<8>;
	.reg .b64 	%rd<5>;


	ld.param.u64 	%rd1, [set2_param_0];
	ld.param.u32 	%r1, [set2_param_1];
	ld.param.u32 	%r2, [set2_param_2];
	ld.param.u32 	%r3, [set2_param_3];
	ld.param.u32 	%r4, [set2_param_4];
	ld.param.u32 	%r5, [set2_param_5];
	ld.param.f32 	%f1, [set2_param_6];
	cvta.to.global.u64 	%rd2, %rd1;
	mad.lo.s32 	%r6, %r4, %r1, %r2;
	mad.lo.s32 	%r7, %r6, %r5, %r3;
	mul.wide.s32 	%rd3, %r7, 4;
	add.s64 	%rd4, %rd2, %rd3;
	st.global.f32 	[%rd4], %f1;
	ret;

}
	// .globl	MatAdd
.visible .entry MatAdd(
	.param .u64 MatAdd_param_0,
	.param .u64 MatAdd_param_1,
	.param .u32 MatAdd_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<3>;
	.reg .b32 	%r<6>;
	.reg .b64 	%rd<8>;


	ld.param.u64 	%rd1, [MatAdd_param_0];
	ld.param.u64 	%rd2, [MatAdd_param_1];
	ld.param.u32 	%r2, [MatAdd_param_2];
	mov.u32 	%r3, %ntid.x;
	mov.u32 	%r4, %ctaid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB22_2;

	cvta.to.global.u64 	%rd3, %rd2;
	cvta.to.global.u64 	%rd4, %rd1;
	mul.wide.s32 	%rd5, %r1, 4;
	add.s64 	%rd6, %rd4, %rd5;
	add.s64 	%rd7, %rd3, %rd5;
	ld.global.nc.f32 	%f1, [%rd7];
	atom.global.add.f32 	%f2, [%rd6], %f1;

$L__BB22_2:
	ret;

}
	// .globl	matrixDiv
.visible .entry matrixDiv(
	.param .u64 matrixDiv_param_0,
	.param .f32 matrixDiv_param_1,
	.param .u32 matrixDiv_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<4>;
	.reg .b32 	%r<6>;
	.reg .b64 	%rd<5>;


	ld.param.u64 	%rd1, [matrixDiv_param_0];
	ld.param.f32 	%f1, [matrixDiv_param_1];
	ld.param.u32 	%r2, [matrixDiv_param_2];
	mov.u32 	%r3, %ntid.x;
	mov.u32 	%r4, %ctaid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB23_2;

	cvta.to.global.u64 	%rd2, %rd1;
	mul.wide.s32 	%rd3, %r1, 4;
	add.s64 	%rd4, %rd2, %rd3;
	ld.global.f32 	%f2, [%rd4];
	div.approx.ftz.f32 	%f3, %f2, %f1;
	st.global.f32 	[%rd4], %f3;

$L__BB23_2:
	ret;

}
	// .globl	vectorScalarSet
.visible .entry vectorScalarSet(
	.param .u64 vectorScalarSet_param_0,
	.param .f32 vectorScalarSet_param_1,
	.param .u32 vectorScalarSet_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<2>;
	.reg .b32 	%r<6>;
	.reg .b64 	%rd<5>;


	ld.param.u64 	%rd1, [vectorScalarSet_param_0];
	ld.param.f32 	%f1, [vectorScalarSet_param_1];
	ld.param.u32 	%r2, [vectorScalarSet_param_2];
	mov.u32 	%r3, %ntid.x;
	mov.u32 	%r4, %ctaid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB24_2;

	cvta.to.global.u64 	%rd2, %rd1;
	mul.wide.s32 	%rd3, %r1, 4;
	add.s64 	%rd4, %rd2, %rd3;
	st.global.f32 	[%rd4], %f1;

$L__BB24_2:
	ret;

}
	// .globl	addCopy
.visible .entry addCopy(
	.param .u64 addCopy_param_0,
	.param .u64 addCopy_param_1,
	.param .u32 addCopy_param_2,
	.param .u32 addCopy_param_3,
	.param .u32 addCopy_param_4,
	.param .u32 addCopy_param_5
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<2>;
	.reg .b32 	%r<19>;
	.reg .b64 	%rd<9>;


	ld.param.u64 	%rd1, [addCopy_param_0];
	ld.param.u64 	%rd2, [addCopy_param_1];
	ld.param.u32 	%r7, [addCopy_param_2];
	ld.param.u32 	%r4, [addCopy_param_3];
	ld.param.u32 	%r5, [addCopy_param_4];
	ld.param.u32 	%r6, [addCopy_param_5];
	mov.u32 	%r8, %ntid.x;
	mov.u32 	%r9, %ctaid.x;
	mov.u32 	%r10, %tid.x;
	mad.lo.s32 	%r1, %r8, %r9, %r10;
	mov.u32 	%r11, %ctaid.y;
	mov.u32 	%r12, %ntid.y;
	mov.u32 	%r13, %tid.y;
	mad.lo.s32 	%r2, %r12, %r11, %r13;
	mov.u32 	%r14, %nctaid.y;
	mul.lo.s32 	%r15, %r14, %r12;
	mad.lo.s32 	%r3, %r15, %r1, %r2;
	mul.lo.s32 	%r16, %r5, %r7;
	setp.ge.s32 	%p1, %r3, %r16;
	@%p1 bra 	$L__BB25_2;

	cvta.to.global.u64 	%rd3, %rd1;
	mad.lo.s32 	%r17, %r1, %r4, %r2;
	mad.lo.s32 	%r18, %r6, %r5, %r17;
	mul.wide.s32 	%rd4, %r3, 4;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.nc.f32 	%f1, [%rd5];
	cvta.to.global.u64 	%rd6, %rd2;
	mul.wide.s32 	%rd7, %r18, 4;
	add.s64 	%rd8, %rd6, %rd7;
	st.global.f32 	[%rd8], %f1;

$L__BB25_2:
	ret;

}
	// .globl	normalization_part_1
.visible .entry normalization_part_1(
	.param .u64 normalization_part_1_param_0,
	.param .u64 normalization_part_1_param_1,
	.param .u32 normalization_part_1_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<4>;
	.reg .b32 	%r<6>;
	.reg .b64 	%rd<8>;


	ld.param.u64 	%rd1, [normalization_part_1_param_0];
	ld.param.u64 	%rd2, [normalization_part_1_param_1];
	ld.param.u32 	%r2, [normalization_part_1_param_2];
	mov.u32 	%r3, %ntid.x;
	mov.u32 	%r4, %ctaid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB26_2;

	cvta.to.global.u64 	%rd3, %rd2;
	mul.wide.s32 	%rd4, %r1, 4;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.nc.f32 	%f1, [%rd5];
	add.ftz.f32 	%f2, %f1, 0f3A83126F;
	sqrt.approx.ftz.f32 	%f3, %f2;
	cvta.to.global.u64 	%rd6, %rd1;
	add.s64 	%rd7, %rd6, %rd4;
	st.global.f32 	[%rd7], %f3;

$L__BB26_2:
	ret;

}
	// .globl	NormalizationLayerForward2D
.visible .entry NormalizationLayerForward2D(
	.param .u64 NormalizationLayerForward2D_param_0,
	.param .u64 NormalizationLayerForward2D_param_1,
	.param .u64 NormalizationLayerForward2D_param_2,
	.param .u32 NormalizationLayerForward2D_param_3,
	.param .u32 NormalizationLayerForward2D_param_4,
	.param .u32 NormalizationLayerForward2D_param_5
)
{
	.reg .pred 	%p<19>;
	.reg .f32 	%f<84>;
	.reg .b32 	%r<62>;
	.reg .b64 	%rd<175>;


	ld.param.u64 	%rd38, [NormalizationLayerForward2D_param_0];
	ld.param.u64 	%rd39, [NormalizationLayerForward2D_param_1];
	ld.param.u64 	%rd40, [NormalizationLayerForward2D_param_2];
	ld.param.u32 	%r35, [NormalizationLayerForward2D_param_3];
	ld.param.u32 	%r34, [NormalizationLayerForward2D_param_4];
	ld.param.u32 	%r36, [NormalizationLayerForward2D_param_5];
	cvta.to.global.u64 	%rd1, %rd40;
	cvta.to.global.u64 	%rd2, %rd39;
	mov.u32 	%r37, %ctaid.x;
	mov.u32 	%r38, %ntid.x;
	mov.u32 	%r39, %tid.x;
	mad.lo.s32 	%r1, %r38, %r37, %r39;
	mov.u32 	%r40, %ctaid.y;
	mov.u32 	%r41, %ntid.y;
	mov.u32 	%r42, %tid.y;
	mad.lo.s32 	%r2, %r41, %r40, %r42;
	setp.ge.s32 	%p1, %r1, %r36;
	setp.ge.s32 	%p2, %r2, %r35;
	or.pred  	%p3, %p2, %p1;
	@%p3 bra 	$L__BB27_22;

	cvta.to.global.u64 	%rd3, %rd38;
	ld.global.u64 	%rd41, [%rd3+24];
	cvta.to.global.u64 	%rd42, %rd41;
	cvt.s64.s32 	%rd4, %r1;
	mul.wide.s32 	%rd43, %r1, 8;
	add.s64 	%rd44, %rd42, %rd43;
	ld.global.u64 	%rd45, [%rd44];
	cvta.to.global.u64 	%rd46, %rd45;
	cvt.s64.s32 	%rd5, %r2;
	mul.wide.s32 	%rd47, %r2, 4;
	add.s64 	%rd6, %rd46, %rd47;
	ld.global.f32 	%f78, [%rd6];
	mul.lo.s32 	%r60, %r2, %r34;
	setp.lt.s32 	%p4, %r34, 1;
	@%p4 bra 	$L__BB27_8;

	ld.global.u64 	%rd48, [%rd3+16];
	cvta.to.global.u64 	%rd49, %rd48;
	shl.b64 	%rd50, %rd4, 3;
	add.s64 	%rd51, %rd49, %rd50;
	ld.global.u64 	%rd52, [%rd51];
	cvta.to.global.u64 	%rd7, %rd52;
	and.b32  	%r51, %r34, 3;
	add.s32 	%r43, %r34, -1;
	setp.lt.u32 	%p5, %r43, 3;
	mov.u32 	%r50, %r60;
	@%p5 bra 	$L__BB27_5;

	sub.s32 	%r49, %r34, %r51;
	mul.wide.s32 	%rd53, %r60, 4;
	add.s64 	%rd54, %rd7, %rd53;
	add.s64 	%rd165, %rd54, 8;
	mov.u32 	%r50, %r60;

$L__BB27_4:
	ld.global.f32 	%f19, [%rd165+-8];
	add.ftz.f32 	%f20, %f78, %f19;
	ld.global.f32 	%f21, [%rd165+-4];
	add.ftz.f32 	%f22, %f20, %f21;
	ld.global.f32 	%f23, [%rd165];
	add.ftz.f32 	%f24, %f22, %f23;
	ld.global.f32 	%f25, [%rd165+4];
	add.ftz.f32 	%f78, %f24, %f25;
	add.s32 	%r50, %r50, 4;
	add.s64 	%rd165, %rd165, 16;
	add.s32 	%r49, %r49, -4;
	setp.ne.s32 	%p6, %r49, 0;
	@%p6 bra 	$L__BB27_4;

$L__BB27_5:
	setp.eq.s32 	%p7, %r51, 0;
	@%p7 bra 	$L__BB27_8;

	mul.wide.s32 	%rd55, %r50, 4;
	add.s64 	%rd166, %rd7, %rd55;

$L__BB27_7:
	.pragma "nounroll";
	ld.global.f32 	%f26, [%rd166];
	add.ftz.f32 	%f78, %f78, %f26;
	add.s64 	%rd166, %rd166, 4;
	add.s32 	%r51, %r51, -1;
	setp.ne.s32 	%p8, %r51, 0;
	@%p8 bra 	$L__BB27_7;

$L__BB27_8:
	st.global.f32 	[%rd6], %f78;
	ld.global.u64 	%rd56, [%rd3+32];
	cvta.to.global.u64 	%rd57, %rd56;
	shl.b64 	%rd58, %rd4, 3;
	add.s64 	%rd59, %rd57, %rd58;
	ld.global.u64 	%rd60, [%rd59];
	cvta.to.global.u64 	%rd61, %rd60;
	shl.b64 	%rd62, %rd5, 2;
	add.s64 	%rd14, %rd61, %rd62;
	ld.global.f32 	%f83, [%rd14];
	@%p4 bra 	$L__BB27_15;

	ld.global.u64 	%rd63, [%rd3+16];
	cvta.to.global.u64 	%rd64, %rd63;
	add.s64 	%rd66, %rd64, %rd58;
	ld.global.u64 	%rd67, [%rd66];
	cvta.to.global.u64 	%rd15, %rd67;
	and.b32  	%r55, %r34, 3;
	add.s32 	%r44, %r34, -1;
	setp.lt.u32 	%p10, %r44, 3;
	mov.u32 	%r54, %r60;
	@%p10 bra 	$L__BB27_12;

	sub.s32 	%r53, %r34, %r55;
	mul.wide.s32 	%rd68, %r60, 4;
	add.s64 	%rd69, %rd15, %rd68;
	add.s64 	%rd167, %rd69, 8;
	mov.u32 	%r54, %r60;

$L__BB27_11:
	ld.global.f32 	%f28, [%rd167+-8];
	sub.ftz.f32 	%f29, %f28, %f78;
	fma.rn.ftz.f32 	%f30, %f29, %f29, %f83;
	ld.global.f32 	%f31, [%rd167+-4];
	sub.ftz.f32 	%f32, %f31, %f78;
	fma.rn.ftz.f32 	%f33, %f32, %f32, %f30;
	ld.global.f32 	%f34, [%rd167];
	sub.ftz.f32 	%f35, %f34, %f78;
	fma.rn.ftz.f32 	%f36, %f35, %f35, %f33;
	ld.global.f32 	%f37, [%rd167+4];
	sub.ftz.f32 	%f38, %f37, %f78;
	fma.rn.ftz.f32 	%f83, %f38, %f38, %f36;
	add.s32 	%r54, %r54, 4;
	add.s64 	%rd167, %rd167, 16;
	add.s32 	%r53, %r53, -4;
	setp.ne.s32 	%p11, %r53, 0;
	@%p11 bra 	$L__BB27_11;

$L__BB27_12:
	setp.eq.s32 	%p12, %r55, 0;
	@%p12 bra 	$L__BB27_15;

	mul.wide.s32 	%rd70, %r54, 4;
	add.s64 	%rd168, %rd15, %rd70;

$L__BB27_14:
	.pragma "nounroll";
	ld.global.f32 	%f39, [%rd168];
	sub.ftz.f32 	%f40, %f39, %f78;
	fma.rn.ftz.f32 	%f83, %f40, %f40, %f83;
	add.s64 	%rd168, %rd168, 4;
	add.s32 	%r55, %r55, -1;
	setp.ne.s32 	%p13, %r55, 0;
	@%p13 bra 	$L__BB27_14;

$L__BB27_15:
	cvt.rn.f32.s32 	%f41, %r34;
	div.approx.ftz.f32 	%f42, %f83, %f41;
	st.global.f32 	[%rd14], %f42;
	add.ftz.f32 	%f43, %f42, 0f3A83126F;
	sqrt.approx.ftz.f32 	%f17, %f43;
	@%p4 bra 	$L__BB27_22;

	add.s32 	%r46, %r34, -1;
	and.b32  	%r61, %r34, 3;
	setp.lt.u32 	%p15, %r46, 3;
	mov.u32 	%r59, 0;
	@%p15 bra 	$L__BB27_19;

	sub.s32 	%r58, %r34, %r61;
	mul.wide.s32 	%rd71, %r60, 4;
	add.s64 	%rd171, %rd71, 12;
	mov.u64 	%rd169, %rd2;
	mov.u64 	%rd170, %rd1;

$L__BB27_18:
	ld.global.u64 	%rd72, [%rd3+16];
	cvta.to.global.u64 	%rd73, %rd72;
	add.s64 	%rd75, %rd73, %rd58;
	ld.global.u64 	%rd76, [%rd75];
	cvta.to.global.u64 	%rd77, %rd76;
	add.s64 	%rd78, %rd77, %rd171;
	ld.global.f32 	%f44, [%rd78+-12];
	sub.ftz.f32 	%f45, %f44, %f78;
	div.approx.ftz.f32 	%f46, %f45, %f17;
	ld.global.u64 	%rd79, [%rd3];
	cvta.to.global.u64 	%rd80, %rd79;
	add.s64 	%rd81, %rd80, %rd58;
	ld.global.u64 	%rd82, [%rd81];
	cvta.to.global.u64 	%rd83, %rd82;
	add.s64 	%rd84, %rd83, %rd171;
	st.global.f32 	[%rd84+-12], %f46;
	ld.global.nc.f32 	%f47, [%rd169];
	ld.global.nc.f32 	%f48, [%rd170];
	fma.rn.ftz.f32 	%f49, %f46, %f47, %f48;
	ld.global.u64 	%rd85, [%rd3+8];
	cvta.to.global.u64 	%rd86, %rd85;
	add.s64 	%rd87, %rd86, %rd58;
	ld.global.u64 	%rd88, [%rd87];
	cvta.to.global.u64 	%rd89, %rd88;
	add.s64 	%rd90, %rd89, %rd171;
	st.global.f32 	[%rd90+-12], %f49;
	ld.global.u64 	%rd91, [%rd3+16];
	cvta.to.global.u64 	%rd92, %rd91;
	add.s64 	%rd93, %rd92, %rd58;
	ld.global.u64 	%rd94, [%rd93];
	cvta.to.global.u64 	%rd95, %rd94;
	add.s64 	%rd96, %rd95, %rd171;
	ld.global.f32 	%f50, [%rd96+-8];
	sub.ftz.f32 	%f51, %f50, %f78;
	div.approx.ftz.f32 	%f52, %f51, %f17;
	ld.global.u64 	%rd97, [%rd3];
	cvta.to.global.u64 	%rd98, %rd97;
	add.s64 	%rd99, %rd98, %rd58;
	ld.global.u64 	%rd100, [%rd99];
	cvta.to.global.u64 	%rd101, %rd100;
	add.s64 	%rd102, %rd101, %rd171;
	st.global.f32 	[%rd102+-8], %f52;
	ld.global.nc.f32 	%f53, [%rd169+4];
	ld.global.nc.f32 	%f54, [%rd170+4];
	fma.rn.ftz.f32 	%f55, %f52, %f53, %f54;
	ld.global.u64 	%rd103, [%rd3+8];
	cvta.to.global.u64 	%rd104, %rd103;
	add.s64 	%rd105, %rd104, %rd58;
	ld.global.u64 	%rd106, [%rd105];
	cvta.to.global.u64 	%rd107, %rd106;
	add.s64 	%rd108, %rd107, %rd171;
	st.global.f32 	[%rd108+-8], %f55;
	ld.global.u64 	%rd109, [%rd3+16];
	cvta.to.global.u64 	%rd110, %rd109;
	add.s64 	%rd111, %rd110, %rd58;
	ld.global.u64 	%rd112, [%rd111];
	cvta.to.global.u64 	%rd113, %rd112;
	add.s64 	%rd114, %rd113, %rd171;
	ld.global.f32 	%f56, [%rd114+-4];
	sub.ftz.f32 	%f57, %f56, %f78;
	div.approx.ftz.f32 	%f58, %f57, %f17;
	ld.global.u64 	%rd115, [%rd3];
	cvta.to.global.u64 	%rd116, %rd115;
	add.s64 	%rd117, %rd116, %rd58;
	ld.global.u64 	%rd118, [%rd117];
	cvta.to.global.u64 	%rd119, %rd118;
	add.s64 	%rd120, %rd119, %rd171;
	st.global.f32 	[%rd120+-4], %f58;
	ld.global.nc.f32 	%f59, [%rd169+8];
	ld.global.nc.f32 	%f60, [%rd170+8];
	fma.rn.ftz.f32 	%f61, %f58, %f59, %f60;
	ld.global.u64 	%rd121, [%rd3+8];
	cvta.to.global.u64 	%rd122, %rd121;
	add.s64 	%rd123, %rd122, %rd58;
	ld.global.u64 	%rd124, [%rd123];
	cvta.to.global.u64 	%rd125, %rd124;
	add.s64 	%rd126, %rd125, %rd171;
	st.global.f32 	[%rd126+-4], %f61;
	ld.global.u64 	%rd127, [%rd3+16];
	cvta.to.global.u64 	%rd128, %rd127;
	add.s64 	%rd129, %rd128, %rd58;
	ld.global.u64 	%rd130, [%rd129];
	cvta.to.global.u64 	%rd131, %rd130;
	add.s64 	%rd132, %rd131, %rd171;
	ld.global.f32 	%f62, [%rd132];
	sub.ftz.f32 	%f63, %f62, %f78;
	div.approx.ftz.f32 	%f64, %f63, %f17;
	ld.global.u64 	%rd133, [%rd3];
	cvta.to.global.u64 	%rd134, %rd133;
	add.s64 	%rd135, %rd134, %rd58;
	ld.global.u64 	%rd136, [%rd135];
	cvta.to.global.u64 	%rd137, %rd136;
	add.s64 	%rd138, %rd137, %rd171;
	st.global.f32 	[%rd138], %f64;
	ld.global.nc.f32 	%f65, [%rd169+12];
	ld.global.nc.f32 	%f66, [%rd170+12];
	fma.rn.ftz.f32 	%f67, %f64, %f65, %f66;
	ld.global.u64 	%rd139, [%rd3+8];
	cvta.to.global.u64 	%rd140, %rd139;
	add.s64 	%rd141, %rd140, %rd58;
	ld.global.u64 	%rd142, [%rd141];
	cvta.to.global.u64 	%rd143, %rd142;
	add.s64 	%rd144, %rd143, %rd171;
	st.global.f32 	[%rd144], %f67;
	add.s32 	%r59, %r59, 4;
	add.s32 	%r60, %r60, 4;
	add.s64 	%rd171, %rd171, 16;
	add.s64 	%rd170, %rd170, 16;
	add.s64 	%rd169, %rd169, 16;
	add.s32 	%r58, %r58, -4;
	setp.ne.s32 	%p16, %r58, 0;
	@%p16 bra 	$L__BB27_18;

$L__BB27_19:
	setp.eq.s32 	%p17, %r61, 0;
	@%p17 bra 	$L__BB27_22;

	mul.wide.s32 	%rd145, %r59, 4;
	add.s64 	%rd174, %rd1, %rd145;
	add.s64 	%rd173, %rd2, %rd145;
	mul.wide.s32 	%rd172, %r60, 4;

$L__BB27_21:
	.pragma "nounroll";
	ld.global.u64 	%rd146, [%rd3+16];
	cvta.to.global.u64 	%rd147, %rd146;
	add.s64 	%rd149, %rd147, %rd58;
	ld.global.u64 	%rd150, [%rd149];
	cvta.to.global.u64 	%rd151, %rd150;
	add.s64 	%rd152, %rd151, %rd172;
	ld.global.f32 	%f68, [%rd152];
	sub.ftz.f32 	%f69, %f68, %f78;
	div.approx.ftz.f32 	%f70, %f69, %f17;
	ld.global.u64 	%rd153, [%rd3];
	cvta.to.global.u64 	%rd154, %rd153;
	add.s64 	%rd155, %rd154, %rd58;
	ld.global.u64 	%rd156, [%rd155];
	cvta.to.global.u64 	%rd157, %rd156;
	add.s64 	%rd158, %rd157, %rd172;
	st.global.f32 	[%rd158], %f70;
	ld.global.nc.f32 	%f71, [%rd173];
	ld.global.nc.f32 	%f72, [%rd174];
	fma.rn.ftz.f32 	%f73, %f70, %f71, %f72;
	ld.global.u64 	%rd159, [%rd3+8];
	cvta.to.global.u64 	%rd160, %rd159;
	add.s64 	%rd161, %rd160, %rd58;
	ld.global.u64 	%rd162, [%rd161];
	cvta.to.global.u64 	%rd163, %rd162;
	add.s64 	%rd164, %rd163, %rd172;
	st.global.f32 	[%rd164], %f73;
	add.s64 	%rd174, %rd174, 4;
	add.s64 	%rd173, %rd173, 4;
	add.s64 	%rd172, %rd172, 4;
	add.s32 	%r61, %r61, -1;
	setp.ne.s32 	%p18, %r61, 0;
	@%p18 bra 	$L__BB27_21;

$L__BB27_22:
	ret;

}
	// .globl	DenseLayerForward
.visible .entry DenseLayerForward(
	.param .u64 DenseLayerForward_param_0,
	.param .u64 DenseLayerForward_param_1,
	.param .u64 DenseLayerForward_param_2,
	.param .u32 DenseLayerForward_param_3,
	.param .u32 DenseLayerForward_param_4,
	.param .u32 DenseLayerForward_param_5
)
{
	.reg .pred 	%p<9>;
	.reg .f32 	%f<24>;
	.reg .b32 	%r<34>;
	.reg .b64 	%rd<112>;


	ld.param.u64 	%rd14, [DenseLayerForward_param_0];
	ld.param.u64 	%rd16, [DenseLayerForward_param_1];
	ld.param.u64 	%rd15, [DenseLayerForward_param_2];
	ld.param.u32 	%r17, [DenseLayerForward_param_3];
	ld.param.u32 	%r16, [DenseLayerForward_param_4];
	ld.param.u32 	%r18, [DenseLayerForward_param_5];
	cvta.to.global.u64 	%rd1, %rd16;
	mov.u32 	%r19, %ctaid.x;
	mov.u32 	%r20, %ntid.x;
	mov.u32 	%r21, %tid.x;
	mad.lo.s32 	%r1, %r20, %r19, %r21;
	mov.u32 	%r22, %ctaid.y;
	mov.u32 	%r23, %ntid.y;
	mov.u32 	%r24, %tid.y;
	mad.lo.s32 	%r2, %r23, %r22, %r24;
	setp.ge.s32 	%p1, %r1, %r18;
	setp.ge.s32 	%p2, %r2, %r17;
	or.pred  	%p3, %p2, %p1;
	@%p3 bra 	$L__BB28_9;

	mul.lo.s32 	%r32, %r2, %r16;
	cvta.to.global.u64 	%rd2, %rd14;
	ld.global.u64 	%rd17, [%rd2+8];
	cvta.to.global.u64 	%rd18, %rd17;
	cvt.s64.s32 	%rd3, %r1;
	mul.wide.s32 	%rd19, %r1, 8;
	add.s64 	%rd20, %rd18, %rd19;
	ld.global.u64 	%rd21, [%rd20];
	cvta.to.global.u64 	%rd22, %rd21;
	cvt.s64.s32 	%rd4, %r2;
	mul.wide.s32 	%rd23, %r2, 4;
	add.s64 	%rd24, %rd22, %rd23;
	ld.global.f32 	%f1, [%rd24];
	setp.lt.s32 	%p4, %r16, 1;
	@%p4 bra 	$L__BB28_8;

	add.s32 	%r26, %r16, -1;
	and.b32  	%r33, %r16, 3;
	setp.lt.u32 	%p5, %r26, 3;
	mov.u32 	%r31, 0;
	@%p5 bra 	$L__BB28_5;

	sub.s32 	%r30, %r16, %r33;
	mul.wide.s32 	%rd26, %r32, 4;
	add.s64 	%rd5, %rd1, %rd26;
	mov.u64 	%rd109, 8;
	shl.b64 	%rd29, %rd3, 3;

$L__BB28_4:
	ld.global.u64 	%rd27, [%rd2];
	cvta.to.global.u64 	%rd28, %rd27;
	add.s64 	%rd30, %rd28, %rd29;
	ld.global.u64 	%rd31, [%rd30];
	cvta.to.global.u64 	%rd32, %rd31;
	add.s64 	%rd33, %rd32, %rd109;
	add.s64 	%rd34, %rd5, %rd109;
	ld.global.f32 	%f2, [%rd34+-8];
	ld.global.f32 	%f3, [%rd33+-8];
	ld.global.u64 	%rd35, [%rd2+8];
	cvta.to.global.u64 	%rd36, %rd35;
	add.s64 	%rd37, %rd36, %rd29;
	ld.global.u64 	%rd38, [%rd37];
	cvta.to.global.u64 	%rd39, %rd38;
	shl.b64 	%rd40, %rd4, 2;
	add.s64 	%rd41, %rd39, %rd40;
	ld.global.f32 	%f4, [%rd41];
	fma.rn.ftz.f32 	%f5, %f3, %f2, %f4;
	st.global.f32 	[%rd41], %f5;
	ld.global.u64 	%rd42, [%rd2];
	cvta.to.global.u64 	%rd43, %rd42;
	add.s64 	%rd44, %rd43, %rd29;
	ld.global.u64 	%rd45, [%rd44];
	cvta.to.global.u64 	%rd46, %rd45;
	add.s64 	%rd47, %rd46, %rd109;
	ld.global.f32 	%f6, [%rd34+-4];
	ld.global.f32 	%f7, [%rd47+-4];
	ld.global.u64 	%rd48, [%rd2+8];
	cvta.to.global.u64 	%rd49, %rd48;
	add.s64 	%rd50, %rd49, %rd29;
	ld.global.u64 	%rd51, [%rd50];
	cvta.to.global.u64 	%rd52, %rd51;
	add.s64 	%rd53, %rd52, %rd40;
	ld.global.f32 	%f8, [%rd53];
	fma.rn.ftz.f32 	%f9, %f7, %f6, %f8;
	st.global.f32 	[%rd53], %f9;
	ld.global.u64 	%rd54, [%rd2];
	cvta.to.global.u64 	%rd55, %rd54;
	add.s64 	%rd56, %rd55, %rd29;
	ld.global.u64 	%rd57, [%rd56];
	cvta.to.global.u64 	%rd58, %rd57;
	add.s64 	%rd59, %rd58, %rd109;
	ld.global.f32 	%f10, [%rd34];
	ld.global.f32 	%f11, [%rd59];
	ld.global.u64 	%rd60, [%rd2+8];
	cvta.to.global.u64 	%rd61, %rd60;
	add.s64 	%rd62, %rd61, %rd29;
	ld.global.u64 	%rd63, [%rd62];
	cvta.to.global.u64 	%rd64, %rd63;
	add.s64 	%rd65, %rd64, %rd40;
	ld.global.f32 	%f12, [%rd65];
	fma.rn.ftz.f32 	%f13, %f11, %f10, %f12;
	st.global.f32 	[%rd65], %f13;
	ld.global.u64 	%rd66, [%rd2];
	cvta.to.global.u64 	%rd67, %rd66;
	add.s64 	%rd68, %rd67, %rd29;
	ld.global.u64 	%rd69, [%rd68];
	cvta.to.global.u64 	%rd70, %rd69;
	add.s64 	%rd71, %rd70, %rd109;
	ld.global.f32 	%f14, [%rd34+4];
	ld.global.f32 	%f15, [%rd71+4];
	ld.global.u64 	%rd72, [%rd2+8];
	cvta.to.global.u64 	%rd73, %rd72;
	add.s64 	%rd74, %rd73, %rd29;
	ld.global.u64 	%rd75, [%rd74];
	cvta.to.global.u64 	%rd76, %rd75;
	add.s64 	%rd77, %rd76, %rd40;
	ld.global.f32 	%f16, [%rd77];
	fma.rn.ftz.f32 	%f17, %f15, %f14, %f16;
	st.global.f32 	[%rd77], %f17;
	add.s32 	%r31, %r31, 4;
	add.s32 	%r32, %r32, 4;
	add.s64 	%rd109, %rd109, 16;
	add.s32 	%r30, %r30, -4;
	setp.ne.s32 	%p6, %r30, 0;
	@%p6 bra 	$L__BB28_4;

$L__BB28_5:
	setp.eq.s32 	%p7, %r33, 0;
	@%p7 bra 	$L__BB28_8;

	mul.wide.s32 	%rd111, %r31, 4;
	mul.wide.s32 	%rd78, %r32, 4;
	add.s64 	%rd110, %rd1, %rd78;
	shl.b64 	%rd81, %rd3, 3;

$L__BB28_7:
	.pragma "nounroll";
	ld.global.u64 	%rd79, [%rd2];
	cvta.to.global.u64 	%rd80, %rd79;
	add.s64 	%rd82, %rd80, %rd81;
	ld.global.u64 	%rd83, [%rd82];
	cvta.to.global.u64 	%rd84, %rd83;
	add.s64 	%rd85, %rd84, %rd111;
	ld.global.f32 	%f18, [%rd110];
	ld.global.f32 	%f19, [%rd85];
	ld.global.u64 	%rd86, [%rd2+8];
	cvta.to.global.u64 	%rd87, %rd86;
	add.s64 	%rd88, %rd87, %rd81;
	ld.global.u64 	%rd89, [%rd88];
	cvta.to.global.u64 	%rd90, %rd89;
	shl.b64 	%rd91, %rd4, 2;
	add.s64 	%rd92, %rd90, %rd91;
	ld.global.f32 	%f20, [%rd92];
	fma.rn.ftz.f32 	%f21, %f19, %f18, %f20;
	st.global.f32 	[%rd92], %f21;
	add.s64 	%rd111, %rd111, 4;
	add.s64 	%rd110, %rd110, 4;
	add.s32 	%r33, %r33, -1;
	setp.ne.s32 	%p8, %r33, 0;
	@%p8 bra 	$L__BB28_7;

$L__BB28_8:
	ld.global.u64 	%rd93, [%rd2+8];
	cvta.to.global.u64 	%rd94, %rd93;
	shl.b64 	%rd95, %rd3, 3;
	add.s64 	%rd96, %rd94, %rd95;
	ld.global.u64 	%rd97, [%rd96];
	cvta.to.global.u64 	%rd98, %rd97;
	shl.b64 	%rd99, %rd4, 2;
	add.s64 	%rd100, %rd98, %rd99;
	st.global.f32 	[%rd100], %f1;
	ld.global.u64 	%rd101, [%rd2+8];
	cvta.to.global.u64 	%rd102, %rd101;
	add.s64 	%rd103, %rd102, %rd95;
	ld.global.u64 	%rd104, [%rd103];
	cvta.to.global.u64 	%rd105, %rd104;
	add.s64 	%rd106, %rd105, %rd99;
	cvta.to.global.u64 	%rd107, %rd15;
	add.s64 	%rd108, %rd107, %rd99;
	ld.global.nc.f32 	%f22, [%rd108];
	atom.global.add.f32 	%f23, [%rd106], %f22;

$L__BB28_9:
	ret;

}
	// .globl	dot
.visible .entry dot(
	.param .u64 dot_param_0,
	.param .u64 dot_param_1,
	.param .u64 dot_param_2,
	.param .u32 dot_param_3,
	.param .u32 dot_param_4,
	.param .u32 dot_param_5,
	.param .u32 dot_param_6
)
{
	.reg .pred 	%p<9>;
	.reg .f32 	%f<30>;
	.reg .b32 	%r<32>;
	.reg .b64 	%rd<35>;


	ld.param.u64 	%rd18, [dot_param_0];
	ld.param.u64 	%rd19, [dot_param_1];
	ld.param.u64 	%rd17, [dot_param_2];
	ld.param.u32 	%r14, [dot_param_3];
	ld.param.u32 	%r12, [dot_param_4];
	ld.param.u32 	%r13, [dot_param_6];
	cvta.to.global.u64 	%rd1, %rd19;
	cvta.to.global.u64 	%rd2, %rd18;
	mov.u32 	%r15, %ctaid.x;
	mov.u32 	%r16, %ntid.x;
	mov.u32 	%r17, %tid.x;
	mad.lo.s32 	%r1, %r16, %r15, %r17;
	mov.u32 	%r18, %ctaid.y;
	mov.u32 	%r19, %ntid.y;
	mov.u32 	%r20, %tid.y;
	mad.lo.s32 	%r2, %r19, %r18, %r20;
	setp.ge.s32 	%p1, %r1, %r14;
	setp.ge.s32 	%p2, %r2, %r13;
	or.pred  	%p3, %p1, %p2;
	@%p3 bra 	$L__BB29_9;

	setp.lt.s32 	%p4, %r12, 1;
	mov.f32 	%f29, 0f00000000;
	@%p4 bra 	$L__BB29_8;

	add.s32 	%r22, %r12, -1;
	and.b32  	%r31, %r12, 3;
	setp.lt.u32 	%p5, %r22, 3;
	mov.f32 	%f29, 0f00000000;
	mov.u32 	%r30, 0;
	@%p5 bra 	$L__BB29_5;

	sub.s32 	%r29, %r12, %r31;
	mul.wide.s32 	%rd20, %r2, 4;
	add.s64 	%rd32, %rd1, %rd20;
	mul.lo.s32 	%r24, %r12, %r1;
	mul.wide.s32 	%rd21, %r24, 4;
	add.s64 	%rd22, %rd2, %rd21;
	add.s64 	%rd31, %rd22, 8;
	mul.wide.s32 	%rd5, %r13, 4;

$L__BB29_4:
	ld.global.nc.f32 	%f12, [%rd32];
	ld.global.nc.f32 	%f13, [%rd31+-8];
	fma.rn.ftz.f32 	%f14, %f13, %f12, %f29;
	add.s64 	%rd23, %rd32, %rd5;
	ld.global.nc.f32 	%f15, [%rd23];
	ld.global.nc.f32 	%f16, [%rd31+-4];
	fma.rn.ftz.f32 	%f17, %f16, %f15, %f14;
	add.s64 	%rd24, %rd23, %rd5;
	ld.global.nc.f32 	%f18, [%rd24];
	ld.global.nc.f32 	%f19, [%rd31];
	fma.rn.ftz.f32 	%f20, %f19, %f18, %f17;
	add.s64 	%rd25, %rd24, %rd5;
	add.s64 	%rd32, %rd25, %rd5;
	ld.global.nc.f32 	%f21, [%rd25];
	ld.global.nc.f32 	%f22, [%rd31+4];
	fma.rn.ftz.f32 	%f29, %f22, %f21, %f20;
	add.s32 	%r30, %r30, 4;
	add.s64 	%rd31, %rd31, 16;
	add.s32 	%r29, %r29, -4;
	setp.ne.s32 	%p6, %r29, 0;
	@%p6 bra 	$L__BB29_4;

$L__BB29_5:
	setp.eq.s32 	%p7, %r31, 0;
	@%p7 bra 	$L__BB29_8;

	mad.lo.s32 	%r25, %r30, %r13, %r2;
	mul.wide.s32 	%rd26, %r25, 4;
	add.s64 	%rd34, %rd1, %rd26;
	mul.wide.s32 	%rd11, %r13, 4;
	mad.lo.s32 	%r26, %r12, %r1, %r30;
	mul.wide.s32 	%rd27, %r26, 4;
	add.s64 	%rd33, %rd2, %rd27;

$L__BB29_7:
	.pragma "nounroll";
	ld.global.nc.f32 	%f23, [%rd34];
	ld.global.nc.f32 	%f24, [%rd33];
	fma.rn.ftz.f32 	%f29, %f24, %f23, %f29;
	add.s64 	%rd34, %rd34, %rd11;
	add.s64 	%rd33, %rd33, 4;
	add.s32 	%r31, %r31, -1;
	setp.ne.s32 	%p8, %r31, 0;
	@%p8 bra 	$L__BB29_7;

$L__BB29_8:
	mad.lo.s32 	%r27, %r1, %r13, %r2;
	cvta.to.global.u64 	%rd28, %rd17;
	mul.wide.s32 	%rd29, %r27, 4;
	add.s64 	%rd30, %rd28, %rd29;
	st.global.f32 	[%rd30], %f29;

$L__BB29_9:
	ret;

}
	// .globl	dropout
.visible .entry dropout(
	.param .u64 dropout_param_0,
	.param .u64 dropout_param_1,
	.param .f64 dropout_param_2,
	.param .u32 dropout_param_3
)
{
	.reg .pred 	%p<3>;
	.reg .f32 	%f<5>;
	.reg .b32 	%r<6>;
	.reg .f64 	%fd<6>;
	.reg .b64 	%rd<10>;


	ld.param.u64 	%rd2, [dropout_param_0];
	ld.param.u64 	%rd3, [dropout_param_1];
	ld.param.f64 	%fd1, [dropout_param_2];
	ld.param.u32 	%r2, [dropout_param_3];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r4, %r3, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB30_3;

	cvta.to.global.u64 	%rd4, %rd3;
	cvt.s64.s32 	%rd1, %r1;
	mul.wide.s32 	%rd5, %r1, 4;
	add.s64 	%rd6, %rd4, %rd5;
	ld.global.f32 	%f1, [%rd6];
	cvt.ftz.f64.f32 	%fd2, %f1;
	setp.leu.f64 	%p2, %fd2, %fd1;
	@%p2 bra 	$L__BB30_3;

	mov.f64 	%fd3, 0d3FF0000000000000;
	sub.f64 	%fd4, %fd3, %fd1;
	rcp.rn.f64 	%fd5, %fd4;
	cvt.rn.ftz.f32.f64 	%f2, %fd5;
	cvta.to.global.u64 	%rd7, %rd2;
	shl.b64 	%rd8, %rd1, 2;
	add.s64 	%rd9, %rd7, %rd8;
	ld.global.f32 	%f3, [%rd9];
	mul.ftz.f32 	%f4, %f3, %f2;
	st.global.f32 	[%rd9], %f4;

$L__BB30_3:
	ret;

}
	// .globl	sub_gpu
.visible .entry sub_gpu(
	.param .u64 sub_gpu_param_0,
	.param .u64 sub_gpu_param_1,
	.param .u64 sub_gpu_param_2,
	.param .u32 sub_gpu_param_3
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<4>;
	.reg .b32 	%r<6>;
	.reg .b64 	%rd<11>;


	ld.param.u64 	%rd1, [sub_gpu_param_0];
	ld.param.u64 	%rd2, [sub_gpu_param_1];
	ld.param.u64 	%rd3, [sub_gpu_param_2];
	ld.param.u32 	%r2, [sub_gpu_param_3];
	mov.u32 	%r3, %ntid.x;
	mov.u32 	%r4, %ctaid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB31_2;

	cvta.to.global.u64 	%rd4, %rd1;
	mul.wide.s32 	%rd5, %r1, 4;
	add.s64 	%rd6, %rd4, %rd5;
	cvta.to.global.u64 	%rd7, %rd2;
	add.s64 	%rd8, %rd7, %rd5;
	ld.global.nc.f32 	%f1, [%rd8];
	ld.global.nc.f32 	%f2, [%rd6];
	sub.ftz.f32 	%f3, %f2, %f1;
	cvta.to.global.u64 	%rd9, %rd3;
	add.s64 	%rd10, %rd9, %rd5;
	st.global.f32 	[%rd10], %f3;

$L__BB31_2:
	ret;

}
	// .globl	mul
.visible .entry mul(
	.param .u64 mul_param_0,
	.param .f32 mul_param_1,
	.param .u32 mul_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<4>;
	.reg .b32 	%r<6>;
	.reg .b64 	%rd<5>;


	ld.param.u64 	%rd1, [mul_param_0];
	ld.param.f32 	%f1, [mul_param_1];
	ld.param.u32 	%r2, [mul_param_2];
	mov.u32 	%r3, %ntid.x;
	mov.u32 	%r4, %ctaid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB32_2;

	cvta.to.global.u64 	%rd2, %rd1;
	mul.wide.s32 	%rd3, %r1, 4;
	add.s64 	%rd4, %rd2, %rd3;
	ld.global.f32 	%f2, [%rd4];
	mul.ftz.f32 	%f3, %f2, %f1;
	st.global.f32 	[%rd4], %f3;

$L__BB32_2:
	ret;

}
	// .globl	indexMaxElement
.visible .entry indexMaxElement(
	.param .u64 indexMaxElement_param_0,
	.param .u64 indexMaxElement_param_1,
	.param .u64 indexMaxElement_param_2,
	.param .u32 indexMaxElement_param_3
)
{
	.reg .pred 	%p<3>;
	.reg .f32 	%f<3>;
	.reg .b32 	%r<6>;
	.reg .b64 	%rd<9>;


	ld.param.u64 	%rd2, [indexMaxElement_param_0];
	ld.param.u64 	%rd4, [indexMaxElement_param_1];
	ld.param.u64 	%rd3, [indexMaxElement_param_2];
	ld.param.u32 	%r2, [indexMaxElement_param_3];
	cvta.to.global.u64 	%rd1, %rd4;
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r4, %r3, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB33_3;

	cvta.to.global.u64 	%rd5, %rd2;
	mul.wide.s32 	%rd6, %r1, 4;
	add.s64 	%rd7, %rd5, %rd6;
	ld.global.f32 	%f2, [%rd1];
	ld.global.f32 	%f1, [%rd7];
	setp.leu.ftz.f32 	%p2, %f1, %f2;
	@%p2 bra 	$L__BB33_3;

	st.global.f32 	[%rd1], %f1;
	cvta.to.global.u64 	%rd8, %rd3;
	st.global.u32 	[%rd8], %r1;

$L__BB33_3:
	ret;

}
	// .globl	derVar_part_1
.visible .entry derVar_part_1(
	.param .u64 derVar_part_1_param_0,
	.param .f32 derVar_part_1_param_1,
	.param .u64 derVar_part_1_param_2,
	.param .u32 derVar_part_1_param_3
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<8>;
	.reg .b32 	%r<6>;
	.reg .b64 	%rd<8>;


	ld.param.u64 	%rd1, [derVar_part_1_param_0];
	ld.param.f32 	%f1, [derVar_part_1_param_1];
	ld.param.u64 	%rd2, [derVar_part_1_param_2];
	ld.param.u32 	%r2, [derVar_part_1_param_3];
	mov.u32 	%r3, %ntid.x;
	mov.u32 	%r4, %ctaid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB34_2;

	cvta.to.global.u64 	%rd3, %rd1;
	mul.wide.s32 	%rd4, %r1, 4;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.nc.f32 	%f2, [%rd5];
	add.ftz.f32 	%f3, %f2, %f1;
	lg2.approx.ftz.f32 	%f4, %f3;
	mul.ftz.f32 	%f5, %f4, 0fBFC00000;
	ex2.approx.ftz.f32 	%f6, %f5;
	mul.ftz.f32 	%f7, %f6, 0fBF000000;
	cvta.to.global.u64 	%rd6, %rd2;
	add.s64 	%rd7, %rd6, %rd4;
	st.global.f32 	[%rd7], %f7;

$L__BB34_2:
	ret;

}
	// .globl	derVar_part_3
.visible .entry derVar_part_3(
	.param .u64 derVar_part_3_param_0,
	.param .u64 derVar_part_3_param_1,
	.param .u32 derVar_part_3_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<4>;
	.reg .b32 	%r<6>;
	.reg .b64 	%rd<8>;


	ld.param.u64 	%rd1, [derVar_part_3_param_0];
	ld.param.u64 	%rd2, [derVar_part_3_param_1];
	ld.param.u32 	%r2, [derVar_part_3_param_2];
	mov.u32 	%r3, %ntid.x;
	mov.u32 	%r4, %ctaid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB35_2;

	cvta.to.global.u64 	%rd3, %rd1;
	mul.wide.s32 	%rd4, %r1, 4;
	add.s64 	%rd5, %rd3, %rd4;
	cvta.to.global.u64 	%rd6, %rd2;
	add.s64 	%rd7, %rd6, %rd4;
	ld.global.f32 	%f1, [%rd7];
	ld.global.nc.f32 	%f2, [%rd5];
	mul.ftz.f32 	%f3, %f2, %f1;
	st.global.f32 	[%rd7], %f3;

$L__BB35_2:
	ret;

}
	// .globl	derMean_part_1
.visible .entry derMean_part_1(
	.param .u64 derMean_part_1_param_0,
	.param .f32 derMean_part_1_param_1,
	.param .u64 derMean_part_1_param_2,
	.param .u32 derMean_part_1_param_3
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<7>;
	.reg .b32 	%r<6>;
	.reg .b64 	%rd<8>;


	ld.param.u64 	%rd1, [derMean_part_1_param_0];
	ld.param.f32 	%f1, [derMean_part_1_param_1];
	ld.param.u64 	%rd2, [derMean_part_1_param_2];
	ld.param.u32 	%r2, [derMean_part_1_param_3];
	mov.u32 	%r3, %ntid.x;
	mov.u32 	%r4, %ctaid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB36_2;

	cvta.to.global.u64 	%rd3, %rd1;
	mul.wide.s32 	%rd4, %r1, 4;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.nc.f32 	%f2, [%rd5];
	add.ftz.f32 	%f3, %f2, %f1;
	sqrt.approx.ftz.f32 	%f4, %f3;
	mov.f32 	%f5, 0fBF800000;
	div.approx.ftz.f32 	%f6, %f5, %f4;
	cvta.to.global.u64 	%rd6, %rd2;
	add.s64 	%rd7, %rd6, %rd4;
	st.global.f32 	[%rd7], %f6;

$L__BB36_2:
	ret;

}
	// .globl	derMean_part_3
.visible .entry derMean_part_3(
	.param .u64 derMean_part_3_param_0,
	.param .u64 derMean_part_3_param_1,
	.param .u64 derMean_part_3_param_2,
	.param .u32 derMean_part_3_param_3,
	.param .u64 derMean_part_3_param_4,
	.param .u32 derMean_part_3_param_5
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<10>;
	.reg .b32 	%r<7>;
	.reg .b64 	%rd<14>;


	ld.param.u64 	%rd1, [derMean_part_3_param_0];
	ld.param.u64 	%rd2, [derMean_part_3_param_1];
	ld.param.u64 	%rd3, [derMean_part_3_param_2];
	ld.param.u32 	%r2, [derMean_part_3_param_3];
	ld.param.u64 	%rd4, [derMean_part_3_param_4];
	ld.param.u32 	%r3, [derMean_part_3_param_5];
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %ctaid.x;
	mov.u32 	%r6, %tid.x;
	mad.lo.s32 	%r1, %r4, %r5, %r6;
	setp.ge.s32 	%p1, %r1, %r3;
	@%p1 bra 	$L__BB37_2;

	cvta.to.global.u64 	%rd5, %rd4;
	mul.wide.s32 	%rd6, %r1, 4;
	add.s64 	%rd7, %rd5, %rd6;
	cvta.to.global.u64 	%rd8, %rd1;
	add.s64 	%rd9, %rd8, %rd6;
	ld.global.nc.f32 	%f1, [%rd9];
	ld.global.f32 	%f2, [%rd7];
	cvta.to.global.u64 	%rd10, %rd2;
	add.s64 	%rd11, %rd10, %rd6;
	ld.global.nc.f32 	%f3, [%rd11];
	mul.ftz.f32 	%f4, %f3, 0fC0000000;
	cvta.to.global.u64 	%rd12, %rd3;
	add.s64 	%rd13, %rd12, %rd6;
	ld.global.nc.f32 	%f5, [%rd13];
	mul.ftz.f32 	%f6, %f4, %f5;
	cvt.rn.f32.s32 	%f7, %r2;
	div.approx.ftz.f32 	%f8, %f6, %f7;
	fma.rn.ftz.f32 	%f9, %f2, %f1, %f8;
	st.global.f32 	[%rd7], %f9;

$L__BB37_2:
	ret;

}
	// .globl	derNorm_part_1
.visible .entry derNorm_part_1(
	.param .u64 derNorm_part_1_param_0,
	.param .f32 derNorm_part_1_param_1,
	.param .u64 derNorm_part_1_param_2,
	.param .u32 derNorm_part_1_param_3
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<5>;
	.reg .b32 	%r<6>;
	.reg .b64 	%rd<8>;


	ld.param.u64 	%rd1, [derNorm_part_1_param_0];
	ld.param.f32 	%f1, [derNorm_part_1_param_1];
	ld.param.u64 	%rd2, [derNorm_part_1_param_2];
	ld.param.u32 	%r2, [derNorm_part_1_param_3];
	mov.u32 	%r3, %ntid.x;
	mov.u32 	%r4, %ctaid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB38_2;

	cvta.to.global.u64 	%rd3, %rd1;
	mul.wide.s32 	%rd4, %r1, 4;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.nc.f32 	%f2, [%rd5];
	add.ftz.f32 	%f3, %f2, %f1;
	rsqrt.approx.ftz.f32 	%f4, %f3;
	cvta.to.global.u64 	%rd6, %rd2;
	add.s64 	%rd7, %rd6, %rd4;
	st.global.f32 	[%rd7], %f4;

$L__BB38_2:
	ret;

}
	// .globl	pow2
.visible .entry pow2(
	.param .u64 pow2_param_0,
	.param .u32 pow2_param_1
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<3>;
	.reg .b32 	%r<6>;
	.reg .b64 	%rd<5>;


	ld.param.u64 	%rd1, [pow2_param_0];
	ld.param.u32 	%r2, [pow2_param_1];
	mov.u32 	%r3, %ntid.x;
	mov.u32 	%r4, %ctaid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB39_2;

	cvta.to.global.u64 	%rd2, %rd1;
	mul.wide.s32 	%rd3, %r1, 4;
	add.s64 	%rd4, %rd2, %rd3;
	ld.global.f32 	%f1, [%rd4];
	mul.ftz.f32 	%f2, %f1, %f1;
	st.global.f32 	[%rd4], %f2;

$L__BB39_2:
	ret;

}
	// .globl	sum
.visible .entry sum(
	.param .u64 sum_param_0,
	.param .u64 sum_param_1,
	.param .u32 sum_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<3>;
	.reg .b32 	%r<6>;
	.reg .b64 	%rd<7>;


	ld.param.u64 	%rd1, [sum_param_0];
	ld.param.u64 	%rd2, [sum_param_1];
	ld.param.u32 	%r2, [sum_param_2];
	mov.u32 	%r3, %ntid.x;
	mov.u32 	%r4, %ctaid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB40_2;

	cvta.to.global.u64 	%rd3, %rd1;
	mul.wide.s32 	%rd4, %r1, 4;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.nc.f32 	%f1, [%rd5];
	cvta.to.global.u64 	%rd6, %rd2;
	atom.global.add.f32 	%f2, [%rd6], %f1;

$L__BB40_2:
	ret;

}
	// .globl	isnan
.visible .entry isnan(
	.param .u64 isnan_param_0,
	.param .u64 isnan_param_1,
	.param .u32 isnan_param_2
)
{
	.reg .pred 	%p<4>;
	.reg .f32 	%f<3>;
	.reg .b32 	%r<8>;
	.reg .b64 	%rd<7>;


	ld.param.u64 	%rd2, [isnan_param_0];
	ld.param.u64 	%rd3, [isnan_param_1];
	ld.param.u32 	%r2, [isnan_param_2];
	cvta.to.global.u64 	%rd1, %rd3;
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r4, %r3, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB41_4;

	ld.global.u32 	%r6, [%rd1];
	setp.ne.s32 	%p2, %r6, 0;
	@%p2 bra 	$L__BB41_4;

	cvta.to.global.u64 	%rd4, %rd2;
	mul.wide.s32 	%rd5, %r1, 4;
	add.s64 	%rd6, %rd4, %rd5;
	ld.global.nc.f32 	%f1, [%rd6];
	abs.ftz.f32 	%f2, %f1;
	setp.le.ftz.f32 	%p3, %f2, 0f7F800000;
	@%p3 bra 	$L__BB41_4;

	mov.u32 	%r7, 1;
	st.global.u32 	[%rd1], %r7;

$L__BB41_4:
	ret;

}
	// .globl	divide_add
.visible .entry divide_add(
	.param .u64 divide_add_param_0,
	.param .u64 divide_add_param_1,
	.param .u32 divide_add_param_2
)
{
	.reg .f32 	%f<5>;
	.reg .b32 	%r<2>;
	.reg .b64 	%rd<5>;


	ld.param.u64 	%rd1, [divide_add_param_0];
	ld.param.u64 	%rd2, [divide_add_param_1];
	ld.param.u32 	%r1, [divide_add_param_2];
	cvta.to.global.u64 	%rd3, %rd1;
	cvta.to.global.u64 	%rd4, %rd2;
	ld.global.f32 	%f1, [%rd4];
	cvt.rn.f32.s32 	%f2, %r1;
	div.approx.ftz.f32 	%f3, %f1, %f2;
	atom.global.add.f32 	%f4, [%rd3], %f3;
	ret;

}
	// .globl	momentum
.visible .entry momentum(
	.param .u64 momentum_param_0,
	.param .u64 momentum_param_1,
	.param .f32 momentum_param_2,
	.param .u32 momentum_param_3
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<8>;
	.reg .b32 	%r<6>;
	.reg .b64 	%rd<8>;


	ld.param.u64 	%rd1, [momentum_param_0];
	ld.param.u64 	%rd2, [momentum_param_1];
	ld.param.f32 	%f1, [momentum_param_2];
	ld.param.u32 	%r2, [momentum_param_3];
	mov.u32 	%r3, %ntid.x;
	mov.u32 	%r4, %ctaid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB43_2;

	cvta.to.global.u64 	%rd3, %rd1;
	mul.wide.s32 	%rd4, %r1, 4;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.f32 	%f2, [%rd5];
	cvta.to.global.u64 	%rd6, %rd2;
	add.s64 	%rd7, %rd6, %rd4;
	mov.f32 	%f3, 0f3F800000;
	sub.ftz.f32 	%f4, %f3, %f1;
	ld.global.nc.f32 	%f5, [%rd7];
	mul.ftz.f32 	%f6, %f4, %f5;
	fma.rn.ftz.f32 	%f7, %f2, %f1, %f6;
	st.global.f32 	[%rd5], %f7;

$L__BB43_2:
	ret;

}
	// .globl	momentumPow2
.visible .entry momentumPow2(
	.param .u64 momentumPow2_param_0,
	.param .u64 momentumPow2_param_1,
	.param .f32 momentumPow2_param_2,
	.param .u32 momentumPow2_param_3
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<9>;
	.reg .b32 	%r<6>;
	.reg .b64 	%rd<8>;


	ld.param.u64 	%rd1, [momentumPow2_param_0];
	ld.param.u64 	%rd2, [momentumPow2_param_1];
	ld.param.f32 	%f1, [momentumPow2_param_2];
	ld.param.u32 	%r2, [momentumPow2_param_3];
	mov.u32 	%r3, %ntid.x;
	mov.u32 	%r4, %ctaid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB44_2;

	cvta.to.global.u64 	%rd3, %rd1;
	mul.wide.s32 	%rd4, %r1, 4;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.f32 	%f2, [%rd5];
	cvta.to.global.u64 	%rd6, %rd2;
	add.s64 	%rd7, %rd6, %rd4;
	ld.global.nc.f32 	%f3, [%rd7];
	mov.f32 	%f4, 0f3F800000;
	sub.ftz.f32 	%f5, %f4, %f1;
	mul.ftz.f32 	%f6, %f5, %f3;
	mul.ftz.f32 	%f7, %f3, %f6;
	fma.rn.ftz.f32 	%f8, %f2, %f1, %f7;
	st.global.f32 	[%rd5], %f8;

$L__BB44_2:
	ret;

}
	// .globl	subDivSqrtNorm
.visible .entry subDivSqrtNorm(
	.param .u64 subDivSqrtNorm_param_0,
	.param .u64 subDivSqrtNorm_param_1,
	.param .f32 subDivSqrtNorm_param_2,
	.param .f32 subDivSqrtNorm_param_3,
	.param .f32 subDivSqrtNorm_param_4,
	.param .u64 subDivSqrtNorm_param_5,
	.param .u32 subDivSqrtNorm_param_6
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<15>;
	.reg .b32 	%r<6>;
	.reg .b64 	%rd<11>;


	ld.param.u64 	%rd1, [subDivSqrtNorm_param_0];
	ld.param.u64 	%rd2, [subDivSqrtNorm_param_1];
	ld.param.f32 	%f1, [subDivSqrtNorm_param_2];
	ld.param.f32 	%f2, [subDivSqrtNorm_param_3];
	ld.param.f32 	%f3, [subDivSqrtNorm_param_4];
	ld.param.u64 	%rd3, [subDivSqrtNorm_param_5];
	ld.param.u32 	%r2, [subDivSqrtNorm_param_6];
	mov.u32 	%r3, %ntid.x;
	mov.u32 	%r4, %ctaid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB45_2;

	cvta.to.global.u64 	%rd4, %rd1;
	cvta.to.global.u64 	%rd5, %rd3;
	mul.wide.s32 	%rd6, %r1, 4;
	add.s64 	%rd7, %rd5, %rd6;
	add.ftz.f32 	%f4, %f2, 0f33D6BF95;
	div.approx.ftz.f32 	%f5, %f1, %f4;
	add.s64 	%rd8, %rd4, %rd6;
	ld.global.nc.f32 	%f6, [%rd8];
	mul.ftz.f32 	%f7, %f5, %f6;
	neg.ftz.f32 	%f8, %f7;
	cvta.to.global.u64 	%rd9, %rd2;
	add.s64 	%rd10, %rd9, %rd6;
	ld.global.nc.f32 	%f9, [%rd10];
	div.approx.ftz.f32 	%f10, %f9, %f3;
	sqrt.approx.ftz.f32 	%f11, %f10;
	add.ftz.f32 	%f12, %f11, 0f33D6BF95;
	div.approx.ftz.f32 	%f13, %f8, %f12;
	atom.global.add.f32 	%f14, [%rd7], %f13;

$L__BB45_2:
	ret;

}
	// .globl	addBackCopy
.visible .entry addBackCopy(
	.param .u64 addBackCopy_param_0,
	.param .u32 addBackCopy_param_1,
	.param .u32 addBackCopy_param_2,
	.param .u32 addBackCopy_param_3,
	.param .u32 addBackCopy_param_4,
	.param .u64 addBackCopy_param_5
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<2>;
	.reg .b32 	%r<19>;
	.reg .b64 	%rd<9>;


	ld.param.u64 	%rd1, [addBackCopy_param_0];
	ld.param.u32 	%r4, [addBackCopy_param_1];
	ld.param.u32 	%r7, [addBackCopy_param_2];
	ld.param.u32 	%r5, [addBackCopy_param_3];
	ld.param.u32 	%r6, [addBackCopy_param_4];
	ld.param.u64 	%rd2, [addBackCopy_param_5];
	mov.u32 	%r8, %ctaid.x;
	mov.u32 	%r9, %ntid.x;
	mov.u32 	%r10, %tid.x;
	mad.lo.s32 	%r1, %r8, %r9, %r10;
	mov.u32 	%r11, %ntid.y;
	mov.u32 	%r12, %ctaid.y;
	mov.u32 	%r13, %tid.y;
	mad.lo.s32 	%r2, %r12, %r11, %r13;
	mov.u32 	%r14, %nctaid.y;
	mul.lo.s32 	%r15, %r14, %r11;
	mad.lo.s32 	%r3, %r15, %r1, %r2;
	mul.lo.s32 	%r16, %r5, %r7;
	setp.ge.s32 	%p1, %r3, %r16;
	@%p1 bra 	$L__BB46_2;

	cvta.to.global.u64 	%rd3, %rd1;
	mad.lo.s32 	%r17, %r1, %r4, %r2;
	mad.lo.s32 	%r18, %r6, %r5, %r17;
	mul.wide.s32 	%rd4, %r18, 4;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.nc.f32 	%f1, [%rd5];
	cvta.to.global.u64 	%rd6, %rd2;
	mul.wide.s32 	%rd7, %r3, 4;
	add.s64 	%rd8, %rd6, %rd7;
	st.global.f32 	[%rd8], %f1;

$L__BB46_2:
	ret;

}
	// .globl	dropoutBack
.visible .entry dropoutBack(
	.param .u64 dropoutBack_param_0,
	.param .u64 dropoutBack_param_1,
	.param .f32 dropoutBack_param_2,
	.param .u64 dropoutBack_param_3,
	.param .u32 dropoutBack_param_4
)
{
	.reg .pred 	%p<3>;
	.reg .f32 	%f<5>;
	.reg .b32 	%r<6>;
	.reg .b64 	%rd<13>;


	ld.param.u64 	%rd2, [dropoutBack_param_0];
	ld.param.u64 	%rd3, [dropoutBack_param_1];
	ld.param.f32 	%f1, [dropoutBack_param_2];
	ld.param.u64 	%rd4, [dropoutBack_param_3];
	ld.param.u32 	%r2, [dropoutBack_param_4];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r4, %r3, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB47_3;

	cvta.to.global.u64 	%rd5, %rd2;
	cvt.s64.s32 	%rd1, %r1;
	mul.wide.s32 	%rd6, %r1, 4;
	add.s64 	%rd7, %rd5, %rd6;
	ld.global.nc.f32 	%f2, [%rd7];
	setp.eq.ftz.f32 	%p2, %f2, 0f00000000;
	@%p2 bra 	$L__BB47_3;

	cvta.to.global.u64 	%rd8, %rd3;
	shl.b64 	%rd9, %rd1, 2;
	add.s64 	%rd10, %rd8, %rd9;
	ld.global.nc.f32 	%f3, [%rd10];
	mul.ftz.f32 	%f4, %f3, %f1;
	cvta.to.global.u64 	%rd11, %rd4;
	add.s64 	%rd12, %rd11, %rd9;
	st.global.f32 	[%rd12], %f4;

$L__BB47_3:
	ret;

}
	// .globl	mask
.visible .entry mask(
	.param .u64 mask_param_0,
	.param .f32 mask_param_1,
	.param .f32 mask_param_2,
	.param .u64 mask_param_3,
	.param .u32 mask_param_4
)
{
	.reg .pred 	%p<3>;
	.reg .f32 	%f<4>;
	.reg .b32 	%r<6>;
	.reg .b64 	%rd<10>;


	ld.param.u64 	%rd2, [mask_param_0];
	ld.param.f32 	%f1, [mask_param_1];
	ld.param.f32 	%f2, [mask_param_2];
	ld.param.u64 	%rd3, [mask_param_3];
	ld.param.u32 	%r2, [mask_param_4];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r4, %r3, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB48_3;

	cvta.to.global.u64 	%rd4, %rd2;
	cvt.s64.s32 	%rd1, %r1;
	mul.wide.s32 	%rd5, %r1, 4;
	add.s64 	%rd6, %rd4, %rd5;
	ld.global.nc.f32 	%f3, [%rd6];
	setp.neu.ftz.f32 	%p2, %f3, %f1;
	@%p2 bra 	$L__BB48_3;

	cvta.to.global.u64 	%rd7, %rd3;
	shl.b64 	%rd8, %rd1, 2;
	add.s64 	%rd9, %rd7, %rd8;
	st.global.f32 	[%rd9], %f2;

$L__BB48_3:
	ret;

}
	// .globl	fillUnderDiagonal
.visible .entry fillUnderDiagonal(
	.param .u32 fillUnderDiagonal_param_0,
	.param .f32 fillUnderDiagonal_param_1,
	.param .u64 fillUnderDiagonal_param_2,
	.param .u32 fillUnderDiagonal_param_3
)
{
	.reg .pred 	%p<8>;
	.reg .f32 	%f<2>;
	.reg .b32 	%r<25>;
	.reg .b64 	%rd<14>;


	ld.param.u32 	%r11, [fillUnderDiagonal_param_0];
	ld.param.f32 	%f1, [fillUnderDiagonal_param_1];
	ld.param.u64 	%rd8, [fillUnderDiagonal_param_2];
	ld.param.u32 	%r12, [fillUnderDiagonal_param_3];
	cvta.to.global.u64 	%rd1, %rd8;
	mov.u32 	%r13, %ctaid.x;
	mov.u32 	%r14, %ntid.x;
	mov.u32 	%r15, %tid.x;
	mad.lo.s32 	%r1, %r14, %r13, %r15;
	setp.ge.s32 	%p1, %r1, %r12;
	setp.lt.s32 	%p2, %r1, 0;
	or.pred  	%p3, %p1, %p2;
	@%p3 bra 	$L__BB49_7;

	add.s32 	%r17, %r1, 1;
	and.b32  	%r24, %r17, 3;
	setp.lt.u32 	%p4, %r1, 3;
	mov.u32 	%r23, 0;
	@%p4 bra 	$L__BB49_4;

	mul.lo.s32 	%r19, %r11, %r1;
	mul.wide.s32 	%rd9, %r19, 4;
	add.s64 	%rd10, %rd1, %rd9;
	add.s64 	%rd12, %rd10, 8;
	sub.s32 	%r21, %r1, %r24;

$L__BB49_3:
	st.global.f32 	[%rd12+-8], %f1;
	st.global.f32 	[%rd12+-4], %f1;
	st.global.f32 	[%rd12], %f1;
	st.global.f32 	[%rd12+4], %f1;
	add.s32 	%r23, %r23, 4;
	add.s64 	%rd12, %rd12, 16;
	add.s32 	%r21, %r21, -4;
	setp.ne.s32 	%p5, %r21, -1;
	@%p5 bra 	$L__BB49_3;

$L__BB49_4:
	setp.eq.s32 	%p6, %r24, 0;
	@%p6 bra 	$L__BB49_7;

	mad.lo.s32 	%r20, %r11, %r1, %r23;
	mul.wide.s32 	%rd11, %r20, 4;
	add.s64 	%rd13, %rd1, %rd11;

$L__BB49_6:
	.pragma "nounroll";
	st.global.f32 	[%rd13], %f1;
	add.s64 	%rd13, %rd13, 4;
	add.s32 	%r24, %r24, -1;
	setp.ne.s32 	%p7, %r24, 0;
	@%p7 bra 	$L__BB49_6;

$L__BB49_7:
	ret;

}
	// .globl	derGelu
.visible .entry derGelu(
	.param .u64 derGelu_param_0,
	.param .u64 derGelu_param_1,
	.param .u64 derGelu_param_2,
	.param .u32 derGelu_param_3
)
{
	.reg .pred 	%p<4>;
	.reg .f32 	%f<40>;
	.reg .b32 	%r<10>;
	.reg .b64 	%rd<13>;


	ld.param.u64 	%rd2, [derGelu_param_0];
	ld.param.u64 	%rd3, [derGelu_param_1];
	ld.param.u64 	%rd4, [derGelu_param_2];
	ld.param.u32 	%r2, [derGelu_param_3];
	mov.u32 	%r3, %ntid.x;
	mov.u32 	%r4, %ctaid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB50_5;

	cvta.to.global.u64 	%rd5, %rd2;
	cvt.s64.s32 	%rd1, %r1;
	mul.wide.s32 	%rd6, %r1, 4;
	add.s64 	%rd7, %rd5, %rd6;
	ld.global.nc.f32 	%f1, [%rd7];
	mul.ftz.f32 	%f7, %f1, %f1;
	mul.ftz.f32 	%f8, %f1, %f7;
	mul.ftz.f32 	%f9, %f8, 0f3D122277;
	fma.rn.ftz.f32 	%f2, %f1, 0f3F4C422A, %f9;
	abs.ftz.f32 	%f3, %f2;
	setp.ltu.ftz.f32 	%p2, %f3, 0f3F19999A;
	@%p2 bra 	$L__BB50_3;
	bra.uni 	$L__BB50_2;

$L__BB50_3:
	mul.ftz.f32 	%f18, %f2, %f2;
	mov.f32 	%f19, 0fBD563CAE;
	mov.f32 	%f20, 0f3C80F082;
	fma.rn.ftz.f32 	%f21, %f20, %f18, %f19;
	mov.f32 	%f22, 0f3E085941;
	fma.rn.ftz.f32 	%f23, %f21, %f18, %f22;
	mov.f32 	%f24, 0fBEAAA9ED;
	fma.rn.ftz.f32 	%f25, %f23, %f18, %f24;
	mov.f32 	%f26, 0f00000000;
	fma.rn.ftz.f32 	%f27, %f25, %f18, %f26;
	fma.rn.ftz.f32 	%f39, %f27, %f2, %f2;
	bra.uni 	$L__BB50_4;

$L__BB50_2:
	mul.ftz.f32 	%f10, %f3, 0f4038AA3B;
	ex2.approx.ftz.f32 	%f11, %f10;
	add.ftz.f32 	%f12, %f11, 0f3F800000;
	mov.f32 	%f13, 0f3F800000;
	rcp.approx.ftz.f32 	%f14, %f12;
	mov.f32 	%f15, 0fC0000000;
	fma.rn.ftz.f32 	%f16, %f14, %f15, %f13;
	setp.ge.ftz.f32 	%p3, %f3, 0f41102CB4;
	selp.f32 	%f17, 0f3F800000, %f16, %p3;
	mov.b32 	%r6, %f17;
	mov.b32 	%r7, %f2;
	and.b32  	%r8, %r7, -2147483648;
	or.b32  	%r9, %r8, %r6;
	mov.b32 	%f39, %r9;

$L__BB50_4:
	cvta.to.global.u64 	%rd8, %rd3;
	shl.b64 	%rd9, %rd1, 2;
	add.s64 	%rd10, %rd8, %rd9;
	ld.global.nc.f32 	%f28, [%rd10];
	mul.ftz.f32 	%f29, %f28, 0f3F000000;
	mul.ftz.f32 	%f30, %f39, %f39;
	mov.f32 	%f31, 0f3F800000;
	sub.ftz.f32 	%f32, %f31, %f30;
	mul.ftz.f32 	%f33, %f1, %f32;
	mul.ftz.f32 	%f34, %f1, 0f3DDB33B3;
	fma.rn.ftz.f32 	%f35, %f1, %f34, 0f3F4C426B;
	add.ftz.f32 	%f36, %f39, 0f3F800000;
	fma.rn.ftz.f32 	%f37, %f35, %f33, %f36;
	mul.ftz.f32 	%f38, %f29, %f37;
	cvta.to.global.u64 	%rd11, %rd4;
	add.s64 	%rd12, %rd11, %rd9;
	st.global.f32 	[%rd12], %f38;

$L__BB50_5:
	ret;

}
	// .globl	matrixMultiplicationKernel
.visible .entry matrixMultiplicationKernel(
	.param .u64 matrixMultiplicationKernel_param_0,
	.param .u64 matrixMultiplicationKernel_param_1,
	.param .u64 matrixMultiplicationKernel_param_2,
	.param .u32 matrixMultiplicationKernel_param_3,
	.param .u32 matrixMultiplicationKernel_param_4,
	.param .u32 matrixMultiplicationKernel_param_5
)
{
	.reg .pred 	%p<7>;
	.reg .f32 	%f<30>;
	.reg .b32 	%r<36>;
	.reg .b64 	%rd<35>;


	ld.param.u64 	%rd18, [matrixMultiplicationKernel_param_0];
	ld.param.u64 	%rd19, [matrixMultiplicationKernel_param_1];
	ld.param.u64 	%rd17, [matrixMultiplicationKernel_param_2];
	ld.param.u32 	%r12, [matrixMultiplicationKernel_param_3];
	ld.param.u32 	%r14, [matrixMultiplicationKernel_param_4];
	ld.param.u32 	%r13, [matrixMultiplicationKernel_param_5];
	cvta.to.global.u64 	%rd1, %rd19;
	cvta.to.global.u64 	%rd2, %rd18;
	mov.u32 	%r15, %ntid.y;
	mov.u32 	%r16, %ctaid.y;
	mov.u32 	%r17, %tid.y;
	mad.lo.s32 	%r1, %r16, %r15, %r17;
	mov.u32 	%r18, %ntid.x;
	mov.u32 	%r19, %ctaid.x;
	mov.u32 	%r20, %tid.x;
	mad.lo.s32 	%r2, %r19, %r18, %r20;
	mov.u32 	%r21, %nctaid.y;
	mul.lo.s32 	%r22, %r21, %r15;
	mad.lo.s32 	%r23, %r22, %r1, %r2;
	mul.lo.s32 	%r24, %r13, %r14;
	setp.ge.s32 	%p1, %r23, %r24;
	@%p1 bra 	$L__BB51_9;

	setp.lt.s32 	%p2, %r12, 1;
	mov.f32 	%f29, 0f00000000;
	@%p2 bra 	$L__BB51_8;

	add.s32 	%r26, %r12, -1;
	and.b32  	%r35, %r12, 3;
	setp.lt.u32 	%p3, %r26, 3;
	mov.f32 	%f29, 0f00000000;
	mov.u32 	%r34, 0;
	@%p3 bra 	$L__BB51_5;

	sub.s32 	%r33, %r12, %r35;
	mul.wide.s32 	%rd20, %r2, 4;
	add.s64 	%rd32, %rd1, %rd20;
	mul.lo.s32 	%r28, %r12, %r1;
	mul.wide.s32 	%rd21, %r28, 4;
	add.s64 	%rd22, %rd2, %rd21;
	add.s64 	%rd31, %rd22, 8;
	mul.wide.s32 	%rd5, %r13, 4;

$L__BB51_4:
	ld.global.nc.f32 	%f12, [%rd32];
	ld.global.nc.f32 	%f13, [%rd31+-8];
	fma.rn.ftz.f32 	%f14, %f13, %f12, %f29;
	add.s64 	%rd23, %rd32, %rd5;
	ld.global.nc.f32 	%f15, [%rd23];
	ld.global.nc.f32 	%f16, [%rd31+-4];
	fma.rn.ftz.f32 	%f17, %f16, %f15, %f14;
	add.s64 	%rd24, %rd23, %rd5;
	ld.global.nc.f32 	%f18, [%rd24];
	ld.global.nc.f32 	%f19, [%rd31];
	fma.rn.ftz.f32 	%f20, %f19, %f18, %f17;
	add.s64 	%rd25, %rd24, %rd5;
	add.s64 	%rd32, %rd25, %rd5;
	ld.global.nc.f32 	%f21, [%rd25];
	ld.global.nc.f32 	%f22, [%rd31+4];
	fma.rn.ftz.f32 	%f29, %f22, %f21, %f20;
	add.s32 	%r34, %r34, 4;
	add.s64 	%rd31, %rd31, 16;
	add.s32 	%r33, %r33, -4;
	setp.ne.s32 	%p4, %r33, 0;
	@%p4 bra 	$L__BB51_4;

$L__BB51_5:
	setp.eq.s32 	%p5, %r35, 0;
	@%p5 bra 	$L__BB51_8;

	mad.lo.s32 	%r29, %r34, %r13, %r2;
	mul.wide.s32 	%rd26, %r29, 4;
	add.s64 	%rd34, %rd1, %rd26;
	mul.wide.s32 	%rd11, %r13, 4;
	mad.lo.s32 	%r30, %r12, %r1, %r34;
	mul.wide.s32 	%rd27, %r30, 4;
	add.s64 	%rd33, %rd2, %rd27;

$L__BB51_7:
	.pragma "nounroll";
	ld.global.nc.f32 	%f23, [%rd34];
	ld.global.nc.f32 	%f24, [%rd33];
	fma.rn.ftz.f32 	%f29, %f24, %f23, %f29;
	add.s64 	%rd34, %rd34, %rd11;
	add.s64 	%rd33, %rd33, 4;
	add.s32 	%r35, %r35, -1;
	setp.ne.s32 	%p6, %r35, 0;
	@%p6 bra 	$L__BB51_7;

$L__BB51_8:
	mad.lo.s32 	%r31, %r1, %r13, %r2;
	cvta.to.global.u64 	%rd28, %rd17;
	mul.wide.s32 	%rd29, %r31, 4;
	add.s64 	%rd30, %rd28, %rd29;
	st.global.f32 	[%rd30], %f29;

$L__BB51_9:
	ret;

}
	// .globl	Softmax
.visible .entry Softmax(
	.param .u64 Softmax_param_0,
	.param .u64 Softmax_param_1,
	.param .u32 Softmax_param_2,
	.param .u32 Softmax_param_3
)
{
	.reg .pred 	%p<22>;
	.reg .f32 	%f<77>;
	.reg .b32 	%r<51>;
	.reg .b64 	%rd<49>;


	ld.param.u64 	%rd28, [Softmax_param_0];
	ld.param.u64 	%rd29, [Softmax_param_1];
	ld.param.u32 	%r30, [Softmax_param_2];
	ld.param.u32 	%r31, [Softmax_param_3];
	cvta.to.global.u64 	%rd1, %rd29;
	cvta.to.global.u64 	%rd2, %rd28;
	mov.u32 	%r32, %ctaid.x;
	mov.u32 	%r33, %ntid.x;
	mov.u32 	%r34, %tid.x;
	mad.lo.s32 	%r1, %r33, %r32, %r34;
	setp.ge.s32 	%p1, %r1, %r31;
	@%p1 bra 	$L__BB52_23;

	mul.lo.s32 	%r49, %r1, %r30;
	cvt.s64.s32 	%rd3, %r49;
	mul.wide.s32 	%rd30, %r49, 4;
	add.s64 	%rd31, %rd2, %rd30;
	ld.global.nc.f32 	%f70, [%rd31];
	setp.lt.s32 	%p2, %r30, 2;
	@%p2 bra 	$L__BB52_8;

	add.s32 	%r35, %r30, -1;
	and.b32  	%r42, %r35, 3;
	add.s32 	%r36, %r30, -2;
	setp.lt.u32 	%p3, %r36, 3;
	mov.u32 	%r41, %r49;
	@%p3 bra 	$L__BB52_5;

	shl.b64 	%rd32, %rd3, 2;
	add.s64 	%rd33, %rd2, %rd32;
	add.s64 	%rd41, %rd33, 8;
	sub.s32 	%r39, %r30, %r42;
	mov.u32 	%r41, %r49;

$L__BB52_4:
	ld.global.nc.f32 	%f20, [%rd41+-8];
	setp.lt.ftz.f32 	%p4, %f70, %f20;
	selp.f32 	%f21, %f20, %f70, %p4;
	ld.global.nc.f32 	%f22, [%rd41+-4];
	setp.lt.ftz.f32 	%p5, %f21, %f22;
	selp.f32 	%f23, %f22, %f21, %p5;
	ld.global.nc.f32 	%f24, [%rd41];
	setp.lt.ftz.f32 	%p6, %f23, %f24;
	selp.f32 	%f25, %f24, %f23, %p6;
	ld.global.nc.f32 	%f26, [%rd41+4];
	setp.lt.ftz.f32 	%p7, %f25, %f26;
	selp.f32 	%f70, %f26, %f25, %p7;
	add.s32 	%r41, %r41, 4;
	add.s64 	%rd41, %rd41, 16;
	add.s32 	%r39, %r39, -4;
	setp.ne.s32 	%p8, %r39, 1;
	@%p8 bra 	$L__BB52_4;

$L__BB52_5:
	setp.eq.s32 	%p9, %r42, 0;
	@%p9 bra 	$L__BB52_8;

	mul.wide.s32 	%rd34, %r41, 4;
	add.s64 	%rd42, %rd2, %rd34;

$L__BB52_7:
	.pragma "nounroll";
	ld.global.nc.f32 	%f27, [%rd42];
	setp.lt.ftz.f32 	%p10, %f70, %f27;
	selp.f32 	%f70, %f27, %f70, %p10;
	add.s64 	%rd42, %rd42, 4;
	add.s32 	%r42, %r42, -1;
	setp.ne.s32 	%p11, %r42, 0;
	@%p11 bra 	$L__BB52_7;

$L__BB52_8:
	setp.lt.s32 	%p12, %r30, 1;
	mov.f32 	%f76, 0f322BCC77;
	@%p12 bra 	$L__BB52_16;

	mov.f32 	%f31, 0f402DF854;
	lg2.approx.ftz.f32 	%f9, %f31;
	and.b32  	%r46, %r30, 3;
	add.s32 	%r37, %r30, -1;
	setp.lt.u32 	%p13, %r37, 3;
	mov.f32 	%f75, 0f00000000;
	mov.u32 	%r45, %r49;
	@%p13 bra 	$L__BB52_12;

	sub.s32 	%r44, %r30, %r46;
	shl.b64 	%rd35, %rd3, 2;
	add.s64 	%rd36, %rd35, 8;
	add.s64 	%rd44, %rd2, %rd36;
	add.s64 	%rd43, %rd1, %rd36;
	mov.u32 	%r45, %r49;

$L__BB52_11:
	ld.global.nc.f32 	%f33, [%rd44+-8];
	sub.ftz.f32 	%f34, %f33, %f70;
	mul.ftz.f32 	%f35, %f9, %f34;
	ex2.approx.ftz.f32 	%f36, %f35;
	st.global.f32 	[%rd43+-8], %f36;
	add.ftz.f32 	%f37, %f75, %f36;
	ld.global.nc.f32 	%f38, [%rd44+-4];
	sub.ftz.f32 	%f39, %f38, %f70;
	mul.ftz.f32 	%f40, %f9, %f39;
	ex2.approx.ftz.f32 	%f41, %f40;
	st.global.f32 	[%rd43+-4], %f41;
	add.ftz.f32 	%f42, %f37, %f41;
	ld.global.nc.f32 	%f43, [%rd44];
	sub.ftz.f32 	%f44, %f43, %f70;
	mul.ftz.f32 	%f45, %f9, %f44;
	ex2.approx.ftz.f32 	%f46, %f45;
	st.global.f32 	[%rd43], %f46;
	add.ftz.f32 	%f47, %f42, %f46;
	ld.global.nc.f32 	%f48, [%rd44+4];
	sub.ftz.f32 	%f49, %f48, %f70;
	mul.ftz.f32 	%f50, %f9, %f49;
	ex2.approx.ftz.f32 	%f51, %f50;
	st.global.f32 	[%rd43+4], %f51;
	add.ftz.f32 	%f75, %f47, %f51;
	add.s32 	%r45, %r45, 4;
	add.s64 	%rd44, %rd44, 16;
	add.s64 	%rd43, %rd43, 16;
	add.s32 	%r44, %r44, -4;
	setp.ne.s32 	%p14, %r44, 0;
	@%p14 bra 	$L__BB52_11;

$L__BB52_12:
	setp.eq.s32 	%p15, %r46, 0;
	@%p15 bra 	$L__BB52_15;

	mul.wide.s32 	%rd37, %r45, 4;
	add.s64 	%rd46, %rd1, %rd37;
	add.s64 	%rd45, %rd2, %rd37;

$L__BB52_14:
	.pragma "nounroll";
	ld.global.nc.f32 	%f52, [%rd45];
	sub.ftz.f32 	%f53, %f52, %f70;
	mul.ftz.f32 	%f54, %f9, %f53;
	ex2.approx.ftz.f32 	%f55, %f54;
	st.global.f32 	[%rd46], %f55;
	add.ftz.f32 	%f75, %f75, %f55;
	add.s64 	%rd46, %rd46, 4;
	add.s64 	%rd45, %rd45, 4;
	add.s32 	%r46, %r46, -1;
	setp.ne.s32 	%p16, %r46, 0;
	@%p16 bra 	$L__BB52_14;

$L__BB52_15:
	add.ftz.f32 	%f76, %f75, 0f322BCC77;

$L__BB52_16:
	@%p12 bra 	$L__BB52_23;

	add.s32 	%r38, %r30, -1;
	and.b32  	%r50, %r30, 3;
	setp.lt.u32 	%p18, %r38, 3;
	@%p18 bra 	$L__BB52_20;

	sub.s32 	%r48, %r30, %r50;
	shl.b64 	%rd38, %rd3, 2;
	add.s64 	%rd39, %rd1, %rd38;
	add.s64 	%rd47, %rd39, 8;

$L__BB52_19:
	ld.global.f32 	%f56, [%rd47+-8];
	div.approx.ftz.f32 	%f57, %f56, %f76;
	st.global.f32 	[%rd47+-8], %f57;
	ld.global.f32 	%f58, [%rd47+-4];
	div.approx.ftz.f32 	%f59, %f58, %f76;
	st.global.f32 	[%rd47+-4], %f59;
	ld.global.f32 	%f60, [%rd47];
	div.approx.ftz.f32 	%f61, %f60, %f76;
	st.global.f32 	[%rd47], %f61;
	ld.global.f32 	%f62, [%rd47+4];
	div.approx.ftz.f32 	%f63, %f62, %f76;
	st.global.f32 	[%rd47+4], %f63;
	add.s32 	%r49, %r49, 4;
	add.s64 	%rd47, %rd47, 16;
	add.s32 	%r48, %r48, -4;
	setp.ne.s32 	%p19, %r48, 0;
	@%p19 bra 	$L__BB52_19;

$L__BB52_20:
	setp.eq.s32 	%p20, %r50, 0;
	@%p20 bra 	$L__BB52_23;

	mul.wide.s32 	%rd40, %r49, 4;
	add.s64 	%rd48, %rd1, %rd40;

$L__BB52_22:
	.pragma "nounroll";
	ld.global.f32 	%f64, [%rd48];
	div.approx.ftz.f32 	%f65, %f64, %f76;
	st.global.f32 	[%rd48], %f65;
	add.s64 	%rd48, %rd48, 4;
	add.s32 	%r50, %r50, -1;
	setp.ne.s32 	%p21, %r50, 0;
	@%p21 bra 	$L__BB52_22;

$L__BB52_23:
	ret;

}
	// .globl	derSoftmax
.visible .entry derSoftmax(
	.param .u64 derSoftmax_param_0,
	.param .u64 derSoftmax_param_1,
	.param .u64 derSoftmax_param_2,
	.param .u32 derSoftmax_param_3,
	.param .u32 derSoftmax_param_4
)
{
	.reg .pred 	%p<20>;
	.reg .f32 	%f<69>;
	.reg .b32 	%r<77>;
	.reg .b64 	%rd<32>;


	ld.param.u64 	%rd18, [derSoftmax_param_0];
	ld.param.u64 	%rd19, [derSoftmax_param_1];
	ld.param.u64 	%rd17, [derSoftmax_param_2];
	ld.param.u32 	%r36, [derSoftmax_param_3];
	ld.param.u32 	%r35, [derSoftmax_param_4];
	cvta.to.global.u64 	%rd1, %rd18;
	cvta.to.global.u64 	%rd2, %rd19;
	mov.u32 	%r37, %ctaid.x;
	mov.u32 	%r38, %ntid.x;
	mov.u32 	%r39, %tid.x;
	mad.lo.s32 	%r1, %r38, %r37, %r39;
	mov.u32 	%r40, %ctaid.y;
	mov.u32 	%r41, %ntid.y;
	mul.lo.s32 	%r2, %r41, %r40;
	mov.u32 	%r3, %tid.y;
	add.s32 	%r4, %r2, %r3;
	setp.ge.s32 	%p1, %r1, %r36;
	setp.ge.s32 	%p2, %r4, %r35;
	or.pred  	%p3, %p1, %p2;
	@%p3 bra 	$L__BB53_36;

	mul.lo.s32 	%r72, %r1, %r35;
	add.s32 	%r6, %r72, %r4;
	ld.global.u32 	%r42, [SharedMemorySize];
	setp.lt.s32 	%p4, %r6, %r42;
	@%p4 bra 	$L__BB53_2;
	bra.uni 	$L__BB53_3;

$L__BB53_2:
	mul.wide.s32 	%rd20, %r6, 4;
	add.s64 	%rd21, %rd2, %rd20;
	ld.global.nc.f32 	%f38, [%rd21];
	shl.b32 	%r43, %r6, 2;
	mov.u32 	%r44, shared;
	add.s32 	%r45, %r44, %r43;
	st.shared.f32 	[%r45], %f38;

$L__BB53_3:
	bar.sync 	0;
	cvta.to.global.u64 	%rd22, %rd17;
	mul.wide.s32 	%rd23, %r6, 4;
	add.s64 	%rd3, %rd22, %rd23;
	mov.f32 	%f68, 0f00000000;
	mov.u32 	%r71, 0;
	st.global.u32 	[%rd3], %r71;
	add.s64 	%rd24, %rd1, %rd23;
	ld.global.nc.f32 	%f1, [%rd24];
	setp.lt.s32 	%p5, %r35, 1;
	@%p5 bra 	$L__BB53_35;

	mov.f32 	%f42, 0f3F800000;
	sub.ftz.f32 	%f2, %f42, %f1;
	ld.global.u32 	%r7, [SharedMemorySize];
	and.b32  	%r76, %r35, 3;
	add.s32 	%r48, %r35, -1;
	setp.lt.u32 	%p6, %r48, 3;
	mov.f32 	%f68, 0f00000000;
	@%p6 bra 	$L__BB53_27;

	neg.s32 	%r68, %r4;
	mov.u32 	%r71, 0;
	sub.s32 	%r67, %r76, %r35;
	mul.wide.s32 	%rd25, %r72, 4;
	add.s64 	%rd26, %rd25, 8;
	add.s64 	%rd29, %rd1, %rd26;
	shl.b32 	%r50, %r72, 2;
	mov.u32 	%r51, shared;
	add.s32 	%r52, %r51, %r50;
	add.s32 	%r66, %r52, 8;
	add.s64 	%rd28, %rd2, %rd26;

$L__BB53_6:
	setp.eq.s32 	%p7, %r68, 0;
	mov.f32 	%f55, %f2;
	@%p7 bra 	$L__BB53_8;

	ld.global.nc.f32 	%f44, [%rd29+-8];
	neg.ftz.f32 	%f55, %f44;

$L__BB53_8:
	add.s64 	%rd8, %rd28, -8;
	setp.lt.s32 	%p8, %r72, %r7;
	@%p8 bra 	$L__BB53_10;
	bra.uni 	$L__BB53_9;

$L__BB53_10:
	add.s32 	%r62, %r66, -8;
	ld.shared.f32 	%f56, [%r62];
	bra.uni 	$L__BB53_11;

$L__BB53_9:
	ld.global.nc.f32 	%f56, [%rd8];

$L__BB53_11:
	mul.ftz.f32 	%f45, %f1, %f55;
	fma.rn.ftz.f32 	%f9, %f45, %f56, %f68;
	add.s32 	%r53, %r71, 1;
	setp.eq.s32 	%p9, %r4, %r53;
	mov.f32 	%f57, %f2;
	@%p9 bra 	$L__BB53_13;

	ld.global.nc.f32 	%f46, [%rd29+-4];
	neg.ftz.f32 	%f57, %f46;

$L__BB53_13:
	add.s32 	%r54, %r72, 1;
	setp.lt.s32 	%p10, %r54, %r7;
	@%p10 bra 	$L__BB53_15;
	bra.uni 	$L__BB53_14;

$L__BB53_15:
	add.s32 	%r63, %r66, -8;
	ld.shared.f32 	%f58, [%r63+4];
	bra.uni 	$L__BB53_16;

$L__BB53_14:
	ld.global.nc.f32 	%f58, [%rd8+4];

$L__BB53_16:
	mul.ftz.f32 	%f47, %f1, %f57;
	fma.rn.ftz.f32 	%f15, %f47, %f58, %f9;
	add.s32 	%r55, %r71, 2;
	setp.eq.s32 	%p11, %r4, %r55;
	mov.f32 	%f59, %f2;
	@%p11 bra 	$L__BB53_18;

	ld.global.nc.f32 	%f48, [%rd29];
	neg.ftz.f32 	%f59, %f48;

$L__BB53_18:
	add.s32 	%r56, %r72, 2;
	setp.lt.s32 	%p12, %r56, %r7;
	@%p12 bra 	$L__BB53_20;
	bra.uni 	$L__BB53_19;

$L__BB53_20:
	add.s32 	%r64, %r66, -8;
	ld.shared.f32 	%f60, [%r64+8];
	bra.uni 	$L__BB53_21;

$L__BB53_19:
	ld.global.nc.f32 	%f60, [%rd8+8];

$L__BB53_21:
	mul.ftz.f32 	%f49, %f1, %f59;
	fma.rn.ftz.f32 	%f21, %f49, %f60, %f15;
	add.s32 	%r57, %r71, 3;
	setp.eq.s32 	%p13, %r4, %r57;
	mov.f32 	%f61, %f2;
	@%p13 bra 	$L__BB53_23;

	ld.global.nc.f32 	%f50, [%rd29+4];
	neg.ftz.f32 	%f61, %f50;

$L__BB53_23:
	add.s32 	%r58, %r72, 3;
	setp.lt.s32 	%p14, %r58, %r7;
	@%p14 bra 	$L__BB53_25;
	bra.uni 	$L__BB53_24;

$L__BB53_25:
	add.s32 	%r65, %r66, -8;
	ld.shared.f32 	%f62, [%r65+12];
	bra.uni 	$L__BB53_26;

$L__BB53_24:
	ld.global.nc.f32 	%f62, [%rd8+12];

$L__BB53_26:
	mul.ftz.f32 	%f51, %f1, %f61;
	fma.rn.ftz.f32 	%f68, %f51, %f62, %f21;
	add.s32 	%r71, %r71, 4;
	add.s32 	%r72, %r72, 4;
	add.s32 	%r68, %r68, 4;
	add.s64 	%rd29, %rd29, 16;
	add.s32 	%r66, %r66, 16;
	add.s64 	%rd28, %rd28, 16;
	add.s32 	%r67, %r67, 4;
	setp.ne.s32 	%p15, %r67, 0;
	@%p15 bra 	$L__BB53_6;

$L__BB53_27:
	setp.eq.s32 	%p16, %r76, 0;
	@%p16 bra 	$L__BB53_35;

	sub.s32 	%r59, %r71, %r2;
	sub.s32 	%r74, %r59, %r3;
	shl.b32 	%r60, %r72, 2;
	mov.u32 	%r61, shared;
	add.s32 	%r73, %r61, %r60;
	mul.wide.s32 	%rd27, %r72, 4;
	add.s64 	%rd31, %rd2, %rd27;
	add.s64 	%rd30, %rd1, %rd27;

$L__BB53_29:
	.pragma "nounroll";
	setp.eq.s32 	%p17, %r74, 0;
	mov.f32 	%f66, %f2;
	@%p17 bra 	$L__BB53_31;

	ld.global.nc.f32 	%f52, [%rd30];
	neg.ftz.f32 	%f66, %f52;

$L__BB53_31:
	setp.lt.s32 	%p18, %r72, %r7;
	@%p18 bra 	$L__BB53_33;
	bra.uni 	$L__BB53_32;

$L__BB53_33:
	ld.shared.f32 	%f67, [%r73];
	bra.uni 	$L__BB53_34;

$L__BB53_32:
	ld.global.nc.f32 	%f67, [%rd31];

$L__BB53_34:
	mul.ftz.f32 	%f53, %f1, %f66;
	fma.rn.ftz.f32 	%f68, %f53, %f67, %f68;
	add.s32 	%r72, %r72, 1;
	add.s32 	%r74, %r74, 1;
	add.s32 	%r73, %r73, 4;
	add.s64 	%rd31, %rd31, 4;
	add.s64 	%rd30, %rd30, 4;
	add.s32 	%r76, %r76, -1;
	setp.ne.s32 	%p19, %r76, 0;
	@%p19 bra 	$L__BB53_29;

$L__BB53_35:
	st.global.f32 	[%rd3], %f68;

$L__BB53_36:
	ret;

}

