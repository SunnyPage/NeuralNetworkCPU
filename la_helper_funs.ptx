//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-31968024
// Cuda compilation tools, release 12.0, V12.0.76
// Based on NVVM 7.0.1
//

.version 8.0
.target sm_75
.address_size 64

	// .globl	fill
.func  (.param .b64 func_retval0) __internal_accurate_pow
(
	.param .b64 __internal_accurate_pow_param_0
)
;
.global .align 4 .f32 epsilon = 0f3A83126F;
.global .align 4 .u32 SharedMemorySize = 16384;
.global .align 4 .u32 BLOCK_DIM = 32;
// _ZZ9transposeE5block has been demoted

.visible .entry fill(
	.param .u64 fill_param_0,
	.param .f32 fill_param_1,
	.param .u32 fill_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<2>;
	.reg .b32 	%r<6>;
	.reg .b64 	%rd<5>;


	ld.param.u64 	%rd1, [fill_param_0];
	ld.param.f32 	%f1, [fill_param_1];
	ld.param.u32 	%r2, [fill_param_2];
	mov.u32 	%r3, %ntid.x;
	mov.u32 	%r4, %ctaid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB0_2;

	cvta.to.global.u64 	%rd2, %rd1;
	mul.wide.s32 	%rd3, %r1, 4;
	add.s64 	%rd4, %rd2, %rd3;
	st.global.f32 	[%rd4], %f1;

$L__BB0_2:
	ret;

}
	// .globl	gelu
.visible .entry gelu(
	.param .u64 gelu_param_0,
	.param .u64 gelu_param_1,
	.param .u32 gelu_param_2
)
{
	.reg .pred 	%p<4>;
	.reg .f32 	%f<32>;
	.reg .b32 	%r<10>;
	.reg .b64 	%rd<10>;


	ld.param.u64 	%rd2, [gelu_param_0];
	ld.param.u64 	%rd3, [gelu_param_1];
	ld.param.u32 	%r2, [gelu_param_2];
	mov.u32 	%r3, %ntid.x;
	mov.u32 	%r4, %ctaid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB1_5;

	cvta.to.global.u64 	%rd4, %rd2;
	cvt.s64.s32 	%rd1, %r1;
	mul.wide.s32 	%rd5, %r1, 4;
	add.s64 	%rd6, %rd4, %rd5;
	ld.global.nc.f32 	%f1, [%rd6];
	mul.ftz.f32 	%f7, %f1, %f1;
	mul.ftz.f32 	%f8, %f1, %f7;
	mul.ftz.f32 	%f9, %f8, 0f3D122277;
	fma.rn.ftz.f32 	%f2, %f1, 0f3F4C422A, %f9;
	abs.ftz.f32 	%f3, %f2;
	setp.ltu.ftz.f32 	%p2, %f3, 0f3F19999A;
	@%p2 bra 	$L__BB1_3;
	bra.uni 	$L__BB1_2;

$L__BB1_3:
	mul.ftz.f32 	%f18, %f2, %f2;
	mov.f32 	%f19, 0fBD563CAE;
	mov.f32 	%f20, 0f3C80F082;
	fma.rn.ftz.f32 	%f21, %f20, %f18, %f19;
	mov.f32 	%f22, 0f3E085941;
	fma.rn.ftz.f32 	%f23, %f21, %f18, %f22;
	mov.f32 	%f24, 0fBEAAA9ED;
	fma.rn.ftz.f32 	%f25, %f23, %f18, %f24;
	mov.f32 	%f26, 0f00000000;
	fma.rn.ftz.f32 	%f27, %f25, %f18, %f26;
	fma.rn.ftz.f32 	%f31, %f27, %f2, %f2;
	bra.uni 	$L__BB1_4;

$L__BB1_2:
	mul.ftz.f32 	%f10, %f3, 0f4038AA3B;
	ex2.approx.ftz.f32 	%f11, %f10;
	add.ftz.f32 	%f12, %f11, 0f3F800000;
	mov.f32 	%f13, 0f3F800000;
	rcp.approx.ftz.f32 	%f14, %f12;
	mov.f32 	%f15, 0fC0000000;
	fma.rn.ftz.f32 	%f16, %f14, %f15, %f13;
	setp.ge.ftz.f32 	%p3, %f3, 0f41102CB4;
	selp.f32 	%f17, 0f3F800000, %f16, %p3;
	mov.b32 	%r6, %f17;
	mov.b32 	%r7, %f2;
	and.b32  	%r8, %r7, -2147483648;
	or.b32  	%r9, %r8, %r6;
	mov.b32 	%f31, %r9;

$L__BB1_4:
	add.ftz.f32 	%f28, %f31, 0f3F800000;
	mul.ftz.f32 	%f29, %f1, 0f3F000000;
	mul.ftz.f32 	%f30, %f29, %f28;
	cvta.to.global.u64 	%rd7, %rd3;
	shl.b64 	%rd8, %rd1, 2;
	add.s64 	%rd9, %rd7, %rd8;
	st.global.f32 	[%rd9], %f30;

$L__BB1_5:
	ret;

}
	// .globl	set
.visible .entry set(
	.param .u64 set_param_0,
	.param .u32 set_param_1,
	.param .f32 set_param_2
)
{
	.reg .f32 	%f<2>;
	.reg .b32 	%r<2>;
	.reg .b64 	%rd<5>;


	ld.param.u64 	%rd1, [set_param_0];
	ld.param.u32 	%r1, [set_param_1];
	ld.param.f32 	%f1, [set_param_2];
	cvta.to.global.u64 	%rd2, %rd1;
	mul.wide.s32 	%rd3, %r1, 4;
	add.s64 	%rd4, %rd2, %rd3;
	st.global.f32 	[%rd4], %f1;
	ret;

}
	// .globl	multiplyIndex
.visible .entry multiplyIndex(
	.param .u64 multiplyIndex_param_0,
	.param .u32 multiplyIndex_param_1,
	.param .u32 multiplyIndex_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<2>;
	.reg .b32 	%r<8>;
	.reg .b64 	%rd<5>;


	ld.param.u64 	%rd1, [multiplyIndex_param_0];
	ld.param.u32 	%r2, [multiplyIndex_param_1];
	ld.param.u32 	%r3, [multiplyIndex_param_2];
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %ctaid.x;
	mov.u32 	%r6, %tid.x;
	mad.lo.s32 	%r1, %r4, %r5, %r6;
	setp.ge.s32 	%p1, %r1, %r3;
	@%p1 bra 	$L__BB3_2;

	cvta.to.global.u64 	%rd2, %rd1;
	mul.lo.s32 	%r7, %r1, %r2;
	cvt.rn.f32.s32 	%f1, %r7;
	mul.wide.s32 	%rd3, %r1, 4;
	add.s64 	%rd4, %rd2, %rd3;
	st.global.f32 	[%rd4], %f1;

$L__BB3_2:
	ret;

}
	// .globl	imageVector
.visible .entry imageVector(
	.param .u64 imageVector_param_0,
	.param .u64 imageVector_param_1,
	.param .u32 imageVector_param_2,
	.param .u32 imageVector_param_3,
	.param .u32 imageVector_param_4,
	.param .u32 imageVector_param_5
)
{
	.reg .pred 	%p<14>;
	.reg .f32 	%f<8>;
	.reg .b32 	%r<62>;
	.reg .b64 	%rd<21>;


	ld.param.u64 	%rd13, [imageVector_param_0];
	ld.param.u64 	%rd14, [imageVector_param_1];
	ld.param.u32 	%r29, [imageVector_param_2];
	ld.param.u32 	%r26, [imageVector_param_3];
	ld.param.u32 	%r27, [imageVector_param_4];
	ld.param.u32 	%r28, [imageVector_param_5];
	cvta.to.global.u64 	%rd1, %rd14;
	cvta.to.global.u64 	%rd2, %rd13;
	mov.u32 	%r30, %ctaid.x;
	mov.u32 	%r31, %ntid.x;
	mov.u32 	%r32, %tid.x;
	mad.lo.s32 	%r33, %r31, %r30, %r32;
	mul.lo.s32 	%r1, %r33, %r28;
	mov.u32 	%r34, %ctaid.y;
	mov.u32 	%r35, %ntid.y;
	mov.u32 	%r36, %tid.y;
	mad.lo.s32 	%r37, %r35, %r34, %r36;
	mul.lo.s32 	%r2, %r37, %r28;
	mov.u32 	%r38, %ctaid.z;
	mov.u32 	%r39, %ntid.z;
	mov.u32 	%r40, %tid.z;
	mad.lo.s32 	%r3, %r39, %r38, %r40;
	setp.ge.s32 	%p1, %r1, %r29;
	setp.ge.s32 	%p2, %r2, %r26;
	or.pred  	%p3, %p1, %p2;
	setp.ge.s32 	%p4, %r3, %r28;
	or.pred  	%p5, %p4, %p3;
	@%p5 bra 	$L__BB4_12;

	setp.lt.s32 	%p6, %r28, 1;
	@%p6 bra 	$L__BB4_12;

	mul.lo.s32 	%r41, %r28, %r27;
	mul.lo.s32 	%r42, %r41, %r28;
	add.s32 	%r43, %r1, %r3;
	mad.lo.s32 	%r4, %r43, %r26, %r2;
	setp.lt.s32 	%p7, %r27, 1;
	div.s32 	%r44, %r1, %r28;
	mul.lo.s32 	%r45, %r42, %r26;
	div.s32 	%r46, %r45, %r28;
	div.s32 	%r47, %r2, %r28;
	mul.lo.s32 	%r48, %r41, %r3;
	mad.lo.s32 	%r49, %r47, %r42, %r48;
	mad.lo.s32 	%r61, %r44, %r46, %r49;
	@%p7 bra 	$L__BB4_12;

	add.s32 	%r6, %r27, -1;
	and.b32  	%r7, %r27, 3;
	sub.s32 	%r8, %r27, %r7;
	add.s64 	%rd3, %rd1, 8;
	add.s64 	%rd4, %rd2, 8;
	mov.u32 	%r53, 0;

$L__BB4_4:
	add.s32 	%r52, %r4, %r53;
	mul.lo.s32 	%r59, %r52, %r27;
	setp.lt.u32 	%p8, %r6, 3;
	@%p8 bra 	$L__BB4_7;

	mul.wide.s32 	%rd15, %r61, 4;
	add.s64 	%rd20, %rd3, %rd15;
	mul.wide.s32 	%rd16, %r59, 4;
	add.s64 	%rd19, %rd4, %rd16;
	mov.u32 	%r57, %r8;

$L__BB4_6:
	ld.global.nc.f32 	%f1, [%rd19+-8];
	st.global.f32 	[%rd20+-8], %f1;
	ld.global.nc.f32 	%f2, [%rd19+-4];
	st.global.f32 	[%rd20+-4], %f2;
	ld.global.nc.f32 	%f3, [%rd19];
	st.global.f32 	[%rd20], %f3;
	ld.global.nc.f32 	%f4, [%rd19+4];
	st.global.f32 	[%rd20+4], %f4;
	add.s32 	%r61, %r61, 4;
	add.s32 	%r59, %r59, 4;
	add.s64 	%rd20, %rd20, 16;
	add.s64 	%rd19, %rd19, 16;
	add.s32 	%r57, %r57, -4;
	setp.ne.s32 	%p9, %r57, 0;
	@%p9 bra 	$L__BB4_6;

$L__BB4_7:
	mov.u32 	%r20, %r61;
	setp.eq.s32 	%p10, %r7, 0;
	@%p10 bra 	$L__BB4_11;

	setp.eq.s32 	%p11, %r7, 1;
	mul.wide.s32 	%rd17, %r59, 4;
	add.s64 	%rd11, %rd2, %rd17;
	ld.global.nc.f32 	%f5, [%rd11];
	mul.wide.s32 	%rd18, %r20, 4;
	add.s64 	%rd12, %rd1, %rd18;
	st.global.f32 	[%rd12], %f5;
	add.s32 	%r61, %r20, 1;
	@%p11 bra 	$L__BB4_11;

	setp.eq.s32 	%p12, %r7, 2;
	ld.global.nc.f32 	%f6, [%rd11+4];
	st.global.f32 	[%rd12+4], %f6;
	add.s32 	%r61, %r20, 2;
	@%p12 bra 	$L__BB4_11;

	ld.global.nc.f32 	%f7, [%rd11+8];
	st.global.f32 	[%rd12+8], %f7;
	add.s32 	%r61, %r20, 3;

$L__BB4_11:
	add.s32 	%r53, %r53, 1;
	setp.lt.s32 	%p13, %r53, %r28;
	@%p13 bra 	$L__BB4_4;

$L__BB4_12:
	ret;

}
	// .globl	backImageVector
.visible .entry backImageVector(
	.param .u64 backImageVector_param_0,
	.param .u64 backImageVector_param_1,
	.param .u32 backImageVector_param_2,
	.param .u32 backImageVector_param_3,
	.param .u32 backImageVector_param_4,
	.param .u32 backImageVector_param_5
)
{
	.reg .pred 	%p<14>;
	.reg .f32 	%f<8>;
	.reg .b32 	%r<62>;
	.reg .b64 	%rd<21>;


	ld.param.u64 	%rd13, [backImageVector_param_0];
	ld.param.u64 	%rd14, [backImageVector_param_1];
	ld.param.u32 	%r29, [backImageVector_param_2];
	ld.param.u32 	%r26, [backImageVector_param_3];
	ld.param.u32 	%r27, [backImageVector_param_4];
	ld.param.u32 	%r28, [backImageVector_param_5];
	cvta.to.global.u64 	%rd1, %rd14;
	cvta.to.global.u64 	%rd2, %rd13;
	mov.u32 	%r30, %ctaid.x;
	mov.u32 	%r31, %ntid.x;
	mov.u32 	%r32, %tid.x;
	mad.lo.s32 	%r33, %r31, %r30, %r32;
	mul.lo.s32 	%r1, %r33, %r28;
	mov.u32 	%r34, %ctaid.y;
	mov.u32 	%r35, %ntid.y;
	mov.u32 	%r36, %tid.y;
	mad.lo.s32 	%r37, %r35, %r34, %r36;
	mul.lo.s32 	%r2, %r37, %r28;
	mov.u32 	%r38, %ctaid.z;
	mov.u32 	%r39, %ntid.z;
	mov.u32 	%r40, %tid.z;
	mad.lo.s32 	%r3, %r39, %r38, %r40;
	setp.ge.s32 	%p1, %r1, %r29;
	setp.ge.s32 	%p2, %r2, %r26;
	or.pred  	%p3, %p1, %p2;
	setp.ge.s32 	%p4, %r3, %r28;
	or.pred  	%p5, %p4, %p3;
	@%p5 bra 	$L__BB5_12;

	setp.lt.s32 	%p6, %r28, 1;
	@%p6 bra 	$L__BB5_12;

	mul.lo.s32 	%r41, %r28, %r27;
	mul.lo.s32 	%r42, %r41, %r28;
	add.s32 	%r43, %r1, %r3;
	mad.lo.s32 	%r4, %r43, %r26, %r2;
	setp.lt.s32 	%p7, %r27, 1;
	div.s32 	%r44, %r1, %r28;
	mul.lo.s32 	%r45, %r42, %r26;
	div.s32 	%r46, %r45, %r28;
	div.s32 	%r47, %r2, %r28;
	mul.lo.s32 	%r48, %r41, %r3;
	mad.lo.s32 	%r49, %r47, %r42, %r48;
	mad.lo.s32 	%r61, %r44, %r46, %r49;
	@%p7 bra 	$L__BB5_12;

	add.s32 	%r6, %r27, -1;
	and.b32  	%r7, %r27, 3;
	sub.s32 	%r8, %r27, %r7;
	add.s64 	%rd3, %rd2, 8;
	add.s64 	%rd4, %rd1, 8;
	mov.u32 	%r53, 0;

$L__BB5_4:
	add.s32 	%r52, %r4, %r53;
	mul.lo.s32 	%r59, %r52, %r27;
	setp.lt.u32 	%p8, %r6, 3;
	@%p8 bra 	$L__BB5_7;

	mul.wide.s32 	%rd15, %r61, 4;
	add.s64 	%rd20, %rd3, %rd15;
	mul.wide.s32 	%rd16, %r59, 4;
	add.s64 	%rd19, %rd4, %rd16;
	mov.u32 	%r57, %r8;

$L__BB5_6:
	ld.global.nc.f32 	%f1, [%rd20+-8];
	st.global.f32 	[%rd19+-8], %f1;
	ld.global.nc.f32 	%f2, [%rd20+-4];
	st.global.f32 	[%rd19+-4], %f2;
	ld.global.nc.f32 	%f3, [%rd20];
	st.global.f32 	[%rd19], %f3;
	ld.global.nc.f32 	%f4, [%rd20+4];
	st.global.f32 	[%rd19+4], %f4;
	add.s32 	%r61, %r61, 4;
	add.s32 	%r59, %r59, 4;
	add.s64 	%rd20, %rd20, 16;
	add.s64 	%rd19, %rd19, 16;
	add.s32 	%r57, %r57, -4;
	setp.ne.s32 	%p9, %r57, 0;
	@%p9 bra 	$L__BB5_6;

$L__BB5_7:
	mov.u32 	%r20, %r61;
	setp.eq.s32 	%p10, %r7, 0;
	@%p10 bra 	$L__BB5_11;

	setp.eq.s32 	%p11, %r7, 1;
	mul.wide.s32 	%rd17, %r20, 4;
	add.s64 	%rd11, %rd2, %rd17;
	ld.global.nc.f32 	%f5, [%rd11];
	mul.wide.s32 	%rd18, %r59, 4;
	add.s64 	%rd12, %rd1, %rd18;
	st.global.f32 	[%rd12], %f5;
	add.s32 	%r61, %r20, 1;
	@%p11 bra 	$L__BB5_11;

	setp.eq.s32 	%p12, %r7, 2;
	ld.global.nc.f32 	%f6, [%rd11+4];
	st.global.f32 	[%rd12+4], %f6;
	add.s32 	%r61, %r20, 2;
	@%p12 bra 	$L__BB5_11;

	ld.global.nc.f32 	%f7, [%rd11+8];
	st.global.f32 	[%rd12+8], %f7;
	add.s32 	%r61, %r20, 3;

$L__BB5_11:
	add.s32 	%r53, %r53, 1;
	setp.lt.s32 	%p13, %r53, %r28;
	@%p13 bra 	$L__BB5_4;

$L__BB5_12:
	ret;

}
	// .globl	add3
.visible .entry add3(
	.param .u64 add3_param_0,
	.param .u64 add3_param_1,
	.param .u32 add3_param_2,
	.param .u32 add3_param_3
)
{
	.reg .pred 	%p<4>;
	.reg .f32 	%f<4>;
	.reg .b32 	%r<14>;
	.reg .b64 	%rd<9>;


	ld.param.u64 	%rd1, [add3_param_0];
	ld.param.u64 	%rd2, [add3_param_1];
	ld.param.u32 	%r4, [add3_param_2];
	ld.param.u32 	%r5, [add3_param_3];
	mov.u32 	%r6, %ntid.x;
	mov.u32 	%r7, %ctaid.x;
	mov.u32 	%r8, %tid.x;
	mad.lo.s32 	%r1, %r6, %r7, %r8;
	mov.u32 	%r9, %ctaid.y;
	mov.u32 	%r2, %ntid.y;
	mov.u32 	%r10, %tid.y;
	mad.lo.s32 	%r3, %r2, %r9, %r10;
	setp.ge.s32 	%p1, %r1, %r4;
	setp.ge.s32 	%p2, %r3, %r5;
	or.pred  	%p3, %p1, %p2;
	@%p3 bra 	$L__BB6_2;

	cvta.to.global.u64 	%rd3, %rd1;
	mov.u32 	%r11, %nctaid.y;
	mul.lo.s32 	%r12, %r11, %r2;
	mad.lo.s32 	%r13, %r12, %r1, %r3;
	mul.wide.s32 	%rd4, %r3, 4;
	add.s64 	%rd5, %rd3, %rd4;
	cvta.to.global.u64 	%rd6, %rd2;
	mul.wide.s32 	%rd7, %r13, 4;
	add.s64 	%rd8, %rd6, %rd7;
	ld.global.f32 	%f1, [%rd8];
	ld.global.nc.f32 	%f2, [%rd5];
	add.ftz.f32 	%f3, %f2, %f1;
	st.global.f32 	[%rd8], %f3;

$L__BB6_2:
	ret;

}
	// .globl	dot_VectorAndMatrix
.visible .entry dot_VectorAndMatrix(
	.param .u64 dot_VectorAndMatrix_param_0,
	.param .u64 dot_VectorAndMatrix_param_1,
	.param .u64 dot_VectorAndMatrix_param_2,
	.param .u32 dot_VectorAndMatrix_param_3,
	.param .u32 dot_VectorAndMatrix_param_4
)
{
	.reg .pred 	%p<7>;
	.reg .f32 	%f<30>;
	.reg .b32 	%r<25>;
	.reg .b64 	%rd<28>;


	ld.param.u64 	%rd15, [dot_VectorAndMatrix_param_0];
	ld.param.u64 	%rd16, [dot_VectorAndMatrix_param_1];
	ld.param.u64 	%rd14, [dot_VectorAndMatrix_param_2];
	ld.param.u32 	%r12, [dot_VectorAndMatrix_param_3];
	ld.param.u32 	%r11, [dot_VectorAndMatrix_param_4];
	cvta.to.global.u64 	%rd1, %rd15;
	cvta.to.global.u64 	%rd2, %rd16;
	mov.u32 	%r13, %ctaid.x;
	mov.u32 	%r14, %ntid.x;
	mov.u32 	%r15, %tid.x;
	mad.lo.s32 	%r1, %r14, %r13, %r15;
	setp.ge.s32 	%p1, %r1, %r12;
	@%p1 bra 	$L__BB7_9;

	setp.lt.s32 	%p2, %r11, 1;
	mov.f32 	%f29, 0f00000000;
	@%p2 bra 	$L__BB7_8;

	add.s32 	%r17, %r11, -1;
	and.b32  	%r24, %r11, 3;
	setp.lt.u32 	%p3, %r17, 3;
	mov.f32 	%f29, 0f00000000;
	mov.u32 	%r23, 0;
	@%p3 bra 	$L__BB7_5;

	sub.s32 	%r22, %r11, %r24;
	mul.lo.s32 	%r19, %r11, %r1;
	mul.wide.s32 	%rd17, %r19, 4;
	add.s64 	%rd18, %rd1, %rd17;
	add.s64 	%rd25, %rd18, 8;
	mov.u64 	%rd24, %rd2;

$L__BB7_4:
	ld.global.nc.f32 	%f12, [%rd25+-8];
	ld.global.nc.f32 	%f13, [%rd24];
	fma.rn.ftz.f32 	%f14, %f13, %f12, %f29;
	ld.global.nc.f32 	%f15, [%rd25+-4];
	ld.global.nc.f32 	%f16, [%rd24+4];
	fma.rn.ftz.f32 	%f17, %f16, %f15, %f14;
	ld.global.nc.f32 	%f18, [%rd25];
	ld.global.nc.f32 	%f19, [%rd24+8];
	fma.rn.ftz.f32 	%f20, %f19, %f18, %f17;
	ld.global.nc.f32 	%f21, [%rd25+4];
	ld.global.nc.f32 	%f22, [%rd24+12];
	fma.rn.ftz.f32 	%f29, %f22, %f21, %f20;
	add.s32 	%r23, %r23, 4;
	add.s64 	%rd25, %rd25, 16;
	add.s64 	%rd24, %rd24, 16;
	add.s32 	%r22, %r22, -4;
	setp.ne.s32 	%p4, %r22, 0;
	@%p4 bra 	$L__BB7_4;

$L__BB7_5:
	setp.eq.s32 	%p5, %r24, 0;
	@%p5 bra 	$L__BB7_8;

	mad.lo.s32 	%r20, %r11, %r1, %r23;
	mul.wide.s32 	%rd19, %r20, 4;
	add.s64 	%rd27, %rd1, %rd19;
	mul.wide.s32 	%rd20, %r23, 4;
	add.s64 	%rd26, %rd2, %rd20;

$L__BB7_7:
	.pragma "nounroll";
	ld.global.nc.f32 	%f23, [%rd27];
	ld.global.nc.f32 	%f24, [%rd26];
	fma.rn.ftz.f32 	%f29, %f24, %f23, %f29;
	add.s64 	%rd27, %rd27, 4;
	add.s64 	%rd26, %rd26, 4;
	add.s32 	%r24, %r24, -1;
	setp.ne.s32 	%p6, %r24, 0;
	@%p6 bra 	$L__BB7_7;

$L__BB7_8:
	cvta.to.global.u64 	%rd21, %rd14;
	mul.wide.s32 	%rd22, %r1, 4;
	add.s64 	%rd23, %rd21, %rd22;
	st.global.f32 	[%rd23], %f29;

$L__BB7_9:
	ret;

}
	// .globl	dotT_VectorAndMatrix
.visible .entry dotT_VectorAndMatrix(
	.param .u64 dotT_VectorAndMatrix_param_0,
	.param .u64 dotT_VectorAndMatrix_param_1,
	.param .u64 dotT_VectorAndMatrix_param_2,
	.param .u32 dotT_VectorAndMatrix_param_3,
	.param .u32 dotT_VectorAndMatrix_param_4
)
{
	.reg .pred 	%p<7>;
	.reg .f32 	%f<40>;
	.reg .b32 	%r<49>;
	.reg .b64 	%rd<27>;


	ld.param.u64 	%rd9, [dotT_VectorAndMatrix_param_0];
	ld.param.u64 	%rd10, [dotT_VectorAndMatrix_param_1];
	ld.param.u64 	%rd8, [dotT_VectorAndMatrix_param_2];
	ld.param.u32 	%r26, [dotT_VectorAndMatrix_param_3];
	ld.param.u32 	%r27, [dotT_VectorAndMatrix_param_4];
	cvta.to.global.u64 	%rd1, %rd10;
	cvta.to.global.u64 	%rd2, %rd9;
	mov.u32 	%r28, %ctaid.x;
	mov.u32 	%r29, %ntid.x;
	mul.lo.s32 	%r1, %r29, %r28;
	mov.u32 	%r2, %tid.x;
	add.s32 	%r3, %r1, %r2;
	setp.ge.s32 	%p1, %r3, %r27;
	@%p1 bra 	$L__BB8_9;

	setp.lt.s32 	%p2, %r26, 1;
	mov.f32 	%f39, 0f00000000;
	@%p2 bra 	$L__BB8_8;

	add.s32 	%r31, %r26, -1;
	and.b32  	%r48, %r26, 3;
	setp.lt.u32 	%p3, %r31, 3;
	mov.f32 	%f39, 0f00000000;
	mov.u32 	%r46, 0;
	@%p3 bra 	$L__BB8_5;

	add.s32 	%r33, %r2, %r27;
	add.s32 	%r44, %r33, %r1;
	shl.b32 	%r6, %r27, 2;
	shl.b32 	%r34, %r27, 1;
	add.s32 	%r43, %r3, %r34;
	mad.lo.s32 	%r42, %r27, 3, %r3;
	sub.s32 	%r9, %r48, %r26;
	mov.u32 	%r41, %r3;
	mov.u64 	%rd25, %rd2;

$L__BB8_4:
	cvt.rn.f32.s32 	%f12, %r41;
	cvt.rmi.ftz.f32.f32 	%f13, %f12;
	cvt.rzi.ftz.s32.f32 	%r35, %f13;
	mul.wide.s32 	%rd11, %r35, 4;
	add.s64 	%rd12, %rd1, %rd11;
	ld.global.nc.f32 	%f14, [%rd12];
	ld.global.nc.f32 	%f15, [%rd25];
	fma.rn.ftz.f32 	%f16, %f15, %f14, %f39;
	cvt.rn.f32.s32 	%f17, %r44;
	cvt.rmi.ftz.f32.f32 	%f18, %f17;
	cvt.rzi.ftz.s32.f32 	%r36, %f18;
	mul.wide.s32 	%rd13, %r36, 4;
	add.s64 	%rd14, %rd1, %rd13;
	ld.global.nc.f32 	%f19, [%rd14];
	ld.global.nc.f32 	%f20, [%rd25+4];
	fma.rn.ftz.f32 	%f21, %f20, %f19, %f16;
	cvt.rn.f32.s32 	%f22, %r43;
	cvt.rmi.ftz.f32.f32 	%f23, %f22;
	cvt.rzi.ftz.s32.f32 	%r37, %f23;
	mul.wide.s32 	%rd15, %r37, 4;
	add.s64 	%rd16, %rd1, %rd15;
	ld.global.nc.f32 	%f24, [%rd16];
	ld.global.nc.f32 	%f25, [%rd25+8];
	fma.rn.ftz.f32 	%f26, %f25, %f24, %f21;
	cvt.rn.f32.s32 	%f27, %r42;
	cvt.rmi.ftz.f32.f32 	%f28, %f27;
	cvt.rzi.ftz.s32.f32 	%r38, %f28;
	mul.wide.s32 	%rd17, %r38, 4;
	add.s64 	%rd18, %rd1, %rd17;
	ld.global.nc.f32 	%f29, [%rd18];
	ld.global.nc.f32 	%f30, [%rd25+12];
	fma.rn.ftz.f32 	%f39, %f30, %f29, %f26;
	add.s64 	%rd25, %rd25, 16;
	add.s32 	%r44, %r44, %r6;
	add.s32 	%r43, %r43, %r6;
	add.s32 	%r42, %r42, %r6;
	add.s32 	%r41, %r41, %r6;
	add.s32 	%r46, %r46, 4;
	add.s32 	%r39, %r9, %r46;
	setp.ne.s32 	%p4, %r39, 0;
	@%p4 bra 	$L__BB8_4;

$L__BB8_5:
	setp.eq.s32 	%p5, %r48, 0;
	@%p5 bra 	$L__BB8_8;

	mul.wide.s32 	%rd19, %r46, 4;
	add.s64 	%rd26, %rd2, %rd19;
	mad.lo.s32 	%r47, %r46, %r27, %r3;

$L__BB8_7:
	.pragma "nounroll";
	cvt.rn.f32.s32 	%f31, %r47;
	cvt.rmi.ftz.f32.f32 	%f32, %f31;
	cvt.rzi.ftz.s32.f32 	%r40, %f32;
	mul.wide.s32 	%rd20, %r40, 4;
	add.s64 	%rd21, %rd1, %rd20;
	ld.global.nc.f32 	%f33, [%rd21];
	ld.global.nc.f32 	%f34, [%rd26];
	fma.rn.ftz.f32 	%f39, %f34, %f33, %f39;
	add.s64 	%rd26, %rd26, 4;
	add.s32 	%r47, %r47, %r27;
	add.s32 	%r48, %r48, -1;
	setp.ne.s32 	%p6, %r48, 0;
	@%p6 bra 	$L__BB8_7;

$L__BB8_8:
	cvta.to.global.u64 	%rd22, %rd8;
	mul.wide.s32 	%rd23, %r3, 4;
	add.s64 	%rd24, %rd22, %rd23;
	st.global.f32 	[%rd24], %f39;

$L__BB8_9:
	ret;

}
	// .globl	derivativeWeight
.visible .entry derivativeWeight(
	.param .u64 derivativeWeight_param_0,
	.param .u64 derivativeWeight_param_1,
	.param .u64 derivativeWeight_param_2,
	.param .u32 derivativeWeight_param_3,
	.param .u32 derivativeWeight_param_4
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<5>;
	.reg .b32 	%r<11>;
	.reg .b64 	%rd<13>;


	ld.param.u64 	%rd1, [derivativeWeight_param_0];
	ld.param.u64 	%rd2, [derivativeWeight_param_1];
	ld.param.u64 	%rd3, [derivativeWeight_param_2];
	ld.param.u32 	%r3, [derivativeWeight_param_3];
	ld.param.u32 	%r2, [derivativeWeight_param_4];
	mov.u32 	%r4, %tid.x;
	mov.u32 	%r5, %ctaid.x;
	mov.u32 	%r6, %ntid.x;
	mad.lo.s32 	%r1, %r6, %r5, %r4;
	mul.lo.s32 	%r7, %r2, %r3;
	setp.ge.u32 	%p1, %r1, %r7;
	@%p1 bra 	$L__BB9_2;

	cvta.to.global.u64 	%rd4, %rd2;
	div.u32 	%r8, %r1, %r2;
	mul.wide.u32 	%rd5, %r8, 4;
	add.s64 	%rd6, %rd4, %rd5;
	mul.lo.s32 	%r9, %r8, %r2;
	sub.s32 	%r10, %r1, %r9;
	cvta.to.global.u64 	%rd7, %rd1;
	mul.wide.u32 	%rd8, %r10, 4;
	add.s64 	%rd9, %rd7, %rd8;
	ld.global.nc.f32 	%f1, [%rd9];
	ld.global.nc.f32 	%f2, [%rd6];
	cvta.to.global.u64 	%rd10, %rd3;
	mul.wide.u32 	%rd11, %r1, 4;
	add.s64 	%rd12, %rd10, %rd11;
	ld.global.f32 	%f3, [%rd12];
	fma.rn.ftz.f32 	%f4, %f2, %f1, %f3;
	st.global.f32 	[%rd12], %f4;

$L__BB9_2:
	ret;

}
	// .globl	findMean_part
.visible .entry findMean_part(
	.param .u64 findMean_part_param_0,
	.param .u64 findMean_part_param_1,
	.param .u32 findMean_part_param_2,
	.param .u32 findMean_part_param_3
)
{
	.reg .pred 	%p<7>;
	.reg .f32 	%f<25>;
	.reg .b32 	%r<22>;
	.reg .b64 	%rd<18>;


	ld.param.u64 	%rd9, [findMean_part_param_0];
	ld.param.u64 	%rd8, [findMean_part_param_1];
	ld.param.u32 	%r13, [findMean_part_param_2];
	ld.param.u32 	%r12, [findMean_part_param_3];
	cvta.to.global.u64 	%rd1, %rd9;
	mov.u32 	%r14, %ctaid.x;
	mov.u32 	%r15, %ntid.x;
	mov.u32 	%r16, %tid.x;
	mad.lo.s32 	%r1, %r15, %r14, %r16;
	setp.ge.s32 	%p1, %r1, %r13;
	@%p1 bra 	$L__BB10_9;

	mul.lo.s32 	%r20, %r1, %r12;
	setp.lt.s32 	%p2, %r12, 1;
	mov.f32 	%f24, 0f00000000;
	@%p2 bra 	$L__BB10_8;

	add.s32 	%r17, %r12, -1;
	and.b32  	%r21, %r12, 3;
	setp.lt.u32 	%p3, %r17, 3;
	mov.f32 	%f24, 0f00000000;
	@%p3 bra 	$L__BB10_5;

	sub.s32 	%r19, %r12, %r21;
	mul.wide.s32 	%rd10, %r20, 4;
	add.s64 	%rd11, %rd1, %rd10;
	add.s64 	%rd16, %rd11, 8;

$L__BB10_4:
	ld.global.nc.f32 	%f12, [%rd16+-8];
	add.ftz.f32 	%f13, %f24, %f12;
	ld.global.nc.f32 	%f14, [%rd16+-4];
	add.ftz.f32 	%f15, %f13, %f14;
	ld.global.nc.f32 	%f16, [%rd16];
	add.ftz.f32 	%f17, %f15, %f16;
	ld.global.nc.f32 	%f18, [%rd16+4];
	add.ftz.f32 	%f24, %f17, %f18;
	add.s32 	%r20, %r20, 4;
	add.s64 	%rd16, %rd16, 16;
	add.s32 	%r19, %r19, -4;
	setp.ne.s32 	%p4, %r19, 0;
	@%p4 bra 	$L__BB10_4;

$L__BB10_5:
	setp.eq.s32 	%p5, %r21, 0;
	@%p5 bra 	$L__BB10_8;

	mul.wide.s32 	%rd12, %r20, 4;
	add.s64 	%rd17, %rd1, %rd12;

$L__BB10_7:
	.pragma "nounroll";
	ld.global.nc.f32 	%f19, [%rd17];
	add.ftz.f32 	%f24, %f24, %f19;
	add.s64 	%rd17, %rd17, 4;
	add.s32 	%r21, %r21, -1;
	setp.ne.s32 	%p6, %r21, 0;
	@%p6 bra 	$L__BB10_7;

$L__BB10_8:
	cvta.to.global.u64 	%rd13, %rd8;
	mul.wide.s32 	%rd14, %r1, 4;
	add.s64 	%rd15, %rd13, %rd14;
	st.global.f32 	[%rd15], %f24;

$L__BB10_9:
	ret;

}
	// .globl	generateErrorNorm
.visible .entry generateErrorNorm(
	.param .u64 generateErrorNorm_param_0,
	.param .u64 generateErrorNorm_param_1,
	.param .u64 generateErrorNorm_param_2,
	.param .u32 generateErrorNorm_param_3,
	.param .u32 generateErrorNorm_param_4
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<4>;
	.reg .b32 	%r<15>;
	.reg .b64 	%rd<12>;


	ld.param.u64 	%rd1, [generateErrorNorm_param_0];
	ld.param.u64 	%rd2, [generateErrorNorm_param_1];
	ld.param.u64 	%rd3, [generateErrorNorm_param_2];
	ld.param.u32 	%r3, [generateErrorNorm_param_3];
	ld.param.u32 	%r4, [generateErrorNorm_param_4];
	mov.u32 	%r5, %ntid.x;
	mov.u32 	%r6, %ctaid.x;
	mov.u32 	%r7, %tid.x;
	mad.lo.s32 	%r8, %r5, %r6, %r7;
	mov.u32 	%r9, %ctaid.y;
	mov.u32 	%r10, %ntid.y;
	mov.u32 	%r11, %tid.y;
	mad.lo.s32 	%r1, %r10, %r9, %r11;
	mov.u32 	%r12, %nctaid.y;
	mul.lo.s32 	%r13, %r12, %r10;
	mad.lo.s32 	%r2, %r13, %r8, %r1;
	mul.lo.s32 	%r14, %r4, %r3;
	setp.ge.s32 	%p1, %r2, %r14;
	@%p1 bra 	$L__BB11_2;

	cvta.to.global.u64 	%rd4, %rd1;
	mul.wide.s32 	%rd5, %r2, 4;
	add.s64 	%rd6, %rd4, %rd5;
	cvta.to.global.u64 	%rd7, %rd2;
	mul.wide.s32 	%rd8, %r1, 4;
	add.s64 	%rd9, %rd7, %rd8;
	ld.global.nc.f32 	%f1, [%rd9];
	ld.global.nc.f32 	%f2, [%rd6];
	mul.ftz.f32 	%f3, %f2, %f1;
	cvta.to.global.u64 	%rd10, %rd3;
	add.s64 	%rd11, %rd10, %rd5;
	st.global.f32 	[%rd11], %f3;

$L__BB11_2:
	ret;

}
	// .globl	derVar_part_2
.visible .entry derVar_part_2(
	.param .u64 derVar_part_2_param_0,
	.param .u64 derVar_part_2_param_1,
	.param .u64 derVar_part_2_param_2,
	.param .u64 derVar_part_2_param_3,
	.param .u32 derVar_part_2_param_4,
	.param .u32 derVar_part_2_param_5
)
{
	.reg .pred 	%p<7>;
	.reg .f32 	%f<36>;
	.reg .b32 	%r<22>;
	.reg .b64 	%rd<33>;


	ld.param.u64 	%rd18, [derVar_part_2_param_0];
	ld.param.u64 	%rd19, [derVar_part_2_param_1];
	ld.param.u64 	%rd16, [derVar_part_2_param_2];
	ld.param.u64 	%rd17, [derVar_part_2_param_3];
	ld.param.u32 	%r13, [derVar_part_2_param_4];
	ld.param.u32 	%r12, [derVar_part_2_param_5];
	cvta.to.global.u64 	%rd1, %rd19;
	cvta.to.global.u64 	%rd2, %rd18;
	mov.u32 	%r14, %ctaid.x;
	mov.u32 	%r15, %ntid.x;
	mov.u32 	%r16, %tid.x;
	mad.lo.s32 	%r1, %r15, %r14, %r16;
	setp.ge.s32 	%p1, %r1, %r13;
	@%p1 bra 	$L__BB12_9;

	cvta.to.global.u64 	%rd20, %rd16;
	mul.lo.s32 	%r20, %r1, %r12;
	cvt.s64.s32 	%rd3, %r1;
	mul.wide.s32 	%rd21, %r1, 4;
	add.s64 	%rd22, %rd20, %rd21;
	ld.global.nc.f32 	%f1, [%rd22];
	setp.lt.s32 	%p2, %r12, 1;
	mov.f32 	%f35, 0f00000000;
	@%p2 bra 	$L__BB12_8;

	add.s32 	%r17, %r12, -1;
	and.b32  	%r21, %r12, 3;
	setp.lt.u32 	%p3, %r17, 3;
	mov.f32 	%f35, 0f00000000;
	@%p3 bra 	$L__BB12_5;

	sub.s32 	%r19, %r12, %r21;
	mul.wide.s32 	%rd23, %r20, 4;
	add.s64 	%rd24, %rd23, 8;
	add.s64 	%rd30, %rd2, %rd24;
	add.s64 	%rd29, %rd1, %rd24;

$L__BB12_4:
	ld.global.nc.f32 	%f13, [%rd29+-8];
	sub.ftz.f32 	%f14, %f13, %f1;
	ld.global.nc.f32 	%f15, [%rd30+-8];
	fma.rn.ftz.f32 	%f16, %f15, %f14, %f35;
	ld.global.nc.f32 	%f17, [%rd29+-4];
	sub.ftz.f32 	%f18, %f17, %f1;
	ld.global.nc.f32 	%f19, [%rd30+-4];
	fma.rn.ftz.f32 	%f20, %f19, %f18, %f16;
	ld.global.nc.f32 	%f21, [%rd29];
	sub.ftz.f32 	%f22, %f21, %f1;
	ld.global.nc.f32 	%f23, [%rd30];
	fma.rn.ftz.f32 	%f24, %f23, %f22, %f20;
	ld.global.nc.f32 	%f25, [%rd29+4];
	sub.ftz.f32 	%f26, %f25, %f1;
	ld.global.nc.f32 	%f27, [%rd30+4];
	fma.rn.ftz.f32 	%f35, %f27, %f26, %f24;
	add.s32 	%r20, %r20, 4;
	add.s64 	%rd30, %rd30, 16;
	add.s64 	%rd29, %rd29, 16;
	add.s32 	%r19, %r19, -4;
	setp.ne.s32 	%p4, %r19, 0;
	@%p4 bra 	$L__BB12_4;

$L__BB12_5:
	setp.eq.s32 	%p5, %r21, 0;
	@%p5 bra 	$L__BB12_8;

	mul.wide.s32 	%rd25, %r20, 4;
	add.s64 	%rd32, %rd1, %rd25;
	add.s64 	%rd31, %rd2, %rd25;

$L__BB12_7:
	.pragma "nounroll";
	ld.global.nc.f32 	%f28, [%rd32];
	sub.ftz.f32 	%f29, %f28, %f1;
	ld.global.nc.f32 	%f30, [%rd31];
	fma.rn.ftz.f32 	%f35, %f30, %f29, %f35;
	add.s64 	%rd32, %rd32, 4;
	add.s64 	%rd31, %rd31, 4;
	add.s32 	%r21, %r21, -1;
	setp.ne.s32 	%p6, %r21, 0;
	@%p6 bra 	$L__BB12_7;

$L__BB12_8:
	cvta.to.global.u64 	%rd26, %rd17;
	shl.b64 	%rd27, %rd3, 2;
	add.s64 	%rd28, %rd26, %rd27;
	st.global.f32 	[%rd28], %f35;

$L__BB12_9:
	ret;

}
	// .globl	derMean_part_2
.visible .entry derMean_part_2(
	.param .u64 derMean_part_2_param_0,
	.param .u64 derMean_part_2_param_1,
	.param .u64 derMean_part_2_param_2,
	.param .u64 derMean_part_2_param_3,
	.param .u64 derMean_part_2_param_4,
	.param .u32 derMean_part_2_param_5,
	.param .u32 derMean_part_2_param_6
)
{
	.reg .pred 	%p<7>;
	.reg .f32 	%f<54>;
	.reg .b32 	%r<22>;
	.reg .b64 	%rd<36>;


	ld.param.u64 	%rd19, [derMean_part_2_param_0];
	ld.param.u64 	%rd20, [derMean_part_2_param_1];
	ld.param.u64 	%rd16, [derMean_part_2_param_2];
	ld.param.u64 	%rd17, [derMean_part_2_param_3];
	ld.param.u64 	%rd18, [derMean_part_2_param_4];
	ld.param.u32 	%r13, [derMean_part_2_param_5];
	ld.param.u32 	%r12, [derMean_part_2_param_6];
	cvta.to.global.u64 	%rd1, %rd20;
	cvta.to.global.u64 	%rd2, %rd19;
	mov.u32 	%r14, %ctaid.x;
	mov.u32 	%r15, %ntid.x;
	mov.u32 	%r16, %tid.x;
	mad.lo.s32 	%r1, %r15, %r14, %r16;
	setp.ge.s32 	%p1, %r1, %r13;
	@%p1 bra 	$L__BB13_9;

	cvta.to.global.u64 	%rd21, %rd16;
	mul.lo.s32 	%r20, %r1, %r12;
	cvt.s64.s32 	%rd3, %r1;
	mul.wide.s32 	%rd22, %r1, 4;
	add.s64 	%rd23, %rd21, %rd22;
	ld.global.nc.f32 	%f1, [%rd23];
	setp.lt.s32 	%p2, %r12, 1;
	mov.f32 	%f52, 0f00000000;
	mov.f32 	%f53, %f52;
	@%p2 bra 	$L__BB13_8;

	add.s32 	%r17, %r12, -1;
	and.b32  	%r21, %r12, 3;
	setp.lt.u32 	%p3, %r17, 3;
	mov.f32 	%f53, 0f00000000;
	mov.f32 	%f52, %f53;
	@%p3 bra 	$L__BB13_5;

	sub.s32 	%r19, %r12, %r21;
	mul.wide.s32 	%rd24, %r20, 4;
	add.s64 	%rd25, %rd24, 8;
	add.s64 	%rd33, %rd2, %rd25;
	add.s64 	%rd32, %rd1, %rd25;

$L__BB13_4:
	ld.global.nc.f32 	%f23, [%rd33+-8];
	add.ftz.f32 	%f24, %f52, %f23;
	ld.global.nc.f32 	%f25, [%rd32+-8];
	sub.ftz.f32 	%f26, %f25, %f1;
	add.ftz.f32 	%f27, %f53, %f26;
	ld.global.nc.f32 	%f28, [%rd33+-4];
	add.ftz.f32 	%f29, %f24, %f28;
	ld.global.nc.f32 	%f30, [%rd32+-4];
	sub.ftz.f32 	%f31, %f30, %f1;
	add.ftz.f32 	%f32, %f27, %f31;
	ld.global.nc.f32 	%f33, [%rd33];
	add.ftz.f32 	%f34, %f29, %f33;
	ld.global.nc.f32 	%f35, [%rd32];
	sub.ftz.f32 	%f36, %f35, %f1;
	add.ftz.f32 	%f37, %f32, %f36;
	ld.global.nc.f32 	%f38, [%rd33+4];
	add.ftz.f32 	%f52, %f34, %f38;
	ld.global.nc.f32 	%f39, [%rd32+4];
	sub.ftz.f32 	%f40, %f39, %f1;
	add.ftz.f32 	%f53, %f37, %f40;
	add.s32 	%r20, %r20, 4;
	add.s64 	%rd33, %rd33, 16;
	add.s64 	%rd32, %rd32, 16;
	add.s32 	%r19, %r19, -4;
	setp.ne.s32 	%p4, %r19, 0;
	@%p4 bra 	$L__BB13_4;

$L__BB13_5:
	setp.eq.s32 	%p5, %r21, 0;
	@%p5 bra 	$L__BB13_8;

	mul.wide.s32 	%rd26, %r20, 4;
	add.s64 	%rd35, %rd1, %rd26;
	add.s64 	%rd34, %rd2, %rd26;

$L__BB13_7:
	.pragma "nounroll";
	ld.global.nc.f32 	%f41, [%rd34];
	add.ftz.f32 	%f52, %f52, %f41;
	ld.global.nc.f32 	%f42, [%rd35];
	sub.ftz.f32 	%f43, %f42, %f1;
	add.ftz.f32 	%f53, %f53, %f43;
	add.s64 	%rd35, %rd35, 4;
	add.s64 	%rd34, %rd34, 4;
	add.s32 	%r21, %r21, -1;
	setp.ne.s32 	%p6, %r21, 0;
	@%p6 bra 	$L__BB13_7;

$L__BB13_8:
	cvta.to.global.u64 	%rd27, %rd17;
	shl.b64 	%rd28, %rd3, 2;
	add.s64 	%rd29, %rd27, %rd28;
	st.global.f32 	[%rd29], %f52;
	cvta.to.global.u64 	%rd30, %rd18;
	add.s64 	%rd31, %rd30, %rd28;
	st.global.f32 	[%rd31], %f53;

$L__BB13_9:
	ret;

}
	// .globl	derNorm_part_2
.visible .entry derNorm_part_2(
	.param .u64 derNorm_part_2_param_0,
	.param .u64 derNorm_part_2_param_1,
	.param .u64 derNorm_part_2_param_2,
	.param .u64 derNorm_part_2_param_3,
	.param .u64 derNorm_part_2_param_4,
	.param .u64 derNorm_part_2_param_5,
	.param .u64 derNorm_part_2_param_6,
	.param .u32 derNorm_part_2_param_7,
	.param .u32 derNorm_part_2_param_8
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<11>;
	.reg .b32 	%r<14>;
	.reg .b64 	%rd<24>;


	ld.param.u64 	%rd1, [derNorm_part_2_param_0];
	ld.param.u64 	%rd2, [derNorm_part_2_param_1];
	ld.param.u64 	%rd3, [derNorm_part_2_param_2];
	ld.param.u64 	%rd4, [derNorm_part_2_param_3];
	ld.param.u64 	%rd5, [derNorm_part_2_param_4];
	ld.param.u64 	%rd6, [derNorm_part_2_param_5];
	ld.param.u64 	%rd7, [derNorm_part_2_param_6];
	ld.param.u32 	%r3, [derNorm_part_2_param_7];
	ld.param.u32 	%r4, [derNorm_part_2_param_8];
	mov.u32 	%r5, %ntid.x;
	mov.u32 	%r6, %ctaid.x;
	mov.u32 	%r7, %tid.x;
	mad.lo.s32 	%r1, %r5, %r6, %r7;
	mov.u32 	%r8, %nctaid.y;
	mov.u32 	%r9, %ctaid.y;
	mad.lo.s32 	%r10, %r1, %r8, %r9;
	mov.u32 	%r11, %ntid.y;
	mov.u32 	%r12, %tid.y;
	mad.lo.s32 	%r2, %r10, %r11, %r12;
	mul.lo.s32 	%r13, %r4, %r3;
	setp.ge.s32 	%p1, %r2, %r13;
	@%p1 bra 	$L__BB14_2;

	cvta.to.global.u64 	%rd8, %rd1;
	mul.wide.s32 	%rd9, %r2, 4;
	add.s64 	%rd10, %rd8, %rd9;
	cvta.to.global.u64 	%rd11, %rd2;
	mul.wide.s32 	%rd12, %r1, 4;
	add.s64 	%rd13, %rd11, %rd12;
	ld.global.nc.f32 	%f1, [%rd13];
	ld.global.nc.f32 	%f2, [%rd10];
	cvta.to.global.u64 	%rd14, %rd3;
	add.s64 	%rd15, %rd14, %rd12;
	cvta.to.global.u64 	%rd16, %rd4;
	add.s64 	%rd17, %rd16, %rd9;
	cvta.to.global.u64 	%rd18, %rd5;
	add.s64 	%rd19, %rd18, %rd12;
	ld.global.nc.f32 	%f3, [%rd19];
	ld.global.nc.f32 	%f4, [%rd17];
	sub.ftz.f32 	%f5, %f4, %f3;
	ld.global.nc.f32 	%f6, [%rd15];
	mul.ftz.f32 	%f7, %f6, %f5;
	fma.rn.ftz.f32 	%f8, %f2, %f1, %f7;
	cvta.to.global.u64 	%rd20, %rd6;
	add.s64 	%rd21, %rd20, %rd12;
	ld.global.nc.f32 	%f9, [%rd21];
	add.ftz.f32 	%f10, %f9, %f8;
	cvta.to.global.u64 	%rd22, %rd7;
	add.s64 	%rd23, %rd22, %rd9;
	st.global.f32 	[%rd23], %f10;

$L__BB14_2:
	ret;

}
	// .globl	derivativeWeight_2
.visible .entry derivativeWeight_2(
	.param .u64 derivativeWeight_2_param_0,
	.param .u64 derivativeWeight_2_param_1,
	.param .u64 derivativeWeight_2_param_2,
	.param .u64 derivativeWeight_2_param_3,
	.param .u64 derivativeWeight_2_param_4,
	.param .u64 derivativeWeight_2_param_5,
	.param .u32 derivativeWeight_2_param_6,
	.param .u32 derivativeWeight_2_param_7
)
{
	.reg .pred 	%p<7>;
	.reg .f32 	%f<66>;
	.reg .b32 	%r<49>;
	.reg .b64 	%rd<33>;


	ld.param.u64 	%rd9, [derivativeWeight_2_param_0];
	ld.param.u64 	%rd10, [derivativeWeight_2_param_1];
	ld.param.u64 	%rd5, [derivativeWeight_2_param_2];
	ld.param.u64 	%rd6, [derivativeWeight_2_param_3];
	ld.param.u64 	%rd7, [derivativeWeight_2_param_4];
	ld.param.u64 	%rd8, [derivativeWeight_2_param_5];
	ld.param.u32 	%r26, [derivativeWeight_2_param_6];
	ld.param.u32 	%r27, [derivativeWeight_2_param_7];
	cvta.to.global.u64 	%rd1, %rd10;
	cvta.to.global.u64 	%rd2, %rd9;
	mov.u32 	%r28, %ctaid.x;
	mov.u32 	%r29, %ntid.x;
	mul.lo.s32 	%r1, %r29, %r28;
	mov.u32 	%r2, %tid.x;
	add.s32 	%r3, %r1, %r2;
	setp.ge.s32 	%p1, %r3, %r27;
	@%p1 bra 	$L__BB15_9;

	cvta.to.global.u64 	%rd11, %rd7;
	mul.wide.s32 	%rd12, %r3, 4;
	add.s64 	%rd3, %rd11, %rd12;
	ld.global.f32 	%f64, [%rd3];
	cvta.to.global.u64 	%rd13, %rd8;
	add.s64 	%rd4, %rd13, %rd12;
	ld.global.f32 	%f65, [%rd4];
	cvta.to.global.u64 	%rd14, %rd6;
	add.s64 	%rd15, %rd14, %rd12;
	ld.global.nc.f32 	%f3, [%rd15];
	cvta.to.global.u64 	%rd16, %rd5;
	add.s64 	%rd17, %rd16, %rd12;
	ld.global.nc.f32 	%f4, [%rd17];
	setp.lt.s32 	%p2, %r26, 1;
	@%p2 bra 	$L__BB15_8;

	add.s32 	%r31, %r26, -1;
	and.b32  	%r48, %r26, 3;
	setp.lt.u32 	%p3, %r31, 3;
	mov.u32 	%r46, 0;
	@%p3 bra 	$L__BB15_5;

	add.s32 	%r33, %r2, %r27;
	add.s32 	%r44, %r33, %r1;
	shl.b32 	%r6, %r27, 2;
	shl.b32 	%r34, %r27, 1;
	add.s32 	%r43, %r3, %r34;
	mad.lo.s32 	%r42, %r27, 3, %r3;
	sub.s32 	%r9, %r48, %r26;
	mov.u32 	%r41, %r3;

$L__BB15_4:
	cvt.rn.f32.s32 	%f20, %r41;
	cvt.rmi.ftz.f32.f32 	%f21, %f20;
	cvt.rzi.ftz.s32.f32 	%r35, %f21;
	mul.wide.s32 	%rd18, %r35, 4;
	add.s64 	%rd19, %rd2, %rd18;
	ld.global.nc.f32 	%f22, [%rd19];
	add.ftz.f32 	%f23, %f64, %f22;
	add.s64 	%rd20, %rd1, %rd18;
	ld.global.nc.f32 	%f24, [%rd20];
	sub.ftz.f32 	%f25, %f24, %f4;
	div.approx.ftz.f32 	%f26, %f25, %f3;
	fma.rn.ftz.f32 	%f27, %f22, %f26, %f65;
	cvt.rn.f32.s32 	%f28, %r44;
	cvt.rmi.ftz.f32.f32 	%f29, %f28;
	cvt.rzi.ftz.s32.f32 	%r36, %f29;
	mul.wide.s32 	%rd21, %r36, 4;
	add.s64 	%rd22, %rd2, %rd21;
	ld.global.nc.f32 	%f30, [%rd22];
	add.ftz.f32 	%f31, %f23, %f30;
	add.s64 	%rd23, %rd1, %rd21;
	ld.global.nc.f32 	%f32, [%rd23];
	sub.ftz.f32 	%f33, %f32, %f4;
	div.approx.ftz.f32 	%f34, %f33, %f3;
	fma.rn.ftz.f32 	%f35, %f30, %f34, %f27;
	cvt.rn.f32.s32 	%f36, %r43;
	cvt.rmi.ftz.f32.f32 	%f37, %f36;
	cvt.rzi.ftz.s32.f32 	%r37, %f37;
	mul.wide.s32 	%rd24, %r37, 4;
	add.s64 	%rd25, %rd2, %rd24;
	ld.global.nc.f32 	%f38, [%rd25];
	add.ftz.f32 	%f39, %f31, %f38;
	add.s64 	%rd26, %rd1, %rd24;
	ld.global.nc.f32 	%f40, [%rd26];
	sub.ftz.f32 	%f41, %f40, %f4;
	div.approx.ftz.f32 	%f42, %f41, %f3;
	fma.rn.ftz.f32 	%f43, %f38, %f42, %f35;
	cvt.rn.f32.s32 	%f44, %r42;
	cvt.rmi.ftz.f32.f32 	%f45, %f44;
	cvt.rzi.ftz.s32.f32 	%r38, %f45;
	mul.wide.s32 	%rd27, %r38, 4;
	add.s64 	%rd28, %rd2, %rd27;
	ld.global.nc.f32 	%f46, [%rd28];
	add.ftz.f32 	%f64, %f39, %f46;
	add.s64 	%rd29, %rd1, %rd27;
	ld.global.nc.f32 	%f47, [%rd29];
	sub.ftz.f32 	%f48, %f47, %f4;
	div.approx.ftz.f32 	%f49, %f48, %f3;
	fma.rn.ftz.f32 	%f65, %f46, %f49, %f43;
	add.s32 	%r44, %r44, %r6;
	add.s32 	%r43, %r43, %r6;
	add.s32 	%r42, %r42, %r6;
	add.s32 	%r41, %r41, %r6;
	add.s32 	%r46, %r46, 4;
	add.s32 	%r39, %r9, %r46;
	setp.ne.s32 	%p4, %r39, 0;
	@%p4 bra 	$L__BB15_4;

$L__BB15_5:
	setp.eq.s32 	%p5, %r48, 0;
	@%p5 bra 	$L__BB15_8;

	mad.lo.s32 	%r47, %r46, %r27, %r3;

$L__BB15_7:
	.pragma "nounroll";
	cvt.rn.f32.s32 	%f50, %r47;
	cvt.rmi.ftz.f32.f32 	%f51, %f50;
	cvt.rzi.ftz.s32.f32 	%r40, %f51;
	mul.wide.s32 	%rd30, %r40, 4;
	add.s64 	%rd31, %rd2, %rd30;
	ld.global.nc.f32 	%f52, [%rd31];
	add.ftz.f32 	%f64, %f64, %f52;
	add.s64 	%rd32, %rd1, %rd30;
	ld.global.nc.f32 	%f53, [%rd32];
	sub.ftz.f32 	%f54, %f53, %f4;
	div.approx.ftz.f32 	%f55, %f54, %f3;
	fma.rn.ftz.f32 	%f65, %f52, %f55, %f65;
	add.s32 	%r47, %r47, %r27;
	add.s32 	%r48, %r48, -1;
	setp.ne.s32 	%p6, %r48, 0;
	@%p6 bra 	$L__BB15_7;

$L__BB15_8:
	st.global.f32 	[%rd3], %f64;
	st.global.f32 	[%rd4], %f65;

$L__BB15_9:
	ret;

}
	// .globl	findVariance_part
.visible .entry findVariance_part(
	.param .u64 findVariance_part_param_0,
	.param .u64 findVariance_part_param_1,
	.param .u64 findVariance_part_param_2,
	.param .u32 findVariance_part_param_3,
	.param .u32 findVariance_part_param_4
)
{
	.reg .pred 	%p<7>;
	.reg .f32 	%f<31>;
	.reg .b32 	%r<22>;
	.reg .b64 	%rd<23>;


	ld.param.u64 	%rd11, [findVariance_part_param_0];
	ld.param.u64 	%rd9, [findVariance_part_param_1];
	ld.param.u64 	%rd10, [findVariance_part_param_2];
	ld.param.u32 	%r13, [findVariance_part_param_3];
	ld.param.u32 	%r12, [findVariance_part_param_4];
	cvta.to.global.u64 	%rd1, %rd11;
	mov.u32 	%r14, %ctaid.x;
	mov.u32 	%r15, %ntid.x;
	mov.u32 	%r16, %tid.x;
	mad.lo.s32 	%r1, %r15, %r14, %r16;
	setp.ge.s32 	%p1, %r1, %r13;
	@%p1 bra 	$L__BB16_9;

	cvta.to.global.u64 	%rd12, %rd9;
	cvt.s64.s32 	%rd2, %r1;
	mul.wide.s32 	%rd13, %r1, 4;
	add.s64 	%rd14, %rd12, %rd13;
	ld.global.nc.f32 	%f1, [%rd14];
	mul.lo.s32 	%r20, %r1, %r12;
	setp.lt.s32 	%p2, %r12, 1;
	mov.f32 	%f30, 0f00000000;
	@%p2 bra 	$L__BB16_8;

	add.s32 	%r17, %r12, -1;
	and.b32  	%r21, %r12, 3;
	setp.lt.u32 	%p3, %r17, 3;
	mov.f32 	%f30, 0f00000000;
	@%p3 bra 	$L__BB16_5;

	sub.s32 	%r19, %r12, %r21;
	mul.wide.s32 	%rd15, %r20, 4;
	add.s64 	%rd16, %rd1, %rd15;
	add.s64 	%rd21, %rd16, 8;

$L__BB16_4:
	ld.global.nc.f32 	%f13, [%rd21+-8];
	sub.ftz.f32 	%f14, %f13, %f1;
	fma.rn.ftz.f32 	%f15, %f14, %f14, %f30;
	ld.global.nc.f32 	%f16, [%rd21+-4];
	sub.ftz.f32 	%f17, %f16, %f1;
	fma.rn.ftz.f32 	%f18, %f17, %f17, %f15;
	ld.global.nc.f32 	%f19, [%rd21];
	sub.ftz.f32 	%f20, %f19, %f1;
	fma.rn.ftz.f32 	%f21, %f20, %f20, %f18;
	ld.global.nc.f32 	%f22, [%rd21+4];
	sub.ftz.f32 	%f23, %f22, %f1;
	fma.rn.ftz.f32 	%f30, %f23, %f23, %f21;
	add.s32 	%r20, %r20, 4;
	add.s64 	%rd21, %rd21, 16;
	add.s32 	%r19, %r19, -4;
	setp.ne.s32 	%p4, %r19, 0;
	@%p4 bra 	$L__BB16_4;

$L__BB16_5:
	setp.eq.s32 	%p5, %r21, 0;
	@%p5 bra 	$L__BB16_8;

	mul.wide.s32 	%rd17, %r20, 4;
	add.s64 	%rd22, %rd1, %rd17;

$L__BB16_7:
	.pragma "nounroll";
	ld.global.nc.f32 	%f24, [%rd22];
	sub.ftz.f32 	%f25, %f24, %f1;
	fma.rn.ftz.f32 	%f30, %f25, %f25, %f30;
	add.s64 	%rd22, %rd22, 4;
	add.s32 	%r21, %r21, -1;
	setp.ne.s32 	%p6, %r21, 0;
	@%p6 bra 	$L__BB16_7;

$L__BB16_8:
	cvta.to.global.u64 	%rd18, %rd10;
	shl.b64 	%rd19, %rd2, 2;
	add.s64 	%rd20, %rd18, %rd19;
	st.global.f32 	[%rd20], %f30;

$L__BB16_9:
	ret;

}
	// .globl	normalization_part_2
.visible .entry normalization_part_2(
	.param .u64 normalization_part_2_param_0,
	.param .u64 normalization_part_2_param_1,
	.param .u64 normalization_part_2_param_2,
	.param .u64 normalization_part_2_param_3,
	.param .u64 normalization_part_2_param_4,
	.param .u64 normalization_part_2_param_5,
	.param .u64 normalization_part_2_param_6,
	.param .u32 normalization_part_2_param_7,
	.param .u32 normalization_part_2_param_8
)
{
	.reg .pred 	%p<4>;
	.reg .f32 	%f<9>;
	.reg .b32 	%r<14>;
	.reg .b64 	%rd<25>;


	ld.param.u64 	%rd1, [normalization_part_2_param_0];
	ld.param.u64 	%rd2, [normalization_part_2_param_1];
	ld.param.u64 	%rd3, [normalization_part_2_param_2];
	ld.param.u64 	%rd4, [normalization_part_2_param_3];
	ld.param.u64 	%rd5, [normalization_part_2_param_4];
	ld.param.u64 	%rd6, [normalization_part_2_param_5];
	ld.param.u64 	%rd7, [normalization_part_2_param_6];
	ld.param.u32 	%r4, [normalization_part_2_param_7];
	ld.param.u32 	%r5, [normalization_part_2_param_8];
	mov.u32 	%r6, %ntid.x;
	mov.u32 	%r7, %ctaid.x;
	mov.u32 	%r8, %tid.x;
	mad.lo.s32 	%r1, %r6, %r7, %r8;
	mov.u32 	%r9, %ctaid.y;
	mov.u32 	%r2, %ntid.y;
	mov.u32 	%r10, %tid.y;
	mad.lo.s32 	%r3, %r2, %r9, %r10;
	setp.ge.s32 	%p1, %r1, %r4;
	setp.ge.s32 	%p2, %r3, %r5;
	or.pred  	%p3, %p1, %p2;
	@%p3 bra 	$L__BB17_2;

	cvta.to.global.u64 	%rd8, %rd1;
	mov.u32 	%r11, %nctaid.y;
	mul.lo.s32 	%r12, %r11, %r2;
	mad.lo.s32 	%r13, %r12, %r1, %r3;
	mul.wide.s32 	%rd9, %r13, 4;
	add.s64 	%rd10, %rd8, %rd9;
	cvta.to.global.u64 	%rd11, %rd2;
	mul.wide.s32 	%rd12, %r1, 4;
	add.s64 	%rd13, %rd11, %rd12;
	ld.global.nc.f32 	%f1, [%rd13];
	ld.global.nc.f32 	%f2, [%rd10];
	sub.ftz.f32 	%f3, %f2, %f1;
	cvta.to.global.u64 	%rd14, %rd3;
	add.s64 	%rd15, %rd14, %rd12;
	ld.global.nc.f32 	%f4, [%rd15];
	div.approx.ftz.f32 	%f5, %f3, %f4;
	cvta.to.global.u64 	%rd16, %rd5;
	mul.wide.s32 	%rd17, %r3, 4;
	add.s64 	%rd18, %rd16, %rd17;
	ld.global.nc.f32 	%f6, [%rd18];
	cvta.to.global.u64 	%rd19, %rd6;
	add.s64 	%rd20, %rd19, %rd17;
	ld.global.nc.f32 	%f7, [%rd20];
	fma.rn.ftz.f32 	%f8, %f5, %f6, %f7;
	cvta.to.global.u64 	%rd21, %rd7;
	add.s64 	%rd22, %rd21, %rd9;
	st.global.f32 	[%rd22], %f8;
	cvta.to.global.u64 	%rd23, %rd4;
	add.s64 	%rd24, %rd23, %rd9;
	st.global.f32 	[%rd24], %f5;

$L__BB17_2:
	ret;

}
	// .globl	add_NNMatrix
.visible .entry add_NNMatrix(
	.param .u64 add_NNMatrix_param_0,
	.param .u64 add_NNMatrix_param_1,
	.param .u32 add_NNMatrix_param_2,
	.param .u32 add_NNMatrix_param_3
)
{
	.reg .pred 	%p<7>;
	.reg .f32 	%f<18>;
	.reg .b32 	%r<49>;
	.reg .f64 	%fd<23>;
	.reg .b64 	%rd<17>;


	ld.param.u64 	%rd4, [add_NNMatrix_param_0];
	ld.param.u64 	%rd3, [add_NNMatrix_param_1];
	ld.param.u32 	%r26, [add_NNMatrix_param_2];
	ld.param.u32 	%r27, [add_NNMatrix_param_3];
	cvta.to.global.u64 	%rd1, %rd4;
	mov.u32 	%r28, %ctaid.x;
	mov.u32 	%r29, %ntid.x;
	mul.lo.s32 	%r1, %r29, %r28;
	mov.u32 	%r2, %tid.x;
	add.s32 	%r3, %r1, %r2;
	setp.ge.s32 	%p1, %r3, %r27;
	@%p1 bra 	$L__BB18_9;

	cvta.to.global.u64 	%rd5, %rd3;
	mul.wide.s32 	%rd6, %r3, 4;
	add.s64 	%rd2, %rd5, %rd6;
	ld.global.f32 	%f1, [%rd2];
	cvt.ftz.f64.f32 	%fd22, %f1;
	setp.lt.s32 	%p2, %r26, 1;
	@%p2 bra 	$L__BB18_8;

	add.s32 	%r31, %r26, -1;
	and.b32  	%r48, %r26, 3;
	setp.lt.u32 	%p3, %r31, 3;
	mov.u32 	%r46, 0;
	@%p3 bra 	$L__BB18_5;

	add.s32 	%r33, %r2, %r27;
	add.s32 	%r44, %r33, %r1;
	shl.b32 	%r6, %r27, 2;
	shl.b32 	%r34, %r27, 1;
	add.s32 	%r43, %r3, %r34;
	mad.lo.s32 	%r42, %r27, 3, %r3;
	sub.s32 	%r9, %r48, %r26;
	mov.u32 	%r41, %r3;

$L__BB18_4:
	cvt.rn.f32.s32 	%f2, %r41;
	cvt.rmi.ftz.f32.f32 	%f3, %f2;
	cvt.rzi.ftz.s32.f32 	%r35, %f3;
	mul.wide.s32 	%rd7, %r35, 4;
	add.s64 	%rd8, %rd1, %rd7;
	ld.global.nc.f32 	%f4, [%rd8];
	cvt.ftz.f64.f32 	%fd10, %f4;
	add.f64 	%fd11, %fd22, %fd10;
	cvt.rn.f32.s32 	%f5, %r44;
	cvt.rmi.ftz.f32.f32 	%f6, %f5;
	cvt.rzi.ftz.s32.f32 	%r36, %f6;
	mul.wide.s32 	%rd9, %r36, 4;
	add.s64 	%rd10, %rd1, %rd9;
	ld.global.nc.f32 	%f7, [%rd10];
	cvt.ftz.f64.f32 	%fd12, %f7;
	add.f64 	%fd13, %fd11, %fd12;
	cvt.rn.f32.s32 	%f8, %r43;
	cvt.rmi.ftz.f32.f32 	%f9, %f8;
	cvt.rzi.ftz.s32.f32 	%r37, %f9;
	mul.wide.s32 	%rd11, %r37, 4;
	add.s64 	%rd12, %rd1, %rd11;
	ld.global.nc.f32 	%f10, [%rd12];
	cvt.ftz.f64.f32 	%fd14, %f10;
	add.f64 	%fd15, %fd13, %fd14;
	cvt.rn.f32.s32 	%f11, %r42;
	cvt.rmi.ftz.f32.f32 	%f12, %f11;
	cvt.rzi.ftz.s32.f32 	%r38, %f12;
	mul.wide.s32 	%rd13, %r38, 4;
	add.s64 	%rd14, %rd1, %rd13;
	ld.global.nc.f32 	%f13, [%rd14];
	cvt.ftz.f64.f32 	%fd16, %f13;
	add.f64 	%fd22, %fd15, %fd16;
	add.s32 	%r44, %r44, %r6;
	add.s32 	%r43, %r43, %r6;
	add.s32 	%r42, %r42, %r6;
	add.s32 	%r41, %r41, %r6;
	add.s32 	%r46, %r46, 4;
	add.s32 	%r39, %r9, %r46;
	setp.ne.s32 	%p4, %r39, 0;
	@%p4 bra 	$L__BB18_4;

$L__BB18_5:
	setp.eq.s32 	%p5, %r48, 0;
	@%p5 bra 	$L__BB18_8;

	mad.lo.s32 	%r47, %r46, %r27, %r3;

$L__BB18_7:
	.pragma "nounroll";
	cvt.rn.f32.s32 	%f14, %r47;
	cvt.rmi.ftz.f32.f32 	%f15, %f14;
	cvt.rzi.ftz.s32.f32 	%r40, %f15;
	mul.wide.s32 	%rd15, %r40, 4;
	add.s64 	%rd16, %rd1, %rd15;
	ld.global.nc.f32 	%f16, [%rd16];
	cvt.ftz.f64.f32 	%fd17, %f16;
	add.f64 	%fd22, %fd22, %fd17;
	add.s32 	%r47, %r47, %r27;
	add.s32 	%r48, %r48, -1;
	setp.ne.s32 	%p6, %r48, 0;
	@%p6 bra 	$L__BB18_7;

$L__BB18_8:
	cvt.rn.ftz.f32.f64 	%f17, %fd22;
	st.global.f32 	[%rd2], %f17;

$L__BB18_9:
	ret;

}
	// .globl	reverse
.visible .entry reverse(
	.param .u64 reverse_param_0,
	.param .u32 reverse_param_1,
	.param .u32 reverse_param_2,
	.param .u32 reverse_param_3
)
{



	ret;

}
	// .globl	set2
.visible .entry set2(
	.param .u64 set2_param_0,
	.param .u32 set2_param_1,
	.param .u32 set2_param_2,
	.param .u32 set2_param_3,
	.param .u32 set2_param_4,
	.param .u32 set2_param_5,
	.param .f32 set2_param_6
)
{
	.reg .f32 	%f<2>;
	.reg .b32 	%r<8>;
	.reg .b64 	%rd<5>;


	ld.param.u64 	%rd1, [set2_param_0];
	ld.param.u32 	%r1, [set2_param_1];
	ld.param.u32 	%r2, [set2_param_2];
	ld.param.u32 	%r3, [set2_param_3];
	ld.param.u32 	%r4, [set2_param_4];
	ld.param.u32 	%r5, [set2_param_5];
	ld.param.f32 	%f1, [set2_param_6];
	cvta.to.global.u64 	%rd2, %rd1;
	mad.lo.s32 	%r6, %r4, %r1, %r2;
	mad.lo.s32 	%r7, %r6, %r5, %r3;
	mul.wide.s32 	%rd3, %r7, 4;
	add.s64 	%rd4, %rd2, %rd3;
	st.global.f32 	[%rd4], %f1;
	ret;

}
	// .globl	MatAdd
.visible .entry MatAdd(
	.param .u64 MatAdd_param_0,
	.param .u64 MatAdd_param_1,
	.param .u32 MatAdd_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<3>;
	.reg .b32 	%r<6>;
	.reg .b64 	%rd<8>;


	ld.param.u64 	%rd1, [MatAdd_param_0];
	ld.param.u64 	%rd2, [MatAdd_param_1];
	ld.param.u32 	%r2, [MatAdd_param_2];
	mov.u32 	%r3, %ntid.x;
	mov.u32 	%r4, %ctaid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB21_2;

	cvta.to.global.u64 	%rd3, %rd2;
	cvta.to.global.u64 	%rd4, %rd1;
	mul.wide.s32 	%rd5, %r1, 4;
	add.s64 	%rd6, %rd4, %rd5;
	add.s64 	%rd7, %rd3, %rd5;
	ld.global.nc.f32 	%f1, [%rd7];
	atom.global.add.f32 	%f2, [%rd6], %f1;

$L__BB21_2:
	ret;

}
	// .globl	matrixDiv
.visible .entry matrixDiv(
	.param .u64 matrixDiv_param_0,
	.param .f32 matrixDiv_param_1,
	.param .u32 matrixDiv_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<4>;
	.reg .b32 	%r<6>;
	.reg .b64 	%rd<5>;


	ld.param.u64 	%rd1, [matrixDiv_param_0];
	ld.param.f32 	%f1, [matrixDiv_param_1];
	ld.param.u32 	%r2, [matrixDiv_param_2];
	mov.u32 	%r3, %ntid.x;
	mov.u32 	%r4, %ctaid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB22_2;

	cvta.to.global.u64 	%rd2, %rd1;
	mul.wide.s32 	%rd3, %r1, 4;
	add.s64 	%rd4, %rd2, %rd3;
	ld.global.f32 	%f2, [%rd4];
	div.approx.ftz.f32 	%f3, %f2, %f1;
	st.global.f32 	[%rd4], %f3;

$L__BB22_2:
	ret;

}
	// .globl	vectorScalarSet
.visible .entry vectorScalarSet(
	.param .u64 vectorScalarSet_param_0,
	.param .f32 vectorScalarSet_param_1,
	.param .u32 vectorScalarSet_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<2>;
	.reg .b32 	%r<6>;
	.reg .b64 	%rd<5>;


	ld.param.u64 	%rd1, [vectorScalarSet_param_0];
	ld.param.f32 	%f1, [vectorScalarSet_param_1];
	ld.param.u32 	%r2, [vectorScalarSet_param_2];
	mov.u32 	%r3, %ntid.x;
	mov.u32 	%r4, %ctaid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB23_2;

	cvta.to.global.u64 	%rd2, %rd1;
	mul.wide.s32 	%rd3, %r1, 4;
	add.s64 	%rd4, %rd2, %rd3;
	st.global.f32 	[%rd4], %f1;

$L__BB23_2:
	ret;

}
	// .globl	addCopy
.visible .entry addCopy(
	.param .u64 addCopy_param_0,
	.param .u64 addCopy_param_1,
	.param .u32 addCopy_param_2,
	.param .u32 addCopy_param_3,
	.param .u32 addCopy_param_4,
	.param .u32 addCopy_param_5
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<2>;
	.reg .b32 	%r<19>;
	.reg .b64 	%rd<9>;


	ld.param.u64 	%rd1, [addCopy_param_0];
	ld.param.u64 	%rd2, [addCopy_param_1];
	ld.param.u32 	%r7, [addCopy_param_2];
	ld.param.u32 	%r4, [addCopy_param_3];
	ld.param.u32 	%r5, [addCopy_param_4];
	ld.param.u32 	%r6, [addCopy_param_5];
	mov.u32 	%r8, %ntid.x;
	mov.u32 	%r9, %ctaid.x;
	mov.u32 	%r10, %tid.x;
	mad.lo.s32 	%r1, %r8, %r9, %r10;
	mov.u32 	%r11, %ctaid.y;
	mov.u32 	%r12, %ntid.y;
	mov.u32 	%r13, %tid.y;
	mad.lo.s32 	%r2, %r12, %r11, %r13;
	mov.u32 	%r14, %nctaid.y;
	mul.lo.s32 	%r15, %r14, %r12;
	mad.lo.s32 	%r3, %r15, %r1, %r2;
	mul.lo.s32 	%r16, %r5, %r7;
	setp.ge.s32 	%p1, %r3, %r16;
	@%p1 bra 	$L__BB24_2;

	cvta.to.global.u64 	%rd3, %rd1;
	mad.lo.s32 	%r17, %r1, %r4, %r2;
	mad.lo.s32 	%r18, %r6, %r5, %r17;
	mul.wide.s32 	%rd4, %r3, 4;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.nc.f32 	%f1, [%rd5];
	cvta.to.global.u64 	%rd6, %rd2;
	mul.wide.s32 	%rd7, %r18, 4;
	add.s64 	%rd8, %rd6, %rd7;
	st.global.f32 	[%rd8], %f1;

$L__BB24_2:
	ret;

}
	// .globl	normalization_part_1
.visible .entry normalization_part_1(
	.param .u64 normalization_part_1_param_0,
	.param .u64 normalization_part_1_param_1,
	.param .u32 normalization_part_1_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<4>;
	.reg .b32 	%r<6>;
	.reg .b64 	%rd<8>;


	ld.param.u64 	%rd1, [normalization_part_1_param_0];
	ld.param.u64 	%rd2, [normalization_part_1_param_1];
	ld.param.u32 	%r2, [normalization_part_1_param_2];
	mov.u32 	%r3, %ntid.x;
	mov.u32 	%r4, %ctaid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB25_2;

	cvta.to.global.u64 	%rd3, %rd2;
	mul.wide.s32 	%rd4, %r1, 4;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.nc.f32 	%f1, [%rd5];
	add.ftz.f32 	%f2, %f1, 0f3A83126F;
	sqrt.approx.ftz.f32 	%f3, %f2;
	cvta.to.global.u64 	%rd6, %rd1;
	add.s64 	%rd7, %rd6, %rd4;
	st.global.f32 	[%rd7], %f3;

$L__BB25_2:
	ret;

}
	// .globl	NormalizationLayerForward2D
.visible .entry NormalizationLayerForward2D(
	.param .u64 NormalizationLayerForward2D_param_0,
	.param .u64 NormalizationLayerForward2D_param_1,
	.param .u64 NormalizationLayerForward2D_param_2,
	.param .u32 NormalizationLayerForward2D_param_3,
	.param .u32 NormalizationLayerForward2D_param_4,
	.param .u32 NormalizationLayerForward2D_param_5
)
{
	.reg .pred 	%p<19>;
	.reg .f32 	%f<84>;
	.reg .b32 	%r<62>;
	.reg .b64 	%rd<175>;


	ld.param.u64 	%rd38, [NormalizationLayerForward2D_param_0];
	ld.param.u64 	%rd39, [NormalizationLayerForward2D_param_1];
	ld.param.u64 	%rd40, [NormalizationLayerForward2D_param_2];
	ld.param.u32 	%r35, [NormalizationLayerForward2D_param_3];
	ld.param.u32 	%r34, [NormalizationLayerForward2D_param_4];
	ld.param.u32 	%r36, [NormalizationLayerForward2D_param_5];
	cvta.to.global.u64 	%rd1, %rd40;
	cvta.to.global.u64 	%rd2, %rd39;
	mov.u32 	%r37, %ctaid.x;
	mov.u32 	%r38, %ntid.x;
	mov.u32 	%r39, %tid.x;
	mad.lo.s32 	%r1, %r38, %r37, %r39;
	mov.u32 	%r40, %ctaid.y;
	mov.u32 	%r41, %ntid.y;
	mov.u32 	%r42, %tid.y;
	mad.lo.s32 	%r2, %r41, %r40, %r42;
	setp.ge.s32 	%p1, %r1, %r36;
	setp.ge.s32 	%p2, %r2, %r35;
	or.pred  	%p3, %p2, %p1;
	@%p3 bra 	$L__BB26_22;

	cvta.to.global.u64 	%rd3, %rd38;
	ld.global.u64 	%rd41, [%rd3+24];
	cvta.to.global.u64 	%rd42, %rd41;
	cvt.s64.s32 	%rd4, %r1;
	mul.wide.s32 	%rd43, %r1, 8;
	add.s64 	%rd44, %rd42, %rd43;
	ld.global.u64 	%rd45, [%rd44];
	cvta.to.global.u64 	%rd46, %rd45;
	cvt.s64.s32 	%rd5, %r2;
	mul.wide.s32 	%rd47, %r2, 4;
	add.s64 	%rd6, %rd46, %rd47;
	ld.global.f32 	%f78, [%rd6];
	mul.lo.s32 	%r60, %r2, %r34;
	setp.lt.s32 	%p4, %r34, 1;
	@%p4 bra 	$L__BB26_8;

	ld.global.u64 	%rd48, [%rd3+16];
	cvta.to.global.u64 	%rd49, %rd48;
	shl.b64 	%rd50, %rd4, 3;
	add.s64 	%rd51, %rd49, %rd50;
	ld.global.u64 	%rd52, [%rd51];
	cvta.to.global.u64 	%rd7, %rd52;
	and.b32  	%r51, %r34, 3;
	add.s32 	%r43, %r34, -1;
	setp.lt.u32 	%p5, %r43, 3;
	mov.u32 	%r50, %r60;
	@%p5 bra 	$L__BB26_5;

	sub.s32 	%r49, %r34, %r51;
	mul.wide.s32 	%rd53, %r60, 4;
	add.s64 	%rd54, %rd7, %rd53;
	add.s64 	%rd165, %rd54, 8;
	mov.u32 	%r50, %r60;

$L__BB26_4:
	ld.global.f32 	%f19, [%rd165+-8];
	add.ftz.f32 	%f20, %f78, %f19;
	ld.global.f32 	%f21, [%rd165+-4];
	add.ftz.f32 	%f22, %f20, %f21;
	ld.global.f32 	%f23, [%rd165];
	add.ftz.f32 	%f24, %f22, %f23;
	ld.global.f32 	%f25, [%rd165+4];
	add.ftz.f32 	%f78, %f24, %f25;
	add.s32 	%r50, %r50, 4;
	add.s64 	%rd165, %rd165, 16;
	add.s32 	%r49, %r49, -4;
	setp.ne.s32 	%p6, %r49, 0;
	@%p6 bra 	$L__BB26_4;

$L__BB26_5:
	setp.eq.s32 	%p7, %r51, 0;
	@%p7 bra 	$L__BB26_8;

	mul.wide.s32 	%rd55, %r50, 4;
	add.s64 	%rd166, %rd7, %rd55;

$L__BB26_7:
	.pragma "nounroll";
	ld.global.f32 	%f26, [%rd166];
	add.ftz.f32 	%f78, %f78, %f26;
	add.s64 	%rd166, %rd166, 4;
	add.s32 	%r51, %r51, -1;
	setp.ne.s32 	%p8, %r51, 0;
	@%p8 bra 	$L__BB26_7;

$L__BB26_8:
	st.global.f32 	[%rd6], %f78;
	ld.global.u64 	%rd56, [%rd3+32];
	cvta.to.global.u64 	%rd57, %rd56;
	shl.b64 	%rd58, %rd4, 3;
	add.s64 	%rd59, %rd57, %rd58;
	ld.global.u64 	%rd60, [%rd59];
	cvta.to.global.u64 	%rd61, %rd60;
	shl.b64 	%rd62, %rd5, 2;
	add.s64 	%rd14, %rd61, %rd62;
	ld.global.f32 	%f83, [%rd14];
	@%p4 bra 	$L__BB26_15;

	ld.global.u64 	%rd63, [%rd3+16];
	cvta.to.global.u64 	%rd64, %rd63;
	add.s64 	%rd66, %rd64, %rd58;
	ld.global.u64 	%rd67, [%rd66];
	cvta.to.global.u64 	%rd15, %rd67;
	and.b32  	%r55, %r34, 3;
	add.s32 	%r44, %r34, -1;
	setp.lt.u32 	%p10, %r44, 3;
	mov.u32 	%r54, %r60;
	@%p10 bra 	$L__BB26_12;

	sub.s32 	%r53, %r34, %r55;
	mul.wide.s32 	%rd68, %r60, 4;
	add.s64 	%rd69, %rd15, %rd68;
	add.s64 	%rd167, %rd69, 8;
	mov.u32 	%r54, %r60;

$L__BB26_11:
	ld.global.f32 	%f28, [%rd167+-8];
	sub.ftz.f32 	%f29, %f28, %f78;
	fma.rn.ftz.f32 	%f30, %f29, %f29, %f83;
	ld.global.f32 	%f31, [%rd167+-4];
	sub.ftz.f32 	%f32, %f31, %f78;
	fma.rn.ftz.f32 	%f33, %f32, %f32, %f30;
	ld.global.f32 	%f34, [%rd167];
	sub.ftz.f32 	%f35, %f34, %f78;
	fma.rn.ftz.f32 	%f36, %f35, %f35, %f33;
	ld.global.f32 	%f37, [%rd167+4];
	sub.ftz.f32 	%f38, %f37, %f78;
	fma.rn.ftz.f32 	%f83, %f38, %f38, %f36;
	add.s32 	%r54, %r54, 4;
	add.s64 	%rd167, %rd167, 16;
	add.s32 	%r53, %r53, -4;
	setp.ne.s32 	%p11, %r53, 0;
	@%p11 bra 	$L__BB26_11;

$L__BB26_12:
	setp.eq.s32 	%p12, %r55, 0;
	@%p12 bra 	$L__BB26_15;

	mul.wide.s32 	%rd70, %r54, 4;
	add.s64 	%rd168, %rd15, %rd70;

$L__BB26_14:
	.pragma "nounroll";
	ld.global.f32 	%f39, [%rd168];
	sub.ftz.f32 	%f40, %f39, %f78;
	fma.rn.ftz.f32 	%f83, %f40, %f40, %f83;
	add.s64 	%rd168, %rd168, 4;
	add.s32 	%r55, %r55, -1;
	setp.ne.s32 	%p13, %r55, 0;
	@%p13 bra 	$L__BB26_14;

$L__BB26_15:
	cvt.rn.f32.s32 	%f41, %r34;
	div.approx.ftz.f32 	%f42, %f83, %f41;
	st.global.f32 	[%rd14], %f42;
	add.ftz.f32 	%f43, %f42, 0f3A83126F;
	sqrt.approx.ftz.f32 	%f17, %f43;
	@%p4 bra 	$L__BB26_22;

	add.s32 	%r46, %r34, -1;
	and.b32  	%r61, %r34, 3;
	setp.lt.u32 	%p15, %r46, 3;
	mov.u32 	%r59, 0;
	@%p15 bra 	$L__BB26_19;

	sub.s32 	%r58, %r34, %r61;
	mul.wide.s32 	%rd71, %r60, 4;
	add.s64 	%rd171, %rd71, 12;
	mov.u64 	%rd169, %rd2;
	mov.u64 	%rd170, %rd1;

$L__BB26_18:
	ld.global.u64 	%rd72, [%rd3+16];
	cvta.to.global.u64 	%rd73, %rd72;
	add.s64 	%rd75, %rd73, %rd58;
	ld.global.u64 	%rd76, [%rd75];
	cvta.to.global.u64 	%rd77, %rd76;
	add.s64 	%rd78, %rd77, %rd171;
	ld.global.f32 	%f44, [%rd78+-12];
	sub.ftz.f32 	%f45, %f44, %f78;
	div.approx.ftz.f32 	%f46, %f45, %f17;
	ld.global.u64 	%rd79, [%rd3];
	cvta.to.global.u64 	%rd80, %rd79;
	add.s64 	%rd81, %rd80, %rd58;
	ld.global.u64 	%rd82, [%rd81];
	cvta.to.global.u64 	%rd83, %rd82;
	add.s64 	%rd84, %rd83, %rd171;
	st.global.f32 	[%rd84+-12], %f46;
	ld.global.nc.f32 	%f47, [%rd169];
	ld.global.nc.f32 	%f48, [%rd170];
	fma.rn.ftz.f32 	%f49, %f46, %f47, %f48;
	ld.global.u64 	%rd85, [%rd3+8];
	cvta.to.global.u64 	%rd86, %rd85;
	add.s64 	%rd87, %rd86, %rd58;
	ld.global.u64 	%rd88, [%rd87];
	cvta.to.global.u64 	%rd89, %rd88;
	add.s64 	%rd90, %rd89, %rd171;
	st.global.f32 	[%rd90+-12], %f49;
	ld.global.u64 	%rd91, [%rd3+16];
	cvta.to.global.u64 	%rd92, %rd91;
	add.s64 	%rd93, %rd92, %rd58;
	ld.global.u64 	%rd94, [%rd93];
	cvta.to.global.u64 	%rd95, %rd94;
	add.s64 	%rd96, %rd95, %rd171;
	ld.global.f32 	%f50, [%rd96+-8];
	sub.ftz.f32 	%f51, %f50, %f78;
	div.approx.ftz.f32 	%f52, %f51, %f17;
	ld.global.u64 	%rd97, [%rd3];
	cvta.to.global.u64 	%rd98, %rd97;
	add.s64 	%rd99, %rd98, %rd58;
	ld.global.u64 	%rd100, [%rd99];
	cvta.to.global.u64 	%rd101, %rd100;
	add.s64 	%rd102, %rd101, %rd171;
	st.global.f32 	[%rd102+-8], %f52;
	ld.global.nc.f32 	%f53, [%rd169+4];
	ld.global.nc.f32 	%f54, [%rd170+4];
	fma.rn.ftz.f32 	%f55, %f52, %f53, %f54;
	ld.global.u64 	%rd103, [%rd3+8];
	cvta.to.global.u64 	%rd104, %rd103;
	add.s64 	%rd105, %rd104, %rd58;
	ld.global.u64 	%rd106, [%rd105];
	cvta.to.global.u64 	%rd107, %rd106;
	add.s64 	%rd108, %rd107, %rd171;
	st.global.f32 	[%rd108+-8], %f55;
	ld.global.u64 	%rd109, [%rd3+16];
	cvta.to.global.u64 	%rd110, %rd109;
	add.s64 	%rd111, %rd110, %rd58;
	ld.global.u64 	%rd112, [%rd111];
	cvta.to.global.u64 	%rd113, %rd112;
	add.s64 	%rd114, %rd113, %rd171;
	ld.global.f32 	%f56, [%rd114+-4];
	sub.ftz.f32 	%f57, %f56, %f78;
	div.approx.ftz.f32 	%f58, %f57, %f17;
	ld.global.u64 	%rd115, [%rd3];
	cvta.to.global.u64 	%rd116, %rd115;
	add.s64 	%rd117, %rd116, %rd58;
	ld.global.u64 	%rd118, [%rd117];
	cvta.to.global.u64 	%rd119, %rd118;
	add.s64 	%rd120, %rd119, %rd171;
	st.global.f32 	[%rd120+-4], %f58;
	ld.global.nc.f32 	%f59, [%rd169+8];
	ld.global.nc.f32 	%f60, [%rd170+8];
	fma.rn.ftz.f32 	%f61, %f58, %f59, %f60;
	ld.global.u64 	%rd121, [%rd3+8];
	cvta.to.global.u64 	%rd122, %rd121;
	add.s64 	%rd123, %rd122, %rd58;
	ld.global.u64 	%rd124, [%rd123];
	cvta.to.global.u64 	%rd125, %rd124;
	add.s64 	%rd126, %rd125, %rd171;
	st.global.f32 	[%rd126+-4], %f61;
	ld.global.u64 	%rd127, [%rd3+16];
	cvta.to.global.u64 	%rd128, %rd127;
	add.s64 	%rd129, %rd128, %rd58;
	ld.global.u64 	%rd130, [%rd129];
	cvta.to.global.u64 	%rd131, %rd130;
	add.s64 	%rd132, %rd131, %rd171;
	ld.global.f32 	%f62, [%rd132];
	sub.ftz.f32 	%f63, %f62, %f78;
	div.approx.ftz.f32 	%f64, %f63, %f17;
	ld.global.u64 	%rd133, [%rd3];
	cvta.to.global.u64 	%rd134, %rd133;
	add.s64 	%rd135, %rd134, %rd58;
	ld.global.u64 	%rd136, [%rd135];
	cvta.to.global.u64 	%rd137, %rd136;
	add.s64 	%rd138, %rd137, %rd171;
	st.global.f32 	[%rd138], %f64;
	ld.global.nc.f32 	%f65, [%rd169+12];
	ld.global.nc.f32 	%f66, [%rd170+12];
	fma.rn.ftz.f32 	%f67, %f64, %f65, %f66;
	ld.global.u64 	%rd139, [%rd3+8];
	cvta.to.global.u64 	%rd140, %rd139;
	add.s64 	%rd141, %rd140, %rd58;
	ld.global.u64 	%rd142, [%rd141];
	cvta.to.global.u64 	%rd143, %rd142;
	add.s64 	%rd144, %rd143, %rd171;
	st.global.f32 	[%rd144], %f67;
	add.s32 	%r59, %r59, 4;
	add.s32 	%r60, %r60, 4;
	add.s64 	%rd171, %rd171, 16;
	add.s64 	%rd170, %rd170, 16;
	add.s64 	%rd169, %rd169, 16;
	add.s32 	%r58, %r58, -4;
	setp.ne.s32 	%p16, %r58, 0;
	@%p16 bra 	$L__BB26_18;

$L__BB26_19:
	setp.eq.s32 	%p17, %r61, 0;
	@%p17 bra 	$L__BB26_22;

	mul.wide.s32 	%rd145, %r59, 4;
	add.s64 	%rd174, %rd1, %rd145;
	add.s64 	%rd173, %rd2, %rd145;
	mul.wide.s32 	%rd172, %r60, 4;

$L__BB26_21:
	.pragma "nounroll";
	ld.global.u64 	%rd146, [%rd3+16];
	cvta.to.global.u64 	%rd147, %rd146;
	add.s64 	%rd149, %rd147, %rd58;
	ld.global.u64 	%rd150, [%rd149];
	cvta.to.global.u64 	%rd151, %rd150;
	add.s64 	%rd152, %rd151, %rd172;
	ld.global.f32 	%f68, [%rd152];
	sub.ftz.f32 	%f69, %f68, %f78;
	div.approx.ftz.f32 	%f70, %f69, %f17;
	ld.global.u64 	%rd153, [%rd3];
	cvta.to.global.u64 	%rd154, %rd153;
	add.s64 	%rd155, %rd154, %rd58;
	ld.global.u64 	%rd156, [%rd155];
	cvta.to.global.u64 	%rd157, %rd156;
	add.s64 	%rd158, %rd157, %rd172;
	st.global.f32 	[%rd158], %f70;
	ld.global.nc.f32 	%f71, [%rd173];
	ld.global.nc.f32 	%f72, [%rd174];
	fma.rn.ftz.f32 	%f73, %f70, %f71, %f72;
	ld.global.u64 	%rd159, [%rd3+8];
	cvta.to.global.u64 	%rd160, %rd159;
	add.s64 	%rd161, %rd160, %rd58;
	ld.global.u64 	%rd162, [%rd161];
	cvta.to.global.u64 	%rd163, %rd162;
	add.s64 	%rd164, %rd163, %rd172;
	st.global.f32 	[%rd164], %f73;
	add.s64 	%rd174, %rd174, 4;
	add.s64 	%rd173, %rd173, 4;
	add.s64 	%rd172, %rd172, 4;
	add.s32 	%r61, %r61, -1;
	setp.ne.s32 	%p18, %r61, 0;
	@%p18 bra 	$L__BB26_21;

$L__BB26_22:
	ret;

}
	// .globl	DenseLayerForward
.visible .entry DenseLayerForward(
	.param .u64 DenseLayerForward_param_0,
	.param .u64 DenseLayerForward_param_1,
	.param .u64 DenseLayerForward_param_2,
	.param .u32 DenseLayerForward_param_3,
	.param .u32 DenseLayerForward_param_4,
	.param .u32 DenseLayerForward_param_5
)
{
	.reg .pred 	%p<9>;
	.reg .f32 	%f<24>;
	.reg .b32 	%r<34>;
	.reg .b64 	%rd<112>;


	ld.param.u64 	%rd14, [DenseLayerForward_param_0];
	ld.param.u64 	%rd16, [DenseLayerForward_param_1];
	ld.param.u64 	%rd15, [DenseLayerForward_param_2];
	ld.param.u32 	%r17, [DenseLayerForward_param_3];
	ld.param.u32 	%r16, [DenseLayerForward_param_4];
	ld.param.u32 	%r18, [DenseLayerForward_param_5];
	cvta.to.global.u64 	%rd1, %rd16;
	mov.u32 	%r19, %ctaid.x;
	mov.u32 	%r20, %ntid.x;
	mov.u32 	%r21, %tid.x;
	mad.lo.s32 	%r1, %r20, %r19, %r21;
	mov.u32 	%r22, %ctaid.y;
	mov.u32 	%r23, %ntid.y;
	mov.u32 	%r24, %tid.y;
	mad.lo.s32 	%r2, %r23, %r22, %r24;
	setp.ge.s32 	%p1, %r1, %r18;
	setp.ge.s32 	%p2, %r2, %r17;
	or.pred  	%p3, %p2, %p1;
	@%p3 bra 	$L__BB27_9;

	mul.lo.s32 	%r32, %r2, %r16;
	cvta.to.global.u64 	%rd2, %rd14;
	ld.global.u64 	%rd17, [%rd2+8];
	cvta.to.global.u64 	%rd18, %rd17;
	cvt.s64.s32 	%rd3, %r1;
	mul.wide.s32 	%rd19, %r1, 8;
	add.s64 	%rd20, %rd18, %rd19;
	ld.global.u64 	%rd21, [%rd20];
	cvta.to.global.u64 	%rd22, %rd21;
	cvt.s64.s32 	%rd4, %r2;
	mul.wide.s32 	%rd23, %r2, 4;
	add.s64 	%rd24, %rd22, %rd23;
	ld.global.f32 	%f1, [%rd24];
	setp.lt.s32 	%p4, %r16, 1;
	@%p4 bra 	$L__BB27_8;

	add.s32 	%r26, %r16, -1;
	and.b32  	%r33, %r16, 3;
	setp.lt.u32 	%p5, %r26, 3;
	mov.u32 	%r31, 0;
	@%p5 bra 	$L__BB27_5;

	sub.s32 	%r30, %r16, %r33;
	mul.wide.s32 	%rd26, %r32, 4;
	add.s64 	%rd5, %rd1, %rd26;
	mov.u64 	%rd109, 8;
	shl.b64 	%rd29, %rd3, 3;

$L__BB27_4:
	ld.global.u64 	%rd27, [%rd2];
	cvta.to.global.u64 	%rd28, %rd27;
	add.s64 	%rd30, %rd28, %rd29;
	ld.global.u64 	%rd31, [%rd30];
	cvta.to.global.u64 	%rd32, %rd31;
	add.s64 	%rd33, %rd32, %rd109;
	add.s64 	%rd34, %rd5, %rd109;
	ld.global.f32 	%f2, [%rd34+-8];
	ld.global.f32 	%f3, [%rd33+-8];
	ld.global.u64 	%rd35, [%rd2+8];
	cvta.to.global.u64 	%rd36, %rd35;
	add.s64 	%rd37, %rd36, %rd29;
	ld.global.u64 	%rd38, [%rd37];
	cvta.to.global.u64 	%rd39, %rd38;
	shl.b64 	%rd40, %rd4, 2;
	add.s64 	%rd41, %rd39, %rd40;
	ld.global.f32 	%f4, [%rd41];
	fma.rn.ftz.f32 	%f5, %f3, %f2, %f4;
	st.global.f32 	[%rd41], %f5;
	ld.global.u64 	%rd42, [%rd2];
	cvta.to.global.u64 	%rd43, %rd42;
	add.s64 	%rd44, %rd43, %rd29;
	ld.global.u64 	%rd45, [%rd44];
	cvta.to.global.u64 	%rd46, %rd45;
	add.s64 	%rd47, %rd46, %rd109;
	ld.global.f32 	%f6, [%rd34+-4];
	ld.global.f32 	%f7, [%rd47+-4];
	ld.global.u64 	%rd48, [%rd2+8];
	cvta.to.global.u64 	%rd49, %rd48;
	add.s64 	%rd50, %rd49, %rd29;
	ld.global.u64 	%rd51, [%rd50];
	cvta.to.global.u64 	%rd52, %rd51;
	add.s64 	%rd53, %rd52, %rd40;
	ld.global.f32 	%f8, [%rd53];
	fma.rn.ftz.f32 	%f9, %f7, %f6, %f8;
	st.global.f32 	[%rd53], %f9;
	ld.global.u64 	%rd54, [%rd2];
	cvta.to.global.u64 	%rd55, %rd54;
	add.s64 	%rd56, %rd55, %rd29;
	ld.global.u64 	%rd57, [%rd56];
	cvta.to.global.u64 	%rd58, %rd57;
	add.s64 	%rd59, %rd58, %rd109;
	ld.global.f32 	%f10, [%rd34];
	ld.global.f32 	%f11, [%rd59];
	ld.global.u64 	%rd60, [%rd2+8];
	cvta.to.global.u64 	%rd61, %rd60;
	add.s64 	%rd62, %rd61, %rd29;
	ld.global.u64 	%rd63, [%rd62];
	cvta.to.global.u64 	%rd64, %rd63;
	add.s64 	%rd65, %rd64, %rd40;
	ld.global.f32 	%f12, [%rd65];
	fma.rn.ftz.f32 	%f13, %f11, %f10, %f12;
	st.global.f32 	[%rd65], %f13;
	ld.global.u64 	%rd66, [%rd2];
	cvta.to.global.u64 	%rd67, %rd66;
	add.s64 	%rd68, %rd67, %rd29;
	ld.global.u64 	%rd69, [%rd68];
	cvta.to.global.u64 	%rd70, %rd69;
	add.s64 	%rd71, %rd70, %rd109;
	ld.global.f32 	%f14, [%rd34+4];
	ld.global.f32 	%f15, [%rd71+4];
	ld.global.u64 	%rd72, [%rd2+8];
	cvta.to.global.u64 	%rd73, %rd72;
	add.s64 	%rd74, %rd73, %rd29;
	ld.global.u64 	%rd75, [%rd74];
	cvta.to.global.u64 	%rd76, %rd75;
	add.s64 	%rd77, %rd76, %rd40;
	ld.global.f32 	%f16, [%rd77];
	fma.rn.ftz.f32 	%f17, %f15, %f14, %f16;
	st.global.f32 	[%rd77], %f17;
	add.s32 	%r31, %r31, 4;
	add.s32 	%r32, %r32, 4;
	add.s64 	%rd109, %rd109, 16;
	add.s32 	%r30, %r30, -4;
	setp.ne.s32 	%p6, %r30, 0;
	@%p6 bra 	$L__BB27_4;

$L__BB27_5:
	setp.eq.s32 	%p7, %r33, 0;
	@%p7 bra 	$L__BB27_8;

	mul.wide.s32 	%rd111, %r31, 4;
	mul.wide.s32 	%rd78, %r32, 4;
	add.s64 	%rd110, %rd1, %rd78;
	shl.b64 	%rd81, %rd3, 3;

$L__BB27_7:
	.pragma "nounroll";
	ld.global.u64 	%rd79, [%rd2];
	cvta.to.global.u64 	%rd80, %rd79;
	add.s64 	%rd82, %rd80, %rd81;
	ld.global.u64 	%rd83, [%rd82];
	cvta.to.global.u64 	%rd84, %rd83;
	add.s64 	%rd85, %rd84, %rd111;
	ld.global.f32 	%f18, [%rd110];
	ld.global.f32 	%f19, [%rd85];
	ld.global.u64 	%rd86, [%rd2+8];
	cvta.to.global.u64 	%rd87, %rd86;
	add.s64 	%rd88, %rd87, %rd81;
	ld.global.u64 	%rd89, [%rd88];
	cvta.to.global.u64 	%rd90, %rd89;
	shl.b64 	%rd91, %rd4, 2;
	add.s64 	%rd92, %rd90, %rd91;
	ld.global.f32 	%f20, [%rd92];
	fma.rn.ftz.f32 	%f21, %f19, %f18, %f20;
	st.global.f32 	[%rd92], %f21;
	add.s64 	%rd111, %rd111, 4;
	add.s64 	%rd110, %rd110, 4;
	add.s32 	%r33, %r33, -1;
	setp.ne.s32 	%p8, %r33, 0;
	@%p8 bra 	$L__BB27_7;

$L__BB27_8:
	ld.global.u64 	%rd93, [%rd2+8];
	cvta.to.global.u64 	%rd94, %rd93;
	shl.b64 	%rd95, %rd3, 3;
	add.s64 	%rd96, %rd94, %rd95;
	ld.global.u64 	%rd97, [%rd96];
	cvta.to.global.u64 	%rd98, %rd97;
	shl.b64 	%rd99, %rd4, 2;
	add.s64 	%rd100, %rd98, %rd99;
	st.global.f32 	[%rd100], %f1;
	ld.global.u64 	%rd101, [%rd2+8];
	cvta.to.global.u64 	%rd102, %rd101;
	add.s64 	%rd103, %rd102, %rd95;
	ld.global.u64 	%rd104, [%rd103];
	cvta.to.global.u64 	%rd105, %rd104;
	add.s64 	%rd106, %rd105, %rd99;
	cvta.to.global.u64 	%rd107, %rd15;
	add.s64 	%rd108, %rd107, %rd99;
	ld.global.nc.f32 	%f22, [%rd108];
	atom.global.add.f32 	%f23, [%rd106], %f22;

$L__BB27_9:
	ret;

}
	// .globl	dot
.visible .entry dot(
	.param .u64 dot_param_0,
	.param .u64 dot_param_1,
	.param .u64 dot_param_2,
	.param .u32 dot_param_3,
	.param .u32 dot_param_4,
	.param .u32 dot_param_5,
	.param .u32 dot_param_6
)
{
	.reg .pred 	%p<9>;
	.reg .f32 	%f<30>;
	.reg .b32 	%r<32>;
	.reg .b64 	%rd<35>;


	ld.param.u64 	%rd18, [dot_param_0];
	ld.param.u64 	%rd19, [dot_param_1];
	ld.param.u64 	%rd17, [dot_param_2];
	ld.param.u32 	%r14, [dot_param_3];
	ld.param.u32 	%r12, [dot_param_4];
	ld.param.u32 	%r13, [dot_param_6];
	cvta.to.global.u64 	%rd1, %rd19;
	cvta.to.global.u64 	%rd2, %rd18;
	mov.u32 	%r15, %ctaid.x;
	mov.u32 	%r16, %ntid.x;
	mov.u32 	%r17, %tid.x;
	mad.lo.s32 	%r1, %r16, %r15, %r17;
	mov.u32 	%r18, %ctaid.y;
	mov.u32 	%r19, %ntid.y;
	mov.u32 	%r20, %tid.y;
	mad.lo.s32 	%r2, %r19, %r18, %r20;
	setp.ge.s32 	%p1, %r1, %r14;
	setp.ge.s32 	%p2, %r2, %r13;
	or.pred  	%p3, %p1, %p2;
	@%p3 bra 	$L__BB28_9;

	setp.lt.s32 	%p4, %r12, 1;
	mov.f32 	%f29, 0f00000000;
	@%p4 bra 	$L__BB28_8;

	add.s32 	%r22, %r12, -1;
	and.b32  	%r31, %r12, 3;
	setp.lt.u32 	%p5, %r22, 3;
	mov.f32 	%f29, 0f00000000;
	mov.u32 	%r30, 0;
	@%p5 bra 	$L__BB28_5;

	sub.s32 	%r29, %r12, %r31;
	mul.wide.s32 	%rd20, %r2, 4;
	add.s64 	%rd32, %rd1, %rd20;
	mul.lo.s32 	%r24, %r12, %r1;
	mul.wide.s32 	%rd21, %r24, 4;
	add.s64 	%rd22, %rd2, %rd21;
	add.s64 	%rd31, %rd22, 8;
	mul.wide.s32 	%rd5, %r13, 4;

$L__BB28_4:
	ld.global.nc.f32 	%f12, [%rd32];
	ld.global.nc.f32 	%f13, [%rd31+-8];
	fma.rn.ftz.f32 	%f14, %f13, %f12, %f29;
	add.s64 	%rd23, %rd32, %rd5;
	ld.global.nc.f32 	%f15, [%rd23];
	ld.global.nc.f32 	%f16, [%rd31+-4];
	fma.rn.ftz.f32 	%f17, %f16, %f15, %f14;
	add.s64 	%rd24, %rd23, %rd5;
	ld.global.nc.f32 	%f18, [%rd24];
	ld.global.nc.f32 	%f19, [%rd31];
	fma.rn.ftz.f32 	%f20, %f19, %f18, %f17;
	add.s64 	%rd25, %rd24, %rd5;
	add.s64 	%rd32, %rd25, %rd5;
	ld.global.nc.f32 	%f21, [%rd25];
	ld.global.nc.f32 	%f22, [%rd31+4];
	fma.rn.ftz.f32 	%f29, %f22, %f21, %f20;
	add.s32 	%r30, %r30, 4;
	add.s64 	%rd31, %rd31, 16;
	add.s32 	%r29, %r29, -4;
	setp.ne.s32 	%p6, %r29, 0;
	@%p6 bra 	$L__BB28_4;

$L__BB28_5:
	setp.eq.s32 	%p7, %r31, 0;
	@%p7 bra 	$L__BB28_8;

	mad.lo.s32 	%r25, %r30, %r13, %r2;
	mul.wide.s32 	%rd26, %r25, 4;
	add.s64 	%rd34, %rd1, %rd26;
	mul.wide.s32 	%rd11, %r13, 4;
	mad.lo.s32 	%r26, %r12, %r1, %r30;
	mul.wide.s32 	%rd27, %r26, 4;
	add.s64 	%rd33, %rd2, %rd27;

$L__BB28_7:
	.pragma "nounroll";
	ld.global.nc.f32 	%f23, [%rd34];
	ld.global.nc.f32 	%f24, [%rd33];
	fma.rn.ftz.f32 	%f29, %f24, %f23, %f29;
	add.s64 	%rd34, %rd34, %rd11;
	add.s64 	%rd33, %rd33, 4;
	add.s32 	%r31, %r31, -1;
	setp.ne.s32 	%p8, %r31, 0;
	@%p8 bra 	$L__BB28_7;

$L__BB28_8:
	mad.lo.s32 	%r27, %r1, %r13, %r2;
	cvta.to.global.u64 	%rd28, %rd17;
	mul.wide.s32 	%rd29, %r27, 4;
	add.s64 	%rd30, %rd28, %rd29;
	st.global.f32 	[%rd30], %f29;

$L__BB28_9:
	ret;

}
	// .globl	transpose
.visible .entry transpose(
	.param .u64 transpose_param_0,
	.param .u64 transpose_param_1,
	.param .u32 transpose_param_2,
	.param .u32 transpose_param_3
)
{
	.reg .pred 	%p<7>;
	.reg .f32 	%f<3>;
	.reg .b32 	%r<23>;
	.reg .b64 	%rd<9>;
	// demoted variable
	.shared .align 4 .b8 _ZZ9transposeE5block[4224];

	ld.param.u64 	%rd1, [transpose_param_0];
	ld.param.u64 	%rd2, [transpose_param_1];
	ld.param.u32 	%r9, [transpose_param_2];
	ld.param.u32 	%r10, [transpose_param_3];
	mov.u32 	%r11, %ctaid.x;
	shl.b32 	%r1, %r11, 5;
	mov.u32 	%r2, %tid.x;
	add.s32 	%r3, %r1, %r2;
	mov.u32 	%r12, %ctaid.y;
	shl.b32 	%r4, %r12, 5;
	mov.u32 	%r5, %tid.y;
	add.s32 	%r6, %r4, %r5;
	setp.ge.u32 	%p1, %r3, %r9;
	setp.ge.u32 	%p2, %r6, %r10;
	or.pred  	%p3, %p1, %p2;
	@%p3 bra 	$L__BB29_2;

	cvta.to.global.u64 	%rd3, %rd2;
	mad.lo.s32 	%r13, %r6, %r9, %r3;
	mul.wide.u32 	%rd4, %r13, 4;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.nc.f32 	%f1, [%rd5];
	mov.u32 	%r14, _ZZ9transposeE5block;
	mad.lo.s32 	%r15, %r5, 132, %r14;
	shl.b32 	%r16, %r2, 2;
	add.s32 	%r17, %r15, %r16;
	st.shared.f32 	[%r17], %f1;

$L__BB29_2:
	bar.sync 	0;
	add.s32 	%r7, %r4, %r2;
	setp.ge.u32 	%p4, %r7, %r10;
	add.s32 	%r8, %r1, %r5;
	setp.ge.u32 	%p5, %r8, %r9;
	or.pred  	%p6, %p5, %p4;
	@%p6 bra 	$L__BB29_4;

	mad.lo.s32 	%r18, %r8, %r10, %r7;
	mov.u32 	%r19, _ZZ9transposeE5block;
	mad.lo.s32 	%r20, %r2, 132, %r19;
	shl.b32 	%r21, %r5, 2;
	add.s32 	%r22, %r20, %r21;
	ld.shared.f32 	%f2, [%r22];
	cvta.to.global.u64 	%rd6, %rd1;
	mul.wide.u32 	%rd7, %r18, 4;
	add.s64 	%rd8, %rd6, %rd7;
	st.global.f32 	[%rd8], %f2;

$L__BB29_4:
	ret;

}
	// .globl	dropout
.visible .entry dropout(
	.param .u64 dropout_param_0,
	.param .u64 dropout_param_1,
	.param .f64 dropout_param_2,
	.param .u32 dropout_param_3
)
{
	.reg .pred 	%p<3>;
	.reg .f32 	%f<5>;
	.reg .b32 	%r<6>;
	.reg .f64 	%fd<6>;
	.reg .b64 	%rd<10>;


	ld.param.u64 	%rd2, [dropout_param_0];
	ld.param.u64 	%rd3, [dropout_param_1];
	ld.param.f64 	%fd1, [dropout_param_2];
	ld.param.u32 	%r2, [dropout_param_3];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r4, %r3, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB30_3;

	cvta.to.global.u64 	%rd4, %rd3;
	cvt.s64.s32 	%rd1, %r1;
	mul.wide.s32 	%rd5, %r1, 4;
	add.s64 	%rd6, %rd4, %rd5;
	ld.global.f32 	%f1, [%rd6];
	cvt.ftz.f64.f32 	%fd2, %f1;
	setp.leu.f64 	%p2, %fd2, %fd1;
	@%p2 bra 	$L__BB30_3;

	mov.f64 	%fd3, 0d3FF0000000000000;
	sub.f64 	%fd4, %fd3, %fd1;
	rcp.rn.f64 	%fd5, %fd4;
	cvt.rn.ftz.f32.f64 	%f2, %fd5;
	cvta.to.global.u64 	%rd7, %rd2;
	shl.b64 	%rd8, %rd1, 2;
	add.s64 	%rd9, %rd7, %rd8;
	ld.global.f32 	%f3, [%rd9];
	mul.ftz.f32 	%f4, %f3, %f2;
	st.global.f32 	[%rd9], %f4;

$L__BB30_3:
	ret;

}
	// .globl	sub_gpu
.visible .entry sub_gpu(
	.param .u64 sub_gpu_param_0,
	.param .u64 sub_gpu_param_1,
	.param .u64 sub_gpu_param_2,
	.param .u32 sub_gpu_param_3
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<4>;
	.reg .b32 	%r<6>;
	.reg .b64 	%rd<11>;


	ld.param.u64 	%rd1, [sub_gpu_param_0];
	ld.param.u64 	%rd2, [sub_gpu_param_1];
	ld.param.u64 	%rd3, [sub_gpu_param_2];
	ld.param.u32 	%r2, [sub_gpu_param_3];
	mov.u32 	%r3, %ntid.x;
	mov.u32 	%r4, %ctaid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB31_2;

	cvta.to.global.u64 	%rd4, %rd1;
	mul.wide.s32 	%rd5, %r1, 4;
	add.s64 	%rd6, %rd4, %rd5;
	cvta.to.global.u64 	%rd7, %rd2;
	add.s64 	%rd8, %rd7, %rd5;
	ld.global.nc.f32 	%f1, [%rd8];
	ld.global.nc.f32 	%f2, [%rd6];
	sub.ftz.f32 	%f3, %f2, %f1;
	cvta.to.global.u64 	%rd9, %rd3;
	add.s64 	%rd10, %rd9, %rd5;
	st.global.f32 	[%rd10], %f3;

$L__BB31_2:
	ret;

}
	// .globl	mul
.visible .entry mul(
	.param .u64 mul_param_0,
	.param .f32 mul_param_1,
	.param .u32 mul_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<4>;
	.reg .b32 	%r<6>;
	.reg .b64 	%rd<5>;


	ld.param.u64 	%rd1, [mul_param_0];
	ld.param.f32 	%f1, [mul_param_1];
	ld.param.u32 	%r2, [mul_param_2];
	mov.u32 	%r3, %ntid.x;
	mov.u32 	%r4, %ctaid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB32_2;

	cvta.to.global.u64 	%rd2, %rd1;
	mul.wide.s32 	%rd3, %r1, 4;
	add.s64 	%rd4, %rd2, %rd3;
	ld.global.f32 	%f2, [%rd4];
	mul.ftz.f32 	%f3, %f2, %f1;
	st.global.f32 	[%rd4], %f3;

$L__BB32_2:
	ret;

}
	// .globl	indexMaxElement
.visible .entry indexMaxElement(
	.param .u64 indexMaxElement_param_0,
	.param .u64 indexMaxElement_param_1,
	.param .u64 indexMaxElement_param_2,
	.param .u32 indexMaxElement_param_3
)
{
	.reg .pred 	%p<3>;
	.reg .f32 	%f<3>;
	.reg .b32 	%r<6>;
	.reg .b64 	%rd<9>;


	ld.param.u64 	%rd2, [indexMaxElement_param_0];
	ld.param.u64 	%rd4, [indexMaxElement_param_1];
	ld.param.u64 	%rd3, [indexMaxElement_param_2];
	ld.param.u32 	%r2, [indexMaxElement_param_3];
	cvta.to.global.u64 	%rd1, %rd4;
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r4, %r3, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB33_3;

	cvta.to.global.u64 	%rd5, %rd2;
	mul.wide.s32 	%rd6, %r1, 4;
	add.s64 	%rd7, %rd5, %rd6;
	ld.global.f32 	%f2, [%rd1];
	ld.global.f32 	%f1, [%rd7];
	setp.leu.ftz.f32 	%p2, %f1, %f2;
	@%p2 bra 	$L__BB33_3;

	st.global.f32 	[%rd1], %f1;
	cvta.to.global.u64 	%rd8, %rd3;
	st.global.u32 	[%rd8], %r1;

$L__BB33_3:
	ret;

}
	// .globl	derVar_part_1
.visible .entry derVar_part_1(
	.param .u64 derVar_part_1_param_0,
	.param .f32 derVar_part_1_param_1,
	.param .u64 derVar_part_1_param_2,
	.param .u32 derVar_part_1_param_3
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<8>;
	.reg .b32 	%r<6>;
	.reg .b64 	%rd<8>;


	ld.param.u64 	%rd1, [derVar_part_1_param_0];
	ld.param.f32 	%f1, [derVar_part_1_param_1];
	ld.param.u64 	%rd2, [derVar_part_1_param_2];
	ld.param.u32 	%r2, [derVar_part_1_param_3];
	mov.u32 	%r3, %ntid.x;
	mov.u32 	%r4, %ctaid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB34_2;

	cvta.to.global.u64 	%rd3, %rd1;
	mul.wide.s32 	%rd4, %r1, 4;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.nc.f32 	%f2, [%rd5];
	add.ftz.f32 	%f3, %f2, %f1;
	lg2.approx.ftz.f32 	%f4, %f3;
	mul.ftz.f32 	%f5, %f4, 0fBFC00000;
	ex2.approx.ftz.f32 	%f6, %f5;
	mul.ftz.f32 	%f7, %f6, 0fBF000000;
	cvta.to.global.u64 	%rd6, %rd2;
	add.s64 	%rd7, %rd6, %rd4;
	st.global.f32 	[%rd7], %f7;

$L__BB34_2:
	ret;

}
	// .globl	derVar_part_3
.visible .entry derVar_part_3(
	.param .u64 derVar_part_3_param_0,
	.param .u64 derVar_part_3_param_1,
	.param .u32 derVar_part_3_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<4>;
	.reg .b32 	%r<6>;
	.reg .b64 	%rd<8>;


	ld.param.u64 	%rd1, [derVar_part_3_param_0];
	ld.param.u64 	%rd2, [derVar_part_3_param_1];
	ld.param.u32 	%r2, [derVar_part_3_param_2];
	mov.u32 	%r3, %ntid.x;
	mov.u32 	%r4, %ctaid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB35_2;

	cvta.to.global.u64 	%rd3, %rd1;
	mul.wide.s32 	%rd4, %r1, 4;
	add.s64 	%rd5, %rd3, %rd4;
	cvta.to.global.u64 	%rd6, %rd2;
	add.s64 	%rd7, %rd6, %rd4;
	ld.global.f32 	%f1, [%rd7];
	ld.global.nc.f32 	%f2, [%rd5];
	mul.ftz.f32 	%f3, %f2, %f1;
	st.global.f32 	[%rd7], %f3;

$L__BB35_2:
	ret;

}
	// .globl	derMean_part_1
.visible .entry derMean_part_1(
	.param .u64 derMean_part_1_param_0,
	.param .f32 derMean_part_1_param_1,
	.param .u64 derMean_part_1_param_2,
	.param .u32 derMean_part_1_param_3
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<7>;
	.reg .b32 	%r<6>;
	.reg .b64 	%rd<8>;


	ld.param.u64 	%rd1, [derMean_part_1_param_0];
	ld.param.f32 	%f1, [derMean_part_1_param_1];
	ld.param.u64 	%rd2, [derMean_part_1_param_2];
	ld.param.u32 	%r2, [derMean_part_1_param_3];
	mov.u32 	%r3, %ntid.x;
	mov.u32 	%r4, %ctaid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB36_2;

	cvta.to.global.u64 	%rd3, %rd1;
	mul.wide.s32 	%rd4, %r1, 4;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.nc.f32 	%f2, [%rd5];
	add.ftz.f32 	%f3, %f2, %f1;
	sqrt.approx.ftz.f32 	%f4, %f3;
	mov.f32 	%f5, 0fBF800000;
	div.approx.ftz.f32 	%f6, %f5, %f4;
	cvta.to.global.u64 	%rd6, %rd2;
	add.s64 	%rd7, %rd6, %rd4;
	st.global.f32 	[%rd7], %f6;

$L__BB36_2:
	ret;

}
	// .globl	derMean_part_3
.visible .entry derMean_part_3(
	.param .u64 derMean_part_3_param_0,
	.param .u64 derMean_part_3_param_1,
	.param .u64 derMean_part_3_param_2,
	.param .u32 derMean_part_3_param_3,
	.param .u64 derMean_part_3_param_4,
	.param .u32 derMean_part_3_param_5
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<10>;
	.reg .b32 	%r<7>;
	.reg .b64 	%rd<14>;


	ld.param.u64 	%rd1, [derMean_part_3_param_0];
	ld.param.u64 	%rd2, [derMean_part_3_param_1];
	ld.param.u64 	%rd3, [derMean_part_3_param_2];
	ld.param.u32 	%r2, [derMean_part_3_param_3];
	ld.param.u64 	%rd4, [derMean_part_3_param_4];
	ld.param.u32 	%r3, [derMean_part_3_param_5];
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %ctaid.x;
	mov.u32 	%r6, %tid.x;
	mad.lo.s32 	%r1, %r4, %r5, %r6;
	setp.ge.s32 	%p1, %r1, %r3;
	@%p1 bra 	$L__BB37_2;

	cvta.to.global.u64 	%rd5, %rd4;
	mul.wide.s32 	%rd6, %r1, 4;
	add.s64 	%rd7, %rd5, %rd6;
	cvta.to.global.u64 	%rd8, %rd1;
	add.s64 	%rd9, %rd8, %rd6;
	ld.global.nc.f32 	%f1, [%rd9];
	ld.global.f32 	%f2, [%rd7];
	cvta.to.global.u64 	%rd10, %rd2;
	add.s64 	%rd11, %rd10, %rd6;
	ld.global.nc.f32 	%f3, [%rd11];
	mul.ftz.f32 	%f4, %f3, 0fC0000000;
	cvta.to.global.u64 	%rd12, %rd3;
	add.s64 	%rd13, %rd12, %rd6;
	ld.global.nc.f32 	%f5, [%rd13];
	mul.ftz.f32 	%f6, %f4, %f5;
	cvt.rn.f32.s32 	%f7, %r2;
	div.approx.ftz.f32 	%f8, %f6, %f7;
	fma.rn.ftz.f32 	%f9, %f2, %f1, %f8;
	st.global.f32 	[%rd7], %f9;

$L__BB37_2:
	ret;

}
	// .globl	derNorm_part_1
.visible .entry derNorm_part_1(
	.param .u64 derNorm_part_1_param_0,
	.param .f32 derNorm_part_1_param_1,
	.param .u64 derNorm_part_1_param_2,
	.param .u32 derNorm_part_1_param_3
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<5>;
	.reg .b32 	%r<6>;
	.reg .b64 	%rd<8>;


	ld.param.u64 	%rd1, [derNorm_part_1_param_0];
	ld.param.f32 	%f1, [derNorm_part_1_param_1];
	ld.param.u64 	%rd2, [derNorm_part_1_param_2];
	ld.param.u32 	%r2, [derNorm_part_1_param_3];
	mov.u32 	%r3, %ntid.x;
	mov.u32 	%r4, %ctaid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB38_2;

	cvta.to.global.u64 	%rd3, %rd1;
	mul.wide.s32 	%rd4, %r1, 4;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.nc.f32 	%f2, [%rd5];
	add.ftz.f32 	%f3, %f2, %f1;
	rsqrt.approx.ftz.f32 	%f4, %f3;
	cvta.to.global.u64 	%rd6, %rd2;
	add.s64 	%rd7, %rd6, %rd4;
	st.global.f32 	[%rd7], %f4;

$L__BB38_2:
	ret;

}
	// .globl	pow2
.visible .entry pow2(
	.param .u64 pow2_param_0,
	.param .u32 pow2_param_1
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<3>;
	.reg .b32 	%r<6>;
	.reg .b64 	%rd<5>;


	ld.param.u64 	%rd1, [pow2_param_0];
	ld.param.u32 	%r2, [pow2_param_1];
	mov.u32 	%r3, %ntid.x;
	mov.u32 	%r4, %ctaid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB39_2;

	cvta.to.global.u64 	%rd2, %rd1;
	mul.wide.s32 	%rd3, %r1, 4;
	add.s64 	%rd4, %rd2, %rd3;
	ld.global.f32 	%f1, [%rd4];
	mul.ftz.f32 	%f2, %f1, %f1;
	st.global.f32 	[%rd4], %f2;

$L__BB39_2:
	ret;

}
	// .globl	sum
.visible .entry sum(
	.param .u64 sum_param_0,
	.param .u64 sum_param_1,
	.param .u32 sum_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<3>;
	.reg .b32 	%r<6>;
	.reg .b64 	%rd<7>;


	ld.param.u64 	%rd1, [sum_param_0];
	ld.param.u64 	%rd2, [sum_param_1];
	ld.param.u32 	%r2, [sum_param_2];
	mov.u32 	%r3, %ntid.x;
	mov.u32 	%r4, %ctaid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB40_2;

	cvta.to.global.u64 	%rd3, %rd1;
	mul.wide.s32 	%rd4, %r1, 4;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.nc.f32 	%f1, [%rd5];
	cvta.to.global.u64 	%rd6, %rd2;
	atom.global.add.f32 	%f2, [%rd6], %f1;

$L__BB40_2:
	ret;

}
	// .globl	isnan
.visible .entry isnan(
	.param .u64 isnan_param_0,
	.param .u64 isnan_param_1,
	.param .u32 isnan_param_2
)
{
	.reg .pred 	%p<4>;
	.reg .f32 	%f<3>;
	.reg .b32 	%r<8>;
	.reg .b64 	%rd<7>;


	ld.param.u64 	%rd2, [isnan_param_0];
	ld.param.u64 	%rd3, [isnan_param_1];
	ld.param.u32 	%r2, [isnan_param_2];
	cvta.to.global.u64 	%rd1, %rd3;
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r4, %r3, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB41_4;

	ld.global.u32 	%r6, [%rd1];
	setp.ne.s32 	%p2, %r6, 0;
	@%p2 bra 	$L__BB41_4;

	cvta.to.global.u64 	%rd4, %rd2;
	mul.wide.s32 	%rd5, %r1, 4;
	add.s64 	%rd6, %rd4, %rd5;
	ld.global.nc.f32 	%f1, [%rd6];
	abs.ftz.f32 	%f2, %f1;
	setp.le.ftz.f32 	%p3, %f2, 0f7F800000;
	@%p3 bra 	$L__BB41_4;

	mov.u32 	%r7, 1;
	st.global.u32 	[%rd1], %r7;

$L__BB41_4:
	ret;

}
	// .globl	divide_add
.visible .entry divide_add(
	.param .u64 divide_add_param_0,
	.param .u64 divide_add_param_1,
	.param .u32 divide_add_param_2
)
{
	.reg .f32 	%f<5>;
	.reg .b32 	%r<2>;
	.reg .b64 	%rd<5>;


	ld.param.u64 	%rd1, [divide_add_param_0];
	ld.param.u64 	%rd2, [divide_add_param_1];
	ld.param.u32 	%r1, [divide_add_param_2];
	cvta.to.global.u64 	%rd3, %rd1;
	cvta.to.global.u64 	%rd4, %rd2;
	ld.global.f32 	%f1, [%rd4];
	cvt.rn.f32.s32 	%f2, %r1;
	div.approx.ftz.f32 	%f3, %f1, %f2;
	atom.global.add.f32 	%f4, [%rd3], %f3;
	ret;

}
	// .globl	momentum
.visible .entry momentum(
	.param .u64 momentum_param_0,
	.param .u64 momentum_param_1,
	.param .f32 momentum_param_2,
	.param .u32 momentum_param_3
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<8>;
	.reg .b32 	%r<6>;
	.reg .b64 	%rd<8>;


	ld.param.u64 	%rd1, [momentum_param_0];
	ld.param.u64 	%rd2, [momentum_param_1];
	ld.param.f32 	%f1, [momentum_param_2];
	ld.param.u32 	%r2, [momentum_param_3];
	mov.u32 	%r3, %ntid.x;
	mov.u32 	%r4, %ctaid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB43_2;

	cvta.to.global.u64 	%rd3, %rd1;
	mul.wide.s32 	%rd4, %r1, 4;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.f32 	%f2, [%rd5];
	cvta.to.global.u64 	%rd6, %rd2;
	add.s64 	%rd7, %rd6, %rd4;
	mov.f32 	%f3, 0f3F800000;
	sub.ftz.f32 	%f4, %f3, %f1;
	ld.global.nc.f32 	%f5, [%rd7];
	mul.ftz.f32 	%f6, %f4, %f5;
	fma.rn.ftz.f32 	%f7, %f2, %f1, %f6;
	st.global.f32 	[%rd5], %f7;

$L__BB43_2:
	ret;

}
	// .globl	momentumPow2
.visible .entry momentumPow2(
	.param .u64 momentumPow2_param_0,
	.param .u64 momentumPow2_param_1,
	.param .f32 momentumPow2_param_2,
	.param .u32 momentumPow2_param_3
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<9>;
	.reg .b32 	%r<6>;
	.reg .b64 	%rd<8>;


	ld.param.u64 	%rd1, [momentumPow2_param_0];
	ld.param.u64 	%rd2, [momentumPow2_param_1];
	ld.param.f32 	%f1, [momentumPow2_param_2];
	ld.param.u32 	%r2, [momentumPow2_param_3];
	mov.u32 	%r3, %ntid.x;
	mov.u32 	%r4, %ctaid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB44_2;

	cvta.to.global.u64 	%rd3, %rd1;
	mul.wide.s32 	%rd4, %r1, 4;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.f32 	%f2, [%rd5];
	cvta.to.global.u64 	%rd6, %rd2;
	add.s64 	%rd7, %rd6, %rd4;
	ld.global.nc.f32 	%f3, [%rd7];
	mov.f32 	%f4, 0f3F800000;
	sub.ftz.f32 	%f5, %f4, %f1;
	mul.ftz.f32 	%f6, %f5, %f3;
	mul.ftz.f32 	%f7, %f3, %f6;
	fma.rn.ftz.f32 	%f8, %f2, %f1, %f7;
	st.global.f32 	[%rd5], %f8;

$L__BB44_2:
	ret;

}
	// .globl	subDivSqrtNorm
.visible .entry subDivSqrtNorm(
	.param .u64 subDivSqrtNorm_param_0,
	.param .u64 subDivSqrtNorm_param_1,
	.param .f32 subDivSqrtNorm_param_2,
	.param .f32 subDivSqrtNorm_param_3,
	.param .f32 subDivSqrtNorm_param_4,
	.param .u64 subDivSqrtNorm_param_5,
	.param .u32 subDivSqrtNorm_param_6
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<15>;
	.reg .b32 	%r<6>;
	.reg .b64 	%rd<11>;


	ld.param.u64 	%rd1, [subDivSqrtNorm_param_0];
	ld.param.u64 	%rd2, [subDivSqrtNorm_param_1];
	ld.param.f32 	%f1, [subDivSqrtNorm_param_2];
	ld.param.f32 	%f2, [subDivSqrtNorm_param_3];
	ld.param.f32 	%f3, [subDivSqrtNorm_param_4];
	ld.param.u64 	%rd3, [subDivSqrtNorm_param_5];
	ld.param.u32 	%r2, [subDivSqrtNorm_param_6];
	mov.u32 	%r3, %ntid.x;
	mov.u32 	%r4, %ctaid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB45_2;

	cvta.to.global.u64 	%rd4, %rd1;
	cvta.to.global.u64 	%rd5, %rd3;
	mul.wide.s32 	%rd6, %r1, 4;
	add.s64 	%rd7, %rd5, %rd6;
	add.ftz.f32 	%f4, %f2, 0f33D6BF95;
	div.approx.ftz.f32 	%f5, %f1, %f4;
	add.s64 	%rd8, %rd4, %rd6;
	ld.global.nc.f32 	%f6, [%rd8];
	mul.ftz.f32 	%f7, %f5, %f6;
	neg.ftz.f32 	%f8, %f7;
	cvta.to.global.u64 	%rd9, %rd2;
	add.s64 	%rd10, %rd9, %rd6;
	ld.global.nc.f32 	%f9, [%rd10];
	div.approx.ftz.f32 	%f10, %f9, %f3;
	sqrt.approx.ftz.f32 	%f11, %f10;
	add.ftz.f32 	%f12, %f11, 0f33D6BF95;
	div.approx.ftz.f32 	%f13, %f8, %f12;
	atom.global.add.f32 	%f14, [%rd7], %f13;

$L__BB45_2:
	ret;

}
	// .globl	addBackCopy
.visible .entry addBackCopy(
	.param .u64 addBackCopy_param_0,
	.param .u32 addBackCopy_param_1,
	.param .u32 addBackCopy_param_2,
	.param .u32 addBackCopy_param_3,
	.param .u32 addBackCopy_param_4,
	.param .u64 addBackCopy_param_5
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<2>;
	.reg .b32 	%r<19>;
	.reg .b64 	%rd<9>;


	ld.param.u64 	%rd1, [addBackCopy_param_0];
	ld.param.u32 	%r4, [addBackCopy_param_1];
	ld.param.u32 	%r7, [addBackCopy_param_2];
	ld.param.u32 	%r5, [addBackCopy_param_3];
	ld.param.u32 	%r6, [addBackCopy_param_4];
	ld.param.u64 	%rd2, [addBackCopy_param_5];
	mov.u32 	%r8, %ctaid.x;
	mov.u32 	%r9, %ntid.x;
	mov.u32 	%r10, %tid.x;
	mad.lo.s32 	%r1, %r8, %r9, %r10;
	mov.u32 	%r11, %ntid.y;
	mov.u32 	%r12, %ctaid.y;
	mov.u32 	%r13, %tid.y;
	mad.lo.s32 	%r2, %r12, %r11, %r13;
	mov.u32 	%r14, %nctaid.y;
	mul.lo.s32 	%r15, %r14, %r11;
	mad.lo.s32 	%r3, %r15, %r1, %r2;
	mul.lo.s32 	%r16, %r5, %r7;
	setp.ge.s32 	%p1, %r3, %r16;
	@%p1 bra 	$L__BB46_2;

	cvta.to.global.u64 	%rd3, %rd1;
	mad.lo.s32 	%r17, %r1, %r4, %r2;
	mad.lo.s32 	%r18, %r6, %r5, %r17;
	mul.wide.s32 	%rd4, %r18, 4;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.nc.f32 	%f1, [%rd5];
	cvta.to.global.u64 	%rd6, %rd2;
	mul.wide.s32 	%rd7, %r3, 4;
	add.s64 	%rd8, %rd6, %rd7;
	st.global.f32 	[%rd8], %f1;

$L__BB46_2:
	ret;

}
	// .globl	dropoutBack
.visible .entry dropoutBack(
	.param .u64 dropoutBack_param_0,
	.param .u64 dropoutBack_param_1,
	.param .f32 dropoutBack_param_2,
	.param .u64 dropoutBack_param_3,
	.param .u32 dropoutBack_param_4
)
{
	.reg .pred 	%p<3>;
	.reg .f32 	%f<5>;
	.reg .b32 	%r<6>;
	.reg .b64 	%rd<13>;


	ld.param.u64 	%rd2, [dropoutBack_param_0];
	ld.param.u64 	%rd3, [dropoutBack_param_1];
	ld.param.f32 	%f1, [dropoutBack_param_2];
	ld.param.u64 	%rd4, [dropoutBack_param_3];
	ld.param.u32 	%r2, [dropoutBack_param_4];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r4, %r3, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB47_3;

	cvta.to.global.u64 	%rd5, %rd2;
	cvt.s64.s32 	%rd1, %r1;
	mul.wide.s32 	%rd6, %r1, 4;
	add.s64 	%rd7, %rd5, %rd6;
	ld.global.nc.f32 	%f2, [%rd7];
	setp.eq.ftz.f32 	%p2, %f2, 0f00000000;
	@%p2 bra 	$L__BB47_3;

	cvta.to.global.u64 	%rd8, %rd3;
	shl.b64 	%rd9, %rd1, 2;
	add.s64 	%rd10, %rd8, %rd9;
	ld.global.nc.f32 	%f3, [%rd10];
	mul.ftz.f32 	%f4, %f3, %f1;
	cvta.to.global.u64 	%rd11, %rd4;
	add.s64 	%rd12, %rd11, %rd9;
	st.global.f32 	[%rd12], %f4;

$L__BB47_3:
	ret;

}
	// .globl	mask
.visible .entry mask(
	.param .u64 mask_param_0,
	.param .f32 mask_param_1,
	.param .f32 mask_param_2,
	.param .u64 mask_param_3,
	.param .u32 mask_param_4
)
{
	.reg .pred 	%p<3>;
	.reg .f32 	%f<4>;
	.reg .b32 	%r<6>;
	.reg .b64 	%rd<10>;


	ld.param.u64 	%rd2, [mask_param_0];
	ld.param.f32 	%f1, [mask_param_1];
	ld.param.f32 	%f2, [mask_param_2];
	ld.param.u64 	%rd3, [mask_param_3];
	ld.param.u32 	%r2, [mask_param_4];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r4, %r3, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB48_3;

	cvta.to.global.u64 	%rd4, %rd2;
	cvt.s64.s32 	%rd1, %r1;
	mul.wide.s32 	%rd5, %r1, 4;
	add.s64 	%rd6, %rd4, %rd5;
	ld.global.nc.f32 	%f3, [%rd6];
	setp.neu.ftz.f32 	%p2, %f3, %f1;
	@%p2 bra 	$L__BB48_3;

	cvta.to.global.u64 	%rd7, %rd3;
	shl.b64 	%rd8, %rd1, 2;
	add.s64 	%rd9, %rd7, %rd8;
	st.global.f32 	[%rd9], %f2;

$L__BB48_3:
	ret;

}
	// .globl	fillUnderDiagonal
.visible .entry fillUnderDiagonal(
	.param .u32 fillUnderDiagonal_param_0,
	.param .f32 fillUnderDiagonal_param_1,
	.param .u64 fillUnderDiagonal_param_2,
	.param .u32 fillUnderDiagonal_param_3
)
{
	.reg .pred 	%p<8>;
	.reg .f32 	%f<2>;
	.reg .b32 	%r<25>;
	.reg .b64 	%rd<14>;


	ld.param.u32 	%r11, [fillUnderDiagonal_param_0];
	ld.param.f32 	%f1, [fillUnderDiagonal_param_1];
	ld.param.u64 	%rd8, [fillUnderDiagonal_param_2];
	ld.param.u32 	%r12, [fillUnderDiagonal_param_3];
	cvta.to.global.u64 	%rd1, %rd8;
	mov.u32 	%r13, %ctaid.x;
	mov.u32 	%r14, %ntid.x;
	mov.u32 	%r15, %tid.x;
	mad.lo.s32 	%r1, %r14, %r13, %r15;
	setp.ge.s32 	%p1, %r1, %r12;
	setp.lt.s32 	%p2, %r1, 0;
	or.pred  	%p3, %p1, %p2;
	@%p3 bra 	$L__BB49_7;

	add.s32 	%r17, %r1, 1;
	and.b32  	%r24, %r17, 3;
	setp.lt.u32 	%p4, %r1, 3;
	mov.u32 	%r23, 0;
	@%p4 bra 	$L__BB49_4;

	mul.lo.s32 	%r19, %r11, %r1;
	mul.wide.s32 	%rd9, %r19, 4;
	add.s64 	%rd10, %rd1, %rd9;
	add.s64 	%rd12, %rd10, 8;
	sub.s32 	%r21, %r1, %r24;

$L__BB49_3:
	st.global.f32 	[%rd12+-8], %f1;
	st.global.f32 	[%rd12+-4], %f1;
	st.global.f32 	[%rd12], %f1;
	st.global.f32 	[%rd12+4], %f1;
	add.s32 	%r23, %r23, 4;
	add.s64 	%rd12, %rd12, 16;
	add.s32 	%r21, %r21, -4;
	setp.ne.s32 	%p5, %r21, -1;
	@%p5 bra 	$L__BB49_3;

$L__BB49_4:
	setp.eq.s32 	%p6, %r24, 0;
	@%p6 bra 	$L__BB49_7;

	mad.lo.s32 	%r20, %r11, %r1, %r23;
	mul.wide.s32 	%rd11, %r20, 4;
	add.s64 	%rd13, %rd1, %rd11;

$L__BB49_6:
	.pragma "nounroll";
	st.global.f32 	[%rd13], %f1;
	add.s64 	%rd13, %rd13, 4;
	add.s32 	%r24, %r24, -1;
	setp.ne.s32 	%p7, %r24, 0;
	@%p7 bra 	$L__BB49_6;

$L__BB49_7:
	ret;

}
	// .globl	derGelu
.visible .entry derGelu(
	.param .u64 derGelu_param_0,
	.param .u64 derGelu_param_1,
	.param .u64 derGelu_param_2,
	.param .u32 derGelu_param_3
)
{
	.reg .pred 	%p<4>;
	.reg .f32 	%f<40>;
	.reg .b32 	%r<10>;
	.reg .b64 	%rd<13>;


	ld.param.u64 	%rd2, [derGelu_param_0];
	ld.param.u64 	%rd3, [derGelu_param_1];
	ld.param.u64 	%rd4, [derGelu_param_2];
	ld.param.u32 	%r2, [derGelu_param_3];
	mov.u32 	%r3, %ntid.x;
	mov.u32 	%r4, %ctaid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB50_5;

	cvta.to.global.u64 	%rd5, %rd2;
	cvt.s64.s32 	%rd1, %r1;
	mul.wide.s32 	%rd6, %r1, 4;
	add.s64 	%rd7, %rd5, %rd6;
	ld.global.nc.f32 	%f1, [%rd7];
	mul.ftz.f32 	%f7, %f1, %f1;
	mul.ftz.f32 	%f8, %f1, %f7;
	mul.ftz.f32 	%f9, %f8, 0f3D122277;
	fma.rn.ftz.f32 	%f2, %f1, 0f3F4C422A, %f9;
	abs.ftz.f32 	%f3, %f2;
	setp.ltu.ftz.f32 	%p2, %f3, 0f3F19999A;
	@%p2 bra 	$L__BB50_3;
	bra.uni 	$L__BB50_2;

$L__BB50_3:
	mul.ftz.f32 	%f18, %f2, %f2;
	mov.f32 	%f19, 0fBD563CAE;
	mov.f32 	%f20, 0f3C80F082;
	fma.rn.ftz.f32 	%f21, %f20, %f18, %f19;
	mov.f32 	%f22, 0f3E085941;
	fma.rn.ftz.f32 	%f23, %f21, %f18, %f22;
	mov.f32 	%f24, 0fBEAAA9ED;
	fma.rn.ftz.f32 	%f25, %f23, %f18, %f24;
	mov.f32 	%f26, 0f00000000;
	fma.rn.ftz.f32 	%f27, %f25, %f18, %f26;
	fma.rn.ftz.f32 	%f39, %f27, %f2, %f2;
	bra.uni 	$L__BB50_4;

$L__BB50_2:
	mul.ftz.f32 	%f10, %f3, 0f4038AA3B;
	ex2.approx.ftz.f32 	%f11, %f10;
	add.ftz.f32 	%f12, %f11, 0f3F800000;
	mov.f32 	%f13, 0f3F800000;
	rcp.approx.ftz.f32 	%f14, %f12;
	mov.f32 	%f15, 0fC0000000;
	fma.rn.ftz.f32 	%f16, %f14, %f15, %f13;
	setp.ge.ftz.f32 	%p3, %f3, 0f41102CB4;
	selp.f32 	%f17, 0f3F800000, %f16, %p3;
	mov.b32 	%r6, %f17;
	mov.b32 	%r7, %f2;
	and.b32  	%r8, %r7, -2147483648;
	or.b32  	%r9, %r8, %r6;
	mov.b32 	%f39, %r9;

$L__BB50_4:
	cvta.to.global.u64 	%rd8, %rd3;
	shl.b64 	%rd9, %rd1, 2;
	add.s64 	%rd10, %rd8, %rd9;
	ld.global.nc.f32 	%f28, [%rd10];
	mul.ftz.f32 	%f29, %f28, 0f3F000000;
	mul.ftz.f32 	%f30, %f39, %f39;
	mov.f32 	%f31, 0f3F800000;
	sub.ftz.f32 	%f32, %f31, %f30;
	mul.ftz.f32 	%f33, %f1, %f32;
	mul.ftz.f32 	%f34, %f1, 0f3DDB33B3;
	fma.rn.ftz.f32 	%f35, %f1, %f34, 0f3F4C426B;
	add.ftz.f32 	%f36, %f39, 0f3F800000;
	fma.rn.ftz.f32 	%f37, %f35, %f33, %f36;
	mul.ftz.f32 	%f38, %f29, %f37;
	cvta.to.global.u64 	%rd11, %rd4;
	add.s64 	%rd12, %rd11, %rd9;
	st.global.f32 	[%rd12], %f38;

$L__BB50_5:
	ret;

}
	// .globl	matrixMultiplicationKernel
.visible .entry matrixMultiplicationKernel(
	.param .u64 matrixMultiplicationKernel_param_0,
	.param .u64 matrixMultiplicationKernel_param_1,
	.param .u64 matrixMultiplicationKernel_param_2,
	.param .u32 matrixMultiplicationKernel_param_3,
	.param .u32 matrixMultiplicationKernel_param_4,
	.param .u32 matrixMultiplicationKernel_param_5
)
{
	.reg .pred 	%p<7>;
	.reg .f32 	%f<30>;
	.reg .b32 	%r<36>;
	.reg .b64 	%rd<35>;


	ld.param.u64 	%rd18, [matrixMultiplicationKernel_param_0];
	ld.param.u64 	%rd19, [matrixMultiplicationKernel_param_1];
	ld.param.u64 	%rd17, [matrixMultiplicationKernel_param_2];
	ld.param.u32 	%r12, [matrixMultiplicationKernel_param_3];
	ld.param.u32 	%r14, [matrixMultiplicationKernel_param_4];
	ld.param.u32 	%r13, [matrixMultiplicationKernel_param_5];
	cvta.to.global.u64 	%rd1, %rd19;
	cvta.to.global.u64 	%rd2, %rd18;
	mov.u32 	%r15, %ntid.y;
	mov.u32 	%r16, %ctaid.y;
	mov.u32 	%r17, %tid.y;
	mad.lo.s32 	%r1, %r16, %r15, %r17;
	mov.u32 	%r18, %ntid.x;
	mov.u32 	%r19, %ctaid.x;
	mov.u32 	%r20, %tid.x;
	mad.lo.s32 	%r2, %r19, %r18, %r20;
	mov.u32 	%r21, %nctaid.y;
	mul.lo.s32 	%r22, %r21, %r15;
	mad.lo.s32 	%r23, %r22, %r1, %r2;
	mul.lo.s32 	%r24, %r13, %r14;
	setp.ge.s32 	%p1, %r23, %r24;
	@%p1 bra 	$L__BB51_9;

	setp.lt.s32 	%p2, %r12, 1;
	mov.f32 	%f29, 0f00000000;
	@%p2 bra 	$L__BB51_8;

	add.s32 	%r26, %r12, -1;
	and.b32  	%r35, %r12, 3;
	setp.lt.u32 	%p3, %r26, 3;
	mov.f32 	%f29, 0f00000000;
	mov.u32 	%r34, 0;
	@%p3 bra 	$L__BB51_5;

	sub.s32 	%r33, %r12, %r35;
	mul.wide.s32 	%rd20, %r2, 4;
	add.s64 	%rd32, %rd1, %rd20;
	mul.lo.s32 	%r28, %r12, %r1;
	mul.wide.s32 	%rd21, %r28, 4;
	add.s64 	%rd22, %rd2, %rd21;
	add.s64 	%rd31, %rd22, 8;
	mul.wide.s32 	%rd5, %r13, 4;

$L__BB51_4:
	ld.global.nc.f32 	%f12, [%rd32];
	ld.global.nc.f32 	%f13, [%rd31+-8];
	fma.rn.ftz.f32 	%f14, %f13, %f12, %f29;
	add.s64 	%rd23, %rd32, %rd5;
	ld.global.nc.f32 	%f15, [%rd23];
	ld.global.nc.f32 	%f16, [%rd31+-4];
	fma.rn.ftz.f32 	%f17, %f16, %f15, %f14;
	add.s64 	%rd24, %rd23, %rd5;
	ld.global.nc.f32 	%f18, [%rd24];
	ld.global.nc.f32 	%f19, [%rd31];
	fma.rn.ftz.f32 	%f20, %f19, %f18, %f17;
	add.s64 	%rd25, %rd24, %rd5;
	add.s64 	%rd32, %rd25, %rd5;
	ld.global.nc.f32 	%f21, [%rd25];
	ld.global.nc.f32 	%f22, [%rd31+4];
	fma.rn.ftz.f32 	%f29, %f22, %f21, %f20;
	add.s32 	%r34, %r34, 4;
	add.s64 	%rd31, %rd31, 16;
	add.s32 	%r33, %r33, -4;
	setp.ne.s32 	%p4, %r33, 0;
	@%p4 bra 	$L__BB51_4;

$L__BB51_5:
	setp.eq.s32 	%p5, %r35, 0;
	@%p5 bra 	$L__BB51_8;

	mad.lo.s32 	%r29, %r34, %r13, %r2;
	mul.wide.s32 	%rd26, %r29, 4;
	add.s64 	%rd34, %rd1, %rd26;
	mul.wide.s32 	%rd11, %r13, 4;
	mad.lo.s32 	%r30, %r12, %r1, %r34;
	mul.wide.s32 	%rd27, %r30, 4;
	add.s64 	%rd33, %rd2, %rd27;

$L__BB51_7:
	.pragma "nounroll";
	ld.global.nc.f32 	%f23, [%rd34];
	ld.global.nc.f32 	%f24, [%rd33];
	fma.rn.ftz.f32 	%f29, %f24, %f23, %f29;
	add.s64 	%rd34, %rd34, %rd11;
	add.s64 	%rd33, %rd33, 4;
	add.s32 	%r35, %r35, -1;
	setp.ne.s32 	%p6, %r35, 0;
	@%p6 bra 	$L__BB51_7;

$L__BB51_8:
	mad.lo.s32 	%r31, %r1, %r13, %r2;
	cvta.to.global.u64 	%rd28, %rd17;
	mul.wide.s32 	%rd29, %r31, 4;
	add.s64 	%rd30, %rd28, %rd29;
	st.global.f32 	[%rd30], %f29;

$L__BB51_9:
	ret;

}
	// .globl	Softmax
.visible .entry Softmax(
	.param .u64 Softmax_param_0,
	.param .u64 Softmax_param_1,
	.param .u32 Softmax_param_2,
	.param .u32 Softmax_param_3
)
{
	.reg .pred 	%p<162>;
	.reg .f32 	%f<123>;
	.reg .b32 	%r<192>;
	.reg .f64 	%fd<140>;
	.reg .b64 	%rd<93>;


	ld.param.u64 	%rd53, [Softmax_param_0];
	ld.param.u64 	%rd54, [Softmax_param_1];
	ld.param.u32 	%r59, [Softmax_param_2];
	ld.param.u32 	%r60, [Softmax_param_3];
	cvta.to.global.u64 	%rd1, %rd54;
	cvta.to.global.u64 	%rd2, %rd53;
	mov.u32 	%r61, %ctaid.x;
	mov.u32 	%r62, %ntid.x;
	mov.u32 	%r63, %tid.x;
	mad.lo.s32 	%r1, %r62, %r61, %r63;
	setp.ge.s32 	%p1, %r1, %r60;
	@%p1 bra 	$L__BB52_97;

	mul.lo.s32 	%r190, %r1, %r59;
	cvt.s64.s32 	%rd3, %r190;
	mul.wide.s32 	%rd55, %r190, 4;
	add.s64 	%rd56, %rd2, %rd55;
	ld.global.nc.f32 	%f110, [%rd56];
	setp.lt.s32 	%p2, %r59, 2;
	@%p2 bra 	$L__BB52_8;

	add.s32 	%r64, %r59, -1;
	and.b32  	%r177, %r64, 3;
	add.s32 	%r65, %r59, -2;
	setp.lt.u32 	%p3, %r65, 3;
	mov.u32 	%r176, %r190;
	@%p3 bra 	$L__BB52_5;

	shl.b64 	%rd57, %rd3, 2;
	add.s64 	%rd58, %rd2, %rd57;
	add.s64 	%rd81, %rd58, 8;
	sub.s32 	%r174, %r59, %r177;
	mov.u32 	%r176, %r190;

$L__BB52_4:
	ld.global.nc.f32 	%f34, [%rd81+-8];
	setp.lt.ftz.f32 	%p4, %f110, %f34;
	selp.f32 	%f35, %f34, %f110, %p4;
	ld.global.nc.f32 	%f36, [%rd81+-4];
	setp.lt.ftz.f32 	%p5, %f35, %f36;
	selp.f32 	%f37, %f36, %f35, %p5;
	ld.global.nc.f32 	%f38, [%rd81];
	setp.lt.ftz.f32 	%p6, %f37, %f38;
	selp.f32 	%f39, %f38, %f37, %p6;
	ld.global.nc.f32 	%f40, [%rd81+4];
	setp.lt.ftz.f32 	%p7, %f39, %f40;
	selp.f32 	%f110, %f40, %f39, %p7;
	add.s32 	%r176, %r176, 4;
	add.s64 	%rd81, %rd81, 16;
	add.s32 	%r174, %r174, -4;
	setp.ne.s32 	%p8, %r174, 1;
	@%p8 bra 	$L__BB52_4;

$L__BB52_5:
	setp.eq.s32 	%p9, %r177, 0;
	@%p9 bra 	$L__BB52_8;

	mul.wide.s32 	%rd59, %r176, 4;
	add.s64 	%rd82, %rd2, %rd59;

$L__BB52_7:
	.pragma "nounroll";
	ld.global.nc.f32 	%f41, [%rd82];
	setp.lt.ftz.f32 	%p10, %f110, %f41;
	selp.f32 	%f110, %f41, %f110, %p10;
	add.s64 	%rd82, %rd82, 4;
	add.s32 	%r177, %r177, -1;
	setp.ne.s32 	%p11, %r177, 0;
	@%p11 bra 	$L__BB52_7;

$L__BB52_8:
	setp.lt.s32 	%p12, %r59, 1;
	mov.f32 	%f122, 0f322BCC77;
	@%p12 bra 	$L__BB52_90;

	cvt.ftz.f64.f32 	%fd1, %f110;
	mov.f64 	%fd72, 0d4005BF0A8B145769;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r66}, %fd72;
	}
	setp.lt.s32 	%p13, %r66, 0;
	and.b32  	%r12, %r66, 2147483647;
	@%p13 bra 	$L__BB52_60;

	setp.eq.s32 	%p14, %r12, 2146435072;
	@%p14 bra 	$L__BB52_37;
	bra.uni 	$L__BB52_11;

$L__BB52_37:
	and.b32  	%r27, %r59, 1;
	setp.eq.s32 	%p64, %r59, 1;
	mov.f32 	%f121, 0f00000000;
	mov.u32 	%r184, %r190;
	@%p64 bra 	$L__BB52_52;

	sub.s32 	%r183, %r59, %r27;
	shl.b64 	%rd63, %rd3, 2;
	add.s64 	%rd64, %rd63, 4;
	add.s64 	%rd88, %rd1, %rd64;
	add.s64 	%rd87, %rd2, %rd64;
	mov.u32 	%r184, %r190;

$L__BB52_39:
	add.s64 	%rd30, %rd87, -4;
	ld.global.nc.f32 	%f69, [%rd87+-4];
	cvt.ftz.f64.f32 	%fd93, %f69;
	sub.f64 	%fd27, %fd93, %fd1;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r31}, %fd27;
	}
	{ // callseq 5, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.f64 	[param0+0], %fd27;
	.param .b64 retval0;
	call.uni (retval0), 
	__internal_accurate_pow, 
	(
	param0
	);
	ld.param.f64 	%fd28, [retval0+0];
	} // callseq 5
	add.f64 	%fd29, %fd27, 0d4005BF0A8B145769;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r98}, %fd29;
	}
	and.b32  	%r99, %r98, 2146435072;
	setp.ne.s32 	%p65, %r99, 2146435072;
	mov.f64 	%fd131, %fd28;
	@%p65 bra 	$L__BB52_45;

	abs.f64 	%fd94, %fd27;
	setp.gtu.f64 	%p66, %fd94, 0d7FF0000000000000;
	mov.f64 	%fd131, %fd29;
	@%p66 bra 	$L__BB52_45;

	{
	.reg .b32 %temp; 
	mov.b64 	{%r100, %temp}, %fd27;
	}
	and.b32  	%r101, %r31, 2147483647;
	setp.eq.s32 	%p67, %r101, 2146435072;
	setp.eq.s32 	%p68, %r100, 0;
	and.pred  	%p69, %p67, %p68;
	@%p69 bra 	$L__BB52_44;
	bra.uni 	$L__BB52_42;

$L__BB52_44:
	setp.lt.s32 	%p72, %r31, 0;
	mov.u32 	%r105, 0;
	selp.b32 	%r106, 0, 2146435072, %p72;
	mov.b64 	%fd131, {%r105, %r106};
	bra.uni 	$L__BB52_45;

$L__BB52_42:
	mov.f64 	%fd95, 0d4005BF0A8B145769;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r102, %temp}, %fd95;
	}
	setp.ne.s32 	%p70, %r102, 0;
	mov.f64 	%fd131, %fd28;
	@%p70 bra 	$L__BB52_45;

	setp.gt.s32 	%p71, %r31, -1;
	selp.b32 	%r103, 2146435072, 0, %p71;
	mov.u32 	%r104, 0;
	mov.b64 	%fd131, {%r104, %r103};

$L__BB52_45:
	setp.eq.f64 	%p73, %fd27, 0d0000000000000000;
	selp.f64 	%fd96, 0d3FF0000000000000, %fd131, %p73;
	setp.ge.f64 	%p74, %fd96, 0d47EFFFFFE0000000;
	selp.f64 	%fd97, 0d47EFFFFFE0000000, %fd96, %p74;
	cvt.rn.ftz.f32.f64 	%f70, %fd97;
	add.ftz.f32 	%f19, %f121, %f70;
	add.s64 	%rd31, %rd88, -4;
	st.global.f32 	[%rd88+-4], %f70;
	ld.global.nc.f32 	%f71, [%rd30+4];
	cvt.ftz.f64.f32 	%fd98, %f71;
	sub.f64 	%fd33, %fd98, %fd1;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r32}, %fd33;
	}
	{ // callseq 6, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.f64 	[param0+0], %fd33;
	.param .b64 retval0;
	call.uni (retval0), 
	__internal_accurate_pow, 
	(
	param0
	);
	ld.param.f64 	%fd34, [retval0+0];
	} // callseq 6
	add.f64 	%fd35, %fd33, 0d4005BF0A8B145769;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r107}, %fd35;
	}
	and.b32  	%r108, %r107, 2146435072;
	setp.ne.s32 	%p75, %r108, 2146435072;
	mov.f64 	%fd132, %fd34;
	@%p75 bra 	$L__BB52_51;

	abs.f64 	%fd99, %fd33;
	setp.gtu.f64 	%p76, %fd99, 0d7FF0000000000000;
	mov.f64 	%fd132, %fd35;
	@%p76 bra 	$L__BB52_51;

	{
	.reg .b32 %temp; 
	mov.b64 	{%r109, %temp}, %fd33;
	}
	and.b32  	%r110, %r32, 2147483647;
	setp.eq.s32 	%p77, %r110, 2146435072;
	setp.eq.s32 	%p78, %r109, 0;
	and.pred  	%p79, %p77, %p78;
	@%p79 bra 	$L__BB52_50;
	bra.uni 	$L__BB52_48;

$L__BB52_50:
	setp.lt.s32 	%p82, %r32, 0;
	mov.u32 	%r114, 0;
	selp.b32 	%r115, 0, 2146435072, %p82;
	mov.b64 	%fd132, {%r114, %r115};
	bra.uni 	$L__BB52_51;

$L__BB52_48:
	mov.f64 	%fd100, 0d4005BF0A8B145769;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r111, %temp}, %fd100;
	}
	setp.ne.s32 	%p80, %r111, 0;
	mov.f64 	%fd132, %fd34;
	@%p80 bra 	$L__BB52_51;

	setp.gt.s32 	%p81, %r32, -1;
	selp.b32 	%r112, 2146435072, 0, %p81;
	mov.u32 	%r113, 0;
	mov.b64 	%fd132, {%r113, %r112};

$L__BB52_51:
	setp.eq.f64 	%p83, %fd33, 0d0000000000000000;
	selp.f64 	%fd101, 0d3FF0000000000000, %fd132, %p83;
	setp.ge.f64 	%p84, %fd101, 0d47EFFFFFE0000000;
	selp.f64 	%fd102, 0d47EFFFFFE0000000, %fd101, %p84;
	cvt.rn.ftz.f32.f64 	%f72, %fd102;
	add.ftz.f32 	%f73, %f19, 0f322BCC77;
	setp.gt.ftz.f32 	%p85, %f73, 0f7F7FFFFF;
	selp.f32 	%f74, 0f7F7FFFFF, %f19, %p85;
	add.ftz.f32 	%f75, %f74, %f72;
	add.ftz.f32 	%f76, %f75, 0f322BCC77;
	setp.gt.ftz.f32 	%p86, %f76, 0f7F7FFFFF;
	selp.f32 	%f121, 0f7F7FFFFF, %f75, %p86;
	st.global.f32 	[%rd31+4], %f72;
	add.s32 	%r184, %r184, 2;
	add.s64 	%rd88, %rd88, 8;
	add.s64 	%rd87, %rd87, 8;
	add.s32 	%r183, %r183, -2;
	setp.ne.s32 	%p87, %r183, 0;
	@%p87 bra 	$L__BB52_39;

$L__BB52_52:
	setp.eq.s32 	%p88, %r27, 0;
	@%p88 bra 	$L__BB52_89;

	cvt.s64.s32 	%rd34, %r184;
	mul.wide.s32 	%rd65, %r184, 4;
	add.s64 	%rd66, %rd2, %rd65;
	ld.global.nc.f32 	%f77, [%rd66];
	cvt.ftz.f64.f32 	%fd103, %f77;
	sub.f64 	%fd39, %fd103, %fd1;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r36}, %fd39;
	}
	{ // callseq 7, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.f64 	[param0+0], %fd39;
	.param .b64 retval0;
	call.uni (retval0), 
	__internal_accurate_pow, 
	(
	param0
	);
	ld.param.f64 	%fd40, [retval0+0];
	} // callseq 7
	add.f64 	%fd41, %fd39, 0d4005BF0A8B145769;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r116}, %fd41;
	}
	and.b32  	%r117, %r116, 2146435072;
	setp.ne.s32 	%p89, %r117, 2146435072;
	mov.f64 	%fd133, %fd40;
	@%p89 bra 	$L__BB52_59;

	abs.f64 	%fd104, %fd39;
	setp.gtu.f64 	%p90, %fd104, 0d7FF0000000000000;
	mov.f64 	%fd133, %fd41;
	@%p90 bra 	$L__BB52_59;

	{
	.reg .b32 %temp; 
	mov.b64 	{%r118, %temp}, %fd39;
	}
	and.b32  	%r119, %r36, 2147483647;
	setp.eq.s32 	%p91, %r119, 2146435072;
	setp.eq.s32 	%p92, %r118, 0;
	and.pred  	%p93, %p91, %p92;
	@%p93 bra 	$L__BB52_58;
	bra.uni 	$L__BB52_56;

$L__BB52_58:
	setp.lt.s32 	%p96, %r36, 0;
	mov.u32 	%r123, 0;
	selp.b32 	%r124, 0, 2146435072, %p96;
	mov.b64 	%fd133, {%r123, %r124};
	bra.uni 	$L__BB52_59;

$L__BB52_60:
	and.b32  	%r37, %r59, 1;
	setp.eq.s32 	%p100, %r59, 1;
	mov.f32 	%f121, 0f00000000;
	mov.u32 	%r187, %r190;
	@%p100 bra 	$L__BB52_79;

	sub.s32 	%r186, %r59, %r37;
	shl.b64 	%rd69, %rd3, 2;
	add.s64 	%rd70, %rd69, 4;
	add.s64 	%rd90, %rd1, %rd70;
	add.s64 	%rd89, %rd2, %rd70;
	mov.u32 	%r187, %r190;

$L__BB52_62:
	add.s64 	%rd39, %rd89, -4;
	ld.global.nc.f32 	%f84, [%rd89+-4];
	cvt.ftz.f64.f32 	%fd108, %f84;
	sub.f64 	%fd45, %fd108, %fd1;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r41}, %fd45;
	}
	and.b32  	%r125, %r41, 2146435072;
	shr.u32 	%r126, %r125, 20;
	add.s32 	%r127, %r126, -1012;
	mov.b64 	%rd71, %fd45;
	shl.b64 	%rd40, %rd71, %r127;
	setp.ne.s64 	%p101, %rd40, -9223372036854775808;
	{ // callseq 8, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.f64 	[param0+0], %fd45;
	.param .b64 retval0;
	call.uni (retval0), 
	__internal_accurate_pow, 
	(
	param0
	);
	ld.param.f64 	%fd134, [retval0+0];
	} // callseq 8
	@%p101 bra 	$L__BB52_64;

	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r128}, %fd134;
	}
	xor.b32  	%r129, %r128, -2147483648;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r130, %temp}, %fd134;
	}
	mov.b64 	%fd134, {%r130, %r129};

$L__BB52_64:
	cvt.rzi.f64.f64 	%fd109, %fd45;
	setp.neu.f64 	%p102, %fd109, %fd45;
	selp.f64 	%fd49, 0dFFF8000000000000, %fd134, %p102;
	add.f64 	%fd50, %fd45, 0d4005BF0A8B145769;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r131}, %fd50;
	}
	and.b32  	%r132, %r131, 2146435072;
	setp.ne.s32 	%p103, %r132, 2146435072;
	mov.f64 	%fd135, %fd49;
	@%p103 bra 	$L__BB52_70;

	abs.f64 	%fd110, %fd45;
	setp.gtu.f64 	%p104, %fd110, 0d7FF0000000000000;
	mov.f64 	%fd135, %fd50;
	@%p104 bra 	$L__BB52_70;

	{
	.reg .b32 %temp; 
	mov.b64 	{%r133, %temp}, %fd45;
	}
	and.b32  	%r42, %r41, 2147483647;
	setp.eq.s32 	%p105, %r42, 2146435072;
	setp.eq.s32 	%p106, %r133, 0;
	and.pred  	%p107, %p105, %p106;
	@%p107 bra 	$L__BB52_69;
	bra.uni 	$L__BB52_67;

$L__BB52_69:
	setp.lt.s32 	%p115, %r41, 0;
	mov.u32 	%r139, 0;
	selp.b32 	%r140, 0, 2146435072, %p115;
	mov.b64 	%fd135, {%r139, %r140};
	bra.uni 	$L__BB52_70;

$L__BB52_67:
	setp.ne.s32 	%p108, %r12, 2146435072;
	mov.f64 	%fd111, 0d4005BF0A8B145769;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r134, %temp}, %fd111;
	}
	setp.ne.s32 	%p109, %r134, 0;
	or.pred  	%p110, %p108, %p109;
	mov.f64 	%fd135, %fd49;
	@%p110 bra 	$L__BB52_70;

	setp.eq.s64 	%p111, %rd40, -9223372036854775808;
	setp.gt.s32 	%p112, %r41, -1;
	selp.b32 	%r135, 2146435072, 0, %p112;
	mov.u32 	%r136, 0;
	setp.ne.s32 	%p113, %r42, 1071644672;
	and.pred  	%p114, %p113, %p111;
	or.b32  	%r137, %r135, -2147483648;
	selp.b32 	%r138, %r137, %r135, %p114;
	mov.b64 	%fd135, {%r136, %r138};

$L__BB52_70:
	setp.eq.f64 	%p116, %fd45, 0d0000000000000000;
	selp.f64 	%fd112, 0d3FF0000000000000, %fd135, %p116;
	setp.ge.f64 	%p117, %fd112, 0d47EFFFFFE0000000;
	selp.f64 	%fd113, 0d47EFFFFFE0000000, %fd112, %p117;
	cvt.rn.ftz.f32.f64 	%f85, %fd113;
	add.ftz.f32 	%f25, %f121, %f85;
	add.s64 	%rd41, %rd90, -4;
	st.global.f32 	[%rd90+-4], %f85;
	ld.global.nc.f32 	%f86, [%rd39+4];
	cvt.ftz.f64.f32 	%fd114, %f86;
	sub.f64 	%fd54, %fd114, %fd1;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r43}, %fd54;
	}
	and.b32  	%r141, %r43, 2146435072;
	shr.u32 	%r142, %r141, 20;
	add.s32 	%r143, %r142, -1012;
	mov.b64 	%rd72, %fd54;
	shl.b64 	%rd42, %rd72, %r143;
	setp.ne.s64 	%p118, %rd42, -9223372036854775808;
	{ // callseq 9, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.f64 	[param0+0], %fd54;
	.param .b64 retval0;
	call.uni (retval0), 
	__internal_accurate_pow, 
	(
	param0
	);
	ld.param.f64 	%fd136, [retval0+0];
	} // callseq 9
	@%p118 bra 	$L__BB52_72;

	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r144}, %fd136;
	}
	xor.b32  	%r145, %r144, -2147483648;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r146, %temp}, %fd136;
	}
	mov.b64 	%fd136, {%r146, %r145};

$L__BB52_72:
	cvt.rzi.f64.f64 	%fd115, %fd54;
	setp.neu.f64 	%p119, %fd115, %fd54;
	selp.f64 	%fd58, 0dFFF8000000000000, %fd136, %p119;
	add.f64 	%fd59, %fd54, 0d4005BF0A8B145769;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r147}, %fd59;
	}
	and.b32  	%r148, %r147, 2146435072;
	setp.ne.s32 	%p120, %r148, 2146435072;
	mov.f64 	%fd137, %fd58;
	@%p120 bra 	$L__BB52_78;

	abs.f64 	%fd116, %fd54;
	setp.gtu.f64 	%p121, %fd116, 0d7FF0000000000000;
	mov.f64 	%fd137, %fd59;
	@%p121 bra 	$L__BB52_78;

	{
	.reg .b32 %temp; 
	mov.b64 	{%r149, %temp}, %fd54;
	}
	and.b32  	%r44, %r43, 2147483647;
	setp.eq.s32 	%p122, %r44, 2146435072;
	setp.eq.s32 	%p123, %r149, 0;
	and.pred  	%p124, %p122, %p123;
	@%p124 bra 	$L__BB52_77;
	bra.uni 	$L__BB52_75;

$L__BB52_77:
	setp.lt.s32 	%p132, %r43, 0;
	mov.u32 	%r155, 0;
	selp.b32 	%r156, 0, 2146435072, %p132;
	mov.b64 	%fd137, {%r155, %r156};
	bra.uni 	$L__BB52_78;

$L__BB52_75:
	setp.ne.s32 	%p125, %r12, 2146435072;
	mov.f64 	%fd117, 0d4005BF0A8B145769;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r150, %temp}, %fd117;
	}
	setp.ne.s32 	%p126, %r150, 0;
	or.pred  	%p127, %p125, %p126;
	mov.f64 	%fd137, %fd58;
	@%p127 bra 	$L__BB52_78;

	setp.eq.s64 	%p128, %rd42, -9223372036854775808;
	setp.gt.s32 	%p129, %r43, -1;
	selp.b32 	%r151, 2146435072, 0, %p129;
	mov.u32 	%r152, 0;
	setp.ne.s32 	%p130, %r44, 1071644672;
	and.pred  	%p131, %p130, %p128;
	or.b32  	%r153, %r151, -2147483648;
	selp.b32 	%r154, %r153, %r151, %p131;
	mov.b64 	%fd137, {%r152, %r154};

$L__BB52_78:
	setp.eq.f64 	%p133, %fd54, 0d0000000000000000;
	selp.f64 	%fd118, 0d3FF0000000000000, %fd137, %p133;
	setp.ge.f64 	%p134, %fd118, 0d47EFFFFFE0000000;
	selp.f64 	%fd119, 0d47EFFFFFE0000000, %fd118, %p134;
	cvt.rn.ftz.f32.f64 	%f87, %fd119;
	add.ftz.f32 	%f88, %f25, 0f322BCC77;
	setp.gt.ftz.f32 	%p135, %f88, 0f7F7FFFFF;
	selp.f32 	%f89, 0f7F7FFFFF, %f25, %p135;
	add.ftz.f32 	%f90, %f89, %f87;
	add.ftz.f32 	%f91, %f90, 0f322BCC77;
	setp.gt.ftz.f32 	%p136, %f91, 0f7F7FFFFF;
	selp.f32 	%f121, 0f7F7FFFFF, %f90, %p136;
	st.global.f32 	[%rd41+4], %f87;
	add.s32 	%r187, %r187, 2;
	add.s64 	%rd90, %rd90, 8;
	add.s64 	%rd89, %rd89, 8;
	add.s32 	%r186, %r186, -2;
	setp.ne.s32 	%p137, %r186, 0;
	@%p137 bra 	$L__BB52_62;

$L__BB52_79:
	setp.eq.s32 	%p138, %r37, 0;
	@%p138 bra 	$L__BB52_89;

	cvt.s64.s32 	%rd45, %r187;
	mul.wide.s32 	%rd73, %r187, 4;
	add.s64 	%rd74, %rd2, %rd73;
	ld.global.nc.f32 	%f92, [%rd74];
	cvt.ftz.f64.f32 	%fd120, %f92;
	sub.f64 	%fd63, %fd120, %fd1;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r48}, %fd63;
	}
	and.b32  	%r157, %r48, 2146435072;
	shr.u32 	%r158, %r157, 20;
	add.s32 	%r159, %r158, -1012;
	mov.b64 	%rd75, %fd63;
	shl.b64 	%rd46, %rd75, %r159;
	setp.ne.s64 	%p139, %rd46, -9223372036854775808;
	{ // callseq 10, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.f64 	[param0+0], %fd63;
	.param .b64 retval0;
	call.uni (retval0), 
	__internal_accurate_pow, 
	(
	param0
	);
	ld.param.f64 	%fd138, [retval0+0];
	} // callseq 10
	@%p139 bra 	$L__BB52_82;

	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r160}, %fd138;
	}
	xor.b32  	%r161, %r160, -2147483648;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r162, %temp}, %fd138;
	}
	mov.b64 	%fd138, {%r162, %r161};

$L__BB52_82:
	cvt.rzi.f64.f64 	%fd121, %fd63;
	setp.neu.f64 	%p140, %fd121, %fd63;
	selp.f64 	%fd67, 0dFFF8000000000000, %fd138, %p140;
	add.f64 	%fd68, %fd63, 0d4005BF0A8B145769;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r163}, %fd68;
	}
	and.b32  	%r164, %r163, 2146435072;
	setp.ne.s32 	%p141, %r164, 2146435072;
	mov.f64 	%fd139, %fd67;
	@%p141 bra 	$L__BB52_88;

	abs.f64 	%fd122, %fd63;
	setp.gtu.f64 	%p142, %fd122, 0d7FF0000000000000;
	mov.f64 	%fd139, %fd68;
	@%p142 bra 	$L__BB52_88;

	{
	.reg .b32 %temp; 
	mov.b64 	{%r165, %temp}, %fd63;
	}
	and.b32  	%r49, %r48, 2147483647;
	setp.eq.s32 	%p143, %r49, 2146435072;
	setp.eq.s32 	%p144, %r165, 0;
	and.pred  	%p145, %p143, %p144;
	@%p145 bra 	$L__BB52_87;
	bra.uni 	$L__BB52_85;

$L__BB52_87:
	setp.lt.s32 	%p153, %r48, 0;
	mov.u32 	%r171, 0;
	selp.b32 	%r172, 0, 2146435072, %p153;
	mov.b64 	%fd139, {%r171, %r172};
	bra.uni 	$L__BB52_88;

$L__BB52_11:
	add.s32 	%r67, %r59, -1;
	and.b32  	%r181, %r59, 3;
	setp.lt.u32 	%p15, %r67, 3;
	mov.f32 	%f121, 0f00000000;
	mov.u32 	%r180, %r190;
	@%p15 bra 	$L__BB52_30;

	sub.s32 	%r179, %r59, %r181;
	shl.b64 	%rd60, %rd3, 2;
	add.s64 	%rd61, %rd60, 8;
	add.s64 	%rd84, %rd2, %rd61;
	add.s64 	%rd83, %rd1, %rd61;
	mov.u32 	%r180, %r190;

$L__BB52_13:
	add.s64 	%rd14, %rd84, -8;
	ld.global.nc.f32 	%f46, [%rd84+-8];
	cvt.ftz.f64.f32 	%fd73, %f46;
	sub.f64 	%fd2, %fd73, %fd1;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r17}, %fd2;
	}
	{ // callseq 0, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.f64 	[param0+0], %fd2;
	.param .b64 retval0;
	call.uni (retval0), 
	__internal_accurate_pow, 
	(
	param0
	);
	ld.param.f64 	%fd3, [retval0+0];
	} // callseq 0
	add.f64 	%fd4, %fd2, 0d4005BF0A8B145769;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r68}, %fd4;
	}
	and.b32  	%r69, %r68, 2146435072;
	setp.ne.s32 	%p16, %r69, 2146435072;
	mov.f64 	%fd126, %fd3;
	@%p16 bra 	$L__BB52_17;

	abs.f64 	%fd74, %fd2;
	setp.gtu.f64 	%p17, %fd74, 0d7FF0000000000000;
	mov.f64 	%fd126, %fd4;
	@%p17 bra 	$L__BB52_17;

	{
	.reg .b32 %temp; 
	mov.b64 	{%r70, %temp}, %fd2;
	}
	and.b32  	%r71, %r17, 2147483647;
	setp.ne.s32 	%p18, %r71, 2146435072;
	setp.ne.s32 	%p19, %r70, 0;
	or.pred  	%p20, %p18, %p19;
	mov.f64 	%fd126, %fd3;
	@%p20 bra 	$L__BB52_17;

	setp.lt.s32 	%p21, %r17, 0;
	mov.u32 	%r72, 0;
	selp.b32 	%r73, 0, 2146435072, %p21;
	mov.b64 	%fd126, {%r72, %r73};

$L__BB52_17:
	setp.eq.f64 	%p22, %fd2, 0d0000000000000000;
	selp.f64 	%fd75, 0d3FF0000000000000, %fd126, %p22;
	setp.ge.f64 	%p23, %fd75, 0d47EFFFFFE0000000;
	selp.f64 	%fd76, 0d47EFFFFFE0000000, %fd75, %p23;
	cvt.rn.ftz.f32.f64 	%f47, %fd76;
	add.ftz.f32 	%f10, %f121, %f47;
	add.s64 	%rd15, %rd83, -8;
	st.global.f32 	[%rd83+-8], %f47;
	ld.global.nc.f32 	%f48, [%rd14+4];
	cvt.ftz.f64.f32 	%fd77, %f48;
	sub.f64 	%fd7, %fd77, %fd1;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r18}, %fd7;
	}
	{ // callseq 1, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.f64 	[param0+0], %fd7;
	.param .b64 retval0;
	call.uni (retval0), 
	__internal_accurate_pow, 
	(
	param0
	);
	ld.param.f64 	%fd8, [retval0+0];
	} // callseq 1
	add.f64 	%fd9, %fd7, 0d4005BF0A8B145769;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r74}, %fd9;
	}
	and.b32  	%r75, %r74, 2146435072;
	setp.ne.s32 	%p24, %r75, 2146435072;
	mov.f64 	%fd127, %fd8;
	@%p24 bra 	$L__BB52_21;

	abs.f64 	%fd78, %fd7;
	setp.gtu.f64 	%p25, %fd78, 0d7FF0000000000000;
	mov.f64 	%fd127, %fd9;
	@%p25 bra 	$L__BB52_21;

	{
	.reg .b32 %temp; 
	mov.b64 	{%r76, %temp}, %fd7;
	}
	and.b32  	%r77, %r18, 2147483647;
	setp.ne.s32 	%p26, %r77, 2146435072;
	setp.ne.s32 	%p27, %r76, 0;
	or.pred  	%p28, %p26, %p27;
	mov.f64 	%fd127, %fd8;
	@%p28 bra 	$L__BB52_21;

	setp.lt.s32 	%p29, %r18, 0;
	mov.u32 	%r78, 0;
	selp.b32 	%r79, 0, 2146435072, %p29;
	mov.b64 	%fd127, {%r78, %r79};

$L__BB52_21:
	setp.eq.f64 	%p30, %fd7, 0d0000000000000000;
	selp.f64 	%fd79, 0d3FF0000000000000, %fd127, %p30;
	setp.ge.f64 	%p31, %fd79, 0d47EFFFFFE0000000;
	selp.f64 	%fd80, 0d47EFFFFFE0000000, %fd79, %p31;
	cvt.rn.ftz.f32.f64 	%f49, %fd80;
	add.ftz.f32 	%f50, %f10, 0f322BCC77;
	setp.gt.ftz.f32 	%p32, %f50, 0f7F7FFFFF;
	selp.f32 	%f51, 0f7F7FFFFF, %f10, %p32;
	add.ftz.f32 	%f11, %f51, %f49;
	st.global.f32 	[%rd15+4], %f49;
	ld.global.nc.f32 	%f52, [%rd14+8];
	cvt.ftz.f64.f32 	%fd81, %f52;
	sub.f64 	%fd12, %fd81, %fd1;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r19}, %fd12;
	}
	{ // callseq 2, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.f64 	[param0+0], %fd12;
	.param .b64 retval0;
	call.uni (retval0), 
	__internal_accurate_pow, 
	(
	param0
	);
	ld.param.f64 	%fd13, [retval0+0];
	} // callseq 2
	add.f64 	%fd14, %fd12, 0d4005BF0A8B145769;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r80}, %fd14;
	}
	and.b32  	%r81, %r80, 2146435072;
	setp.ne.s32 	%p33, %r81, 2146435072;
	mov.f64 	%fd128, %fd13;
	@%p33 bra 	$L__BB52_25;

	abs.f64 	%fd82, %fd12;
	setp.gtu.f64 	%p34, %fd82, 0d7FF0000000000000;
	mov.f64 	%fd128, %fd14;
	@%p34 bra 	$L__BB52_25;

	{
	.reg .b32 %temp; 
	mov.b64 	{%r82, %temp}, %fd12;
	}
	and.b32  	%r83, %r19, 2147483647;
	setp.ne.s32 	%p35, %r83, 2146435072;
	setp.ne.s32 	%p36, %r82, 0;
	or.pred  	%p37, %p35, %p36;
	mov.f64 	%fd128, %fd13;
	@%p37 bra 	$L__BB52_25;

	setp.lt.s32 	%p38, %r19, 0;
	mov.u32 	%r84, 0;
	selp.b32 	%r85, 0, 2146435072, %p38;
	mov.b64 	%fd128, {%r84, %r85};

$L__BB52_25:
	setp.eq.f64 	%p39, %fd12, 0d0000000000000000;
	selp.f64 	%fd83, 0d3FF0000000000000, %fd128, %p39;
	setp.ge.f64 	%p40, %fd83, 0d47EFFFFFE0000000;
	selp.f64 	%fd84, 0d47EFFFFFE0000000, %fd83, %p40;
	cvt.rn.ftz.f32.f64 	%f53, %fd84;
	add.ftz.f32 	%f54, %f11, 0f322BCC77;
	setp.gt.ftz.f32 	%p41, %f54, 0f7F7FFFFF;
	selp.f32 	%f55, 0f7F7FFFFF, %f11, %p41;
	add.ftz.f32 	%f12, %f55, %f53;
	st.global.f32 	[%rd15+8], %f53;
	ld.global.nc.f32 	%f56, [%rd14+12];
	cvt.ftz.f64.f32 	%fd85, %f56;
	sub.f64 	%fd17, %fd85, %fd1;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r20}, %fd17;
	}
	{ // callseq 3, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.f64 	[param0+0], %fd17;
	.param .b64 retval0;
	call.uni (retval0), 
	__internal_accurate_pow, 
	(
	param0
	);
	ld.param.f64 	%fd18, [retval0+0];
	} // callseq 3
	add.f64 	%fd19, %fd17, 0d4005BF0A8B145769;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r86}, %fd19;
	}
	and.b32  	%r87, %r86, 2146435072;
	setp.ne.s32 	%p42, %r87, 2146435072;
	mov.f64 	%fd129, %fd18;
	@%p42 bra 	$L__BB52_29;

	abs.f64 	%fd86, %fd17;
	setp.gtu.f64 	%p43, %fd86, 0d7FF0000000000000;
	mov.f64 	%fd129, %fd19;
	@%p43 bra 	$L__BB52_29;

	{
	.reg .b32 %temp; 
	mov.b64 	{%r88, %temp}, %fd17;
	}
	and.b32  	%r89, %r20, 2147483647;
	setp.ne.s32 	%p44, %r89, 2146435072;
	setp.ne.s32 	%p45, %r88, 0;
	or.pred  	%p46, %p44, %p45;
	mov.f64 	%fd129, %fd18;
	@%p46 bra 	$L__BB52_29;

	setp.lt.s32 	%p47, %r20, 0;
	mov.u32 	%r90, 0;
	selp.b32 	%r91, 0, 2146435072, %p47;
	mov.b64 	%fd129, {%r90, %r91};

$L__BB52_29:
	setp.eq.f64 	%p48, %fd17, 0d0000000000000000;
	selp.f64 	%fd87, 0d3FF0000000000000, %fd129, %p48;
	setp.ge.f64 	%p49, %fd87, 0d47EFFFFFE0000000;
	selp.f64 	%fd88, 0d47EFFFFFE0000000, %fd87, %p49;
	cvt.rn.ftz.f32.f64 	%f57, %fd88;
	add.ftz.f32 	%f58, %f12, 0f322BCC77;
	setp.gt.ftz.f32 	%p50, %f58, 0f7F7FFFFF;
	selp.f32 	%f59, 0f7F7FFFFF, %f12, %p50;
	add.ftz.f32 	%f60, %f59, %f57;
	add.ftz.f32 	%f61, %f60, 0f322BCC77;
	setp.gt.ftz.f32 	%p51, %f61, 0f7F7FFFFF;
	selp.f32 	%f121, 0f7F7FFFFF, %f60, %p51;
	st.global.f32 	[%rd15+12], %f57;
	add.s32 	%r180, %r180, 4;
	add.s64 	%rd84, %rd84, 16;
	add.s64 	%rd83, %rd83, 16;
	add.s32 	%r179, %r179, -4;
	setp.ne.s32 	%p52, %r179, 0;
	@%p52 bra 	$L__BB52_13;

$L__BB52_30:
	setp.eq.s32 	%p53, %r181, 0;
	@%p53 bra 	$L__BB52_89;

	mul.wide.s32 	%rd62, %r180, 4;
	add.s64 	%rd86, %rd1, %rd62;
	add.s64 	%rd85, %rd2, %rd62;

$L__BB52_32:
	.pragma "nounroll";
	ld.global.nc.f32 	%f62, [%rd85];
	cvt.ftz.f64.f32 	%fd89, %f62;
	sub.f64 	%fd22, %fd89, %fd1;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r25}, %fd22;
	}
	{ // callseq 4, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.f64 	[param0+0], %fd22;
	.param .b64 retval0;
	call.uni (retval0), 
	__internal_accurate_pow, 
	(
	param0
	);
	ld.param.f64 	%fd23, [retval0+0];
	} // callseq 4
	add.f64 	%fd24, %fd22, 0d4005BF0A8B145769;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r92}, %fd24;
	}
	and.b32  	%r93, %r92, 2146435072;
	setp.ne.s32 	%p54, %r93, 2146435072;
	mov.f64 	%fd130, %fd23;
	@%p54 bra 	$L__BB52_36;

	abs.f64 	%fd90, %fd22;
	setp.gtu.f64 	%p55, %fd90, 0d7FF0000000000000;
	mov.f64 	%fd130, %fd24;
	@%p55 bra 	$L__BB52_36;

	{
	.reg .b32 %temp; 
	mov.b64 	{%r94, %temp}, %fd22;
	}
	and.b32  	%r95, %r25, 2147483647;
	setp.ne.s32 	%p56, %r95, 2146435072;
	setp.ne.s32 	%p57, %r94, 0;
	or.pred  	%p58, %p56, %p57;
	mov.f64 	%fd130, %fd23;
	@%p58 bra 	$L__BB52_36;

	setp.lt.s32 	%p59, %r25, 0;
	mov.u32 	%r96, 0;
	selp.b32 	%r97, 0, 2146435072, %p59;
	mov.b64 	%fd130, {%r96, %r97};

$L__BB52_36:
	setp.eq.f64 	%p60, %fd22, 0d0000000000000000;
	selp.f64 	%fd91, 0d3FF0000000000000, %fd130, %p60;
	setp.ge.f64 	%p61, %fd91, 0d47EFFFFFE0000000;
	selp.f64 	%fd92, 0d47EFFFFFE0000000, %fd91, %p61;
	cvt.rn.ftz.f32.f64 	%f63, %fd92;
	add.ftz.f32 	%f64, %f121, %f63;
	add.ftz.f32 	%f65, %f64, 0f322BCC77;
	setp.gt.ftz.f32 	%p62, %f65, 0f7F7FFFFF;
	selp.f32 	%f121, 0f7F7FFFFF, %f64, %p62;
	st.global.f32 	[%rd86], %f63;
	add.s64 	%rd86, %rd86, 4;
	add.s64 	%rd85, %rd85, 4;
	add.s32 	%r181, %r181, -1;
	setp.eq.s32 	%p63, %r181, 0;
	@%p63 bra 	$L__BB52_89;
	bra.uni 	$L__BB52_32;

$L__BB52_85:
	setp.ne.s32 	%p146, %r12, 2146435072;
	mov.f64 	%fd123, 0d4005BF0A8B145769;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r166, %temp}, %fd123;
	}
	setp.ne.s32 	%p147, %r166, 0;
	or.pred  	%p148, %p146, %p147;
	mov.f64 	%fd139, %fd67;
	@%p148 bra 	$L__BB52_88;

	setp.eq.s64 	%p149, %rd46, -9223372036854775808;
	setp.gt.s32 	%p150, %r48, -1;
	selp.b32 	%r167, 2146435072, 0, %p150;
	mov.u32 	%r168, 0;
	setp.ne.s32 	%p151, %r49, 1071644672;
	and.pred  	%p152, %p151, %p149;
	or.b32  	%r169, %r167, -2147483648;
	selp.b32 	%r170, %r169, %r167, %p152;
	mov.b64 	%fd139, {%r168, %r170};

$L__BB52_88:
	setp.eq.f64 	%p154, %fd63, 0d0000000000000000;
	selp.f64 	%fd124, 0d3FF0000000000000, %fd139, %p154;
	setp.ge.f64 	%p155, %fd124, 0d47EFFFFFE0000000;
	selp.f64 	%fd125, 0d47EFFFFFE0000000, %fd124, %p155;
	cvt.rn.ftz.f32.f64 	%f93, %fd125;
	add.ftz.f32 	%f94, %f121, %f93;
	add.ftz.f32 	%f95, %f94, 0f322BCC77;
	setp.gt.ftz.f32 	%p156, %f95, 0f7F7FFFFF;
	selp.f32 	%f121, 0f7F7FFFFF, %f94, %p156;
	shl.b64 	%rd76, %rd45, 2;
	add.s64 	%rd77, %rd1, %rd76;
	st.global.f32 	[%rd77], %f93;
	bra.uni 	$L__BB52_89;

$L__BB52_56:
	mov.f64 	%fd105, 0d4005BF0A8B145769;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r120, %temp}, %fd105;
	}
	setp.ne.s32 	%p94, %r120, 0;
	mov.f64 	%fd133, %fd40;
	@%p94 bra 	$L__BB52_59;

	setp.gt.s32 	%p95, %r36, -1;
	selp.b32 	%r121, 2146435072, 0, %p95;
	mov.u32 	%r122, 0;
	mov.b64 	%fd133, {%r122, %r121};

$L__BB52_59:
	setp.eq.f64 	%p97, %fd39, 0d0000000000000000;
	selp.f64 	%fd106, 0d3FF0000000000000, %fd133, %p97;
	setp.ge.f64 	%p98, %fd106, 0d47EFFFFFE0000000;
	selp.f64 	%fd107, 0d47EFFFFFE0000000, %fd106, %p98;
	cvt.rn.ftz.f32.f64 	%f78, %fd107;
	add.ftz.f32 	%f79, %f121, %f78;
	add.ftz.f32 	%f80, %f79, 0f322BCC77;
	setp.gt.ftz.f32 	%p99, %f80, 0f7F7FFFFF;
	selp.f32 	%f121, 0f7F7FFFFF, %f79, %p99;
	shl.b64 	%rd67, %rd34, 2;
	add.s64 	%rd68, %rd1, %rd67;
	st.global.f32 	[%rd68], %f78;

$L__BB52_89:
	add.ftz.f32 	%f122, %f121, 0f322BCC77;

$L__BB52_90:
	@%p12 bra 	$L__BB52_97;

	add.s32 	%r173, %r59, -1;
	and.b32  	%r191, %r59, 3;
	setp.lt.u32 	%p158, %r173, 3;
	@%p158 bra 	$L__BB52_94;

	sub.s32 	%r189, %r59, %r191;
	shl.b64 	%rd78, %rd3, 2;
	add.s64 	%rd79, %rd1, %rd78;
	add.s64 	%rd91, %rd79, 8;

$L__BB52_93:
	ld.global.f32 	%f96, [%rd91+-8];
	div.approx.ftz.f32 	%f97, %f96, %f122;
	st.global.f32 	[%rd91+-8], %f97;
	ld.global.f32 	%f98, [%rd91+-4];
	div.approx.ftz.f32 	%f99, %f98, %f122;
	st.global.f32 	[%rd91+-4], %f99;
	ld.global.f32 	%f100, [%rd91];
	div.approx.ftz.f32 	%f101, %f100, %f122;
	st.global.f32 	[%rd91], %f101;
	ld.global.f32 	%f102, [%rd91+4];
	div.approx.ftz.f32 	%f103, %f102, %f122;
	st.global.f32 	[%rd91+4], %f103;
	add.s32 	%r190, %r190, 4;
	add.s64 	%rd91, %rd91, 16;
	add.s32 	%r189, %r189, -4;
	setp.ne.s32 	%p159, %r189, 0;
	@%p159 bra 	$L__BB52_93;

$L__BB52_94:
	setp.eq.s32 	%p160, %r191, 0;
	@%p160 bra 	$L__BB52_97;

	mul.wide.s32 	%rd80, %r190, 4;
	add.s64 	%rd92, %rd1, %rd80;

$L__BB52_96:
	.pragma "nounroll";
	ld.global.f32 	%f104, [%rd92];
	div.approx.ftz.f32 	%f105, %f104, %f122;
	st.global.f32 	[%rd92], %f105;
	add.s64 	%rd92, %rd92, 4;
	add.s32 	%r191, %r191, -1;
	setp.ne.s32 	%p161, %r191, 0;
	@%p161 bra 	$L__BB52_96;

$L__BB52_97:
	ret;

}
	// .globl	derSoftmax
.visible .entry derSoftmax(
	.param .u64 derSoftmax_param_0,
	.param .u64 derSoftmax_param_1,
	.param .u64 derSoftmax_param_2,
	.param .u32 derSoftmax_param_3,
	.param .u32 derSoftmax_param_4
)
{
	.reg .pred 	%p<19>;
	.reg .f32 	%f<101>;
	.reg .b32 	%r<94>;
	.reg .b64 	%rd<59>;


	ld.param.u64 	%rd35, [derSoftmax_param_0];
	ld.param.u64 	%rd36, [derSoftmax_param_1];
	ld.param.u64 	%rd34, [derSoftmax_param_2];
	ld.param.u32 	%r42, [derSoftmax_param_3];
	ld.param.u32 	%r41, [derSoftmax_param_4];
	cvta.to.global.u64 	%rd1, %rd36;
	cvta.to.global.u64 	%rd2, %rd35;
	mov.u32 	%r43, %ctaid.x;
	mov.u32 	%r44, %ntid.x;
	mov.u32 	%r45, %tid.x;
	mad.lo.s32 	%r1, %r44, %r43, %r45;
	mov.u32 	%r46, %ctaid.y;
	mov.u32 	%r47, %ntid.y;
	mul.lo.s32 	%r2, %r47, %r46;
	mov.u32 	%r3, %tid.y;
	add.s32 	%r4, %r2, %r3;
	setp.ge.s32 	%p1, %r1, %r42;
	setp.ge.s32 	%p2, %r4, %r41;
	or.pred  	%p3, %p1, %p2;
	@%p3 bra 	$L__BB53_23;

	cvta.to.global.u64 	%rd37, %rd34;
	mul.lo.s32 	%r5, %r1, %r41;
	add.s32 	%r49, %r5, %r4;
	mul.wide.s32 	%rd38, %r49, 4;
	add.s64 	%rd3, %rd37, %rd38;
	mov.f32 	%f95, 0f00000000;
	mov.u32 	%r89, 0;
	st.global.u32 	[%rd3], %r89;
	add.s64 	%rd39, %rd2, %rd38;
	ld.global.nc.f32 	%f1, [%rd39];
	max.s32 	%r6, %r4, 0;
	min.s32 	%r7, %r6, %r41;
	setp.lt.s32 	%p4, %r7, 1;
	@%p4 bra 	$L__BB53_8;

	add.s32 	%r52, %r7, -1;
	and.b32  	%r82, %r7, 3;
	setp.lt.u32 	%p5, %r52, 3;
	mov.f32 	%f95, 0f00000000;
	mov.u32 	%r89, 0;
	@%p5 bra 	$L__BB53_5;

	not.b32 	%r54, %r6;
	not.b32 	%r55, %r41;
	max.s32 	%r56, %r54, %r55;
	add.s32 	%r57, %r56, %r82;
	neg.s32 	%r77, %r57;
	mul.wide.s32 	%rd40, %r5, 4;
	add.s64 	%rd41, %rd40, 8;
	add.s64 	%rd50, %rd2, %rd41;
	add.s64 	%rd49, %rd1, %rd41;

$L__BB53_4:
	ld.global.nc.f32 	%f28, [%rd50+-8];
	mul.ftz.f32 	%f29, %f28, %f1;
	ld.global.nc.f32 	%f30, [%rd49+-8];
	mul.ftz.f32 	%f31, %f29, %f30;
	sub.ftz.f32 	%f32, %f95, %f31;
	ld.global.nc.f32 	%f33, [%rd50+-4];
	mul.ftz.f32 	%f34, %f33, %f1;
	ld.global.nc.f32 	%f35, [%rd49+-4];
	mul.ftz.f32 	%f36, %f34, %f35;
	sub.ftz.f32 	%f37, %f32, %f36;
	ld.global.nc.f32 	%f38, [%rd50];
	mul.ftz.f32 	%f39, %f38, %f1;
	ld.global.nc.f32 	%f40, [%rd49];
	mul.ftz.f32 	%f41, %f39, %f40;
	sub.ftz.f32 	%f42, %f37, %f41;
	ld.global.nc.f32 	%f43, [%rd50+4];
	mul.ftz.f32 	%f44, %f43, %f1;
	ld.global.nc.f32 	%f45, [%rd49+4];
	mul.ftz.f32 	%f46, %f44, %f45;
	sub.ftz.f32 	%f95, %f42, %f46;
	add.s32 	%r89, %r89, 4;
	add.s64 	%rd50, %rd50, 16;
	add.s64 	%rd49, %rd49, 16;
	add.s32 	%r77, %r77, -4;
	setp.ne.s32 	%p6, %r77, 1;
	@%p6 bra 	$L__BB53_4;

$L__BB53_5:
	setp.eq.s32 	%p7, %r82, 0;
	@%p7 bra 	$L__BB53_8;

	add.s32 	%r58, %r89, %r5;
	mul.wide.s32 	%rd42, %r58, 4;
	add.s64 	%rd52, %rd1, %rd42;
	add.s64 	%rd51, %rd2, %rd42;

$L__BB53_7:
	.pragma "nounroll";
	ld.global.nc.f32 	%f47, [%rd51];
	mul.ftz.f32 	%f48, %f47, %f1;
	ld.global.nc.f32 	%f49, [%rd52];
	mul.ftz.f32 	%f50, %f48, %f49;
	sub.ftz.f32 	%f95, %f95, %f50;
	add.s32 	%r89, %r89, 1;
	add.s64 	%rd52, %rd52, 4;
	add.s64 	%rd51, %rd51, 4;
	add.s32 	%r82, %r82, -1;
	setp.ne.s32 	%p8, %r82, 0;
	@%p8 bra 	$L__BB53_7;

$L__BB53_8:
	add.s32 	%r59, %r4, 1;
	min.s32 	%r21, %r59, %r41;
	setp.ge.s32 	%p9, %r89, %r21;
	@%p9 bra 	$L__BB53_15;

	mov.f32 	%f52, 0f3F800000;
	sub.ftz.f32 	%f53, %f52, %f1;
	mul.ftz.f32 	%f9, %f1, %f53;
	mov.u32 	%r61, -2;
	sub.s32 	%r62, %r61, %r2;
	sub.s32 	%r63, %r62, %r3;
	not.b32 	%r64, %r41;
	max.s32 	%r22, %r63, %r64;
	not.b32 	%r65, %r89;
	sub.s32 	%r66, %r65, %r22;
	and.b32  	%r85, %r66, 3;
	setp.eq.s32 	%p10, %r85, 0;
	mov.u32 	%r86, %r89;
	@%p10 bra 	$L__BB53_12;

	add.s32 	%r67, %r89, %r5;
	mul.wide.s32 	%rd43, %r67, 4;
	add.s64 	%rd53, %rd1, %rd43;
	mov.u32 	%r86, %r89;

$L__BB53_11:
	.pragma "nounroll";
	ld.global.nc.f32 	%f54, [%rd53];
	fma.rn.ftz.f32 	%f95, %f54, %f9, %f95;
	add.s32 	%r86, %r86, 1;
	add.s64 	%rd53, %rd53, 4;
	add.s32 	%r85, %r85, -1;
	setp.ne.s32 	%p11, %r85, 0;
	@%p11 bra 	$L__BB53_11;

$L__BB53_12:
	sub.s32 	%r69, %r61, %r89;
	sub.s32 	%r70, %r69, %r22;
	setp.lt.u32 	%p12, %r70, 3;
	mov.u32 	%r89, %r86;
	@%p12 bra 	$L__BB53_15;

	add.s32 	%r71, %r86, %r5;
	mul.wide.s32 	%rd44, %r71, 4;
	add.s64 	%rd45, %rd1, %rd44;
	add.s64 	%rd54, %rd45, 8;
	mov.u32 	%r89, %r86;

$L__BB53_14:
	ld.global.nc.f32 	%f55, [%rd54+-8];
	fma.rn.ftz.f32 	%f56, %f55, %f9, %f95;
	ld.global.nc.f32 	%f57, [%rd54+-4];
	fma.rn.ftz.f32 	%f58, %f57, %f9, %f56;
	ld.global.nc.f32 	%f59, [%rd54];
	fma.rn.ftz.f32 	%f60, %f59, %f9, %f58;
	ld.global.nc.f32 	%f61, [%rd54+4];
	fma.rn.ftz.f32 	%f95, %f61, %f9, %f60;
	add.s64 	%rd54, %rd54, 16;
	add.s32 	%r89, %r89, 4;
	setp.lt.s32 	%p13, %r89, %r21;
	@%p13 bra 	$L__BB53_14;

$L__BB53_15:
	setp.ge.s32 	%p14, %r89, %r41;
	@%p14 bra 	$L__BB53_22;

	sub.s32 	%r72, %r41, %r89;
	and.b32  	%r91, %r72, 3;
	setp.eq.s32 	%p15, %r91, 0;
	mov.u32 	%r92, %r89;
	@%p15 bra 	$L__BB53_19;

	add.s32 	%r73, %r89, %r5;
	mul.wide.s32 	%rd46, %r73, 4;
	add.s64 	%rd56, %rd1, %rd46;
	add.s64 	%rd55, %rd2, %rd46;
	mov.u32 	%r92, %r89;

$L__BB53_18:
	.pragma "nounroll";
	ld.global.nc.f32 	%f63, [%rd55];
	mul.ftz.f32 	%f64, %f63, %f1;
	ld.global.nc.f32 	%f65, [%rd56];
	mul.ftz.f32 	%f66, %f64, %f65;
	sub.ftz.f32 	%f95, %f95, %f66;
	add.s32 	%r92, %r92, 1;
	add.s64 	%rd56, %rd56, 4;
	add.s64 	%rd55, %rd55, 4;
	add.s32 	%r91, %r91, -1;
	setp.ne.s32 	%p16, %r91, 0;
	@%p16 bra 	$L__BB53_18;

$L__BB53_19:
	not.b32 	%r74, %r89;
	add.s32 	%r75, %r74, %r41;
	setp.lt.u32 	%p17, %r75, 3;
	@%p17 bra 	$L__BB53_22;

	add.s32 	%r76, %r92, %r5;
	mul.wide.s32 	%rd47, %r76, 4;
	add.s64 	%rd48, %rd47, 8;
	add.s64 	%rd58, %rd1, %rd48;
	add.s64 	%rd57, %rd2, %rd48;

$L__BB53_21:
	ld.global.nc.f32 	%f67, [%rd57+-8];
	mul.ftz.f32 	%f68, %f67, %f1;
	ld.global.nc.f32 	%f69, [%rd58+-8];
	mul.ftz.f32 	%f70, %f68, %f69;
	sub.ftz.f32 	%f71, %f95, %f70;
	ld.global.nc.f32 	%f72, [%rd57+-4];
	mul.ftz.f32 	%f73, %f72, %f1;
	ld.global.nc.f32 	%f74, [%rd58+-4];
	mul.ftz.f32 	%f75, %f73, %f74;
	sub.ftz.f32 	%f76, %f71, %f75;
	ld.global.nc.f32 	%f77, [%rd57];
	mul.ftz.f32 	%f78, %f77, %f1;
	ld.global.nc.f32 	%f79, [%rd58];
	mul.ftz.f32 	%f80, %f78, %f79;
	sub.ftz.f32 	%f81, %f76, %f80;
	ld.global.nc.f32 	%f82, [%rd57+4];
	mul.ftz.f32 	%f83, %f82, %f1;
	ld.global.nc.f32 	%f84, [%rd58+4];
	mul.ftz.f32 	%f85, %f83, %f84;
	sub.ftz.f32 	%f95, %f81, %f85;
	add.s64 	%rd58, %rd58, 16;
	add.s64 	%rd57, %rd57, 16;
	add.s32 	%r92, %r92, 4;
	setp.lt.s32 	%p18, %r92, %r41;
	@%p18 bra 	$L__BB53_21;

$L__BB53_22:
	st.global.f32 	[%rd3], %f95;

$L__BB53_23:
	ret;

}
.func  (.param .b64 func_retval0) __internal_accurate_pow(
	.param .b64 __internal_accurate_pow_param_0
)
{
	.reg .pred 	%p<10>;
	.reg .f32 	%f<3>;
	.reg .b32 	%r<53>;
	.reg .f64 	%fd<138>;


	ld.param.f64 	%fd12, [__internal_accurate_pow_param_0];
	mov.f64 	%fd13, 0d4005BF0A8B145769;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r50}, %fd13;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%r49, %temp}, %fd13;
	}
	shr.u32 	%r51, %r50, 20;
	setp.ne.s32 	%p1, %r51, 0;
	@%p1 bra 	$L__BB54_2;

	mov.f64 	%fd14, 0d4365BF0A8B145769;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r50}, %fd14;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%r49, %temp}, %fd14;
	}
	shr.u32 	%r16, %r50, 20;
	add.s32 	%r51, %r16, -54;

$L__BB54_2:
	add.s32 	%r52, %r51, -1023;
	and.b32  	%r17, %r50, -2146435073;
	or.b32  	%r18, %r17, 1072693248;
	mov.b64 	%fd135, {%r49, %r18};
	setp.lt.u32 	%p2, %r18, 1073127583;
	@%p2 bra 	$L__BB54_4;

	{
	.reg .b32 %temp; 
	mov.b64 	{%r19, %temp}, %fd135;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r20}, %fd135;
	}
	add.s32 	%r21, %r20, -1048576;
	mov.b64 	%fd135, {%r19, %r21};
	add.s32 	%r52, %r51, -1022;

$L__BB54_4:
	add.f64 	%fd15, %fd135, 0d3FF0000000000000;
	mov.f64 	%fd16, 0d3FF0000000000000;
	rcp.approx.ftz.f64 	%fd17, %fd15;
	neg.f64 	%fd18, %fd15;
	fma.rn.f64 	%fd19, %fd18, %fd17, %fd16;
	fma.rn.f64 	%fd20, %fd19, %fd19, %fd19;
	fma.rn.f64 	%fd21, %fd20, %fd17, %fd17;
	add.f64 	%fd22, %fd135, 0dBFF0000000000000;
	mul.f64 	%fd23, %fd22, %fd21;
	fma.rn.f64 	%fd24, %fd22, %fd21, %fd23;
	mul.f64 	%fd25, %fd24, %fd24;
	mov.f64 	%fd26, 0d3ED0F5D241AD3B5A;
	mov.f64 	%fd27, 0d3EB0F5FF7D2CAFE2;
	fma.rn.f64 	%fd28, %fd27, %fd25, %fd26;
	mov.f64 	%fd29, 0d3EF3B20A75488A3F;
	fma.rn.f64 	%fd30, %fd28, %fd25, %fd29;
	mov.f64 	%fd31, 0d3F1745CDE4FAECD5;
	fma.rn.f64 	%fd32, %fd30, %fd25, %fd31;
	mov.f64 	%fd33, 0d3F3C71C7258A578B;
	fma.rn.f64 	%fd34, %fd32, %fd25, %fd33;
	mov.f64 	%fd35, 0d3F6249249242B910;
	fma.rn.f64 	%fd36, %fd34, %fd25, %fd35;
	mov.f64 	%fd37, 0d3F89999999999DFB;
	fma.rn.f64 	%fd38, %fd36, %fd25, %fd37;
	sub.f64 	%fd39, %fd22, %fd24;
	add.f64 	%fd40, %fd39, %fd39;
	neg.f64 	%fd41, %fd24;
	fma.rn.f64 	%fd42, %fd41, %fd22, %fd40;
	mul.f64 	%fd43, %fd21, %fd42;
	fma.rn.f64 	%fd44, %fd25, %fd38, 0d3FB5555555555555;
	mov.f64 	%fd45, 0d3FB5555555555555;
	sub.f64 	%fd46, %fd45, %fd44;
	fma.rn.f64 	%fd47, %fd25, %fd38, %fd46;
	add.f64 	%fd48, %fd47, 0d0000000000000000;
	add.f64 	%fd49, %fd48, 0dBC46A4CB00B9E7B0;
	add.f64 	%fd50, %fd44, %fd49;
	sub.f64 	%fd51, %fd44, %fd50;
	add.f64 	%fd52, %fd49, %fd51;
	mul.rn.f64 	%fd53, %fd24, %fd24;
	neg.f64 	%fd54, %fd53;
	fma.rn.f64 	%fd55, %fd24, %fd24, %fd54;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r22, %temp}, %fd43;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r23}, %fd43;
	}
	add.s32 	%r24, %r23, 1048576;
	mov.b64 	%fd56, {%r22, %r24};
	fma.rn.f64 	%fd57, %fd24, %fd56, %fd55;
	mul.rn.f64 	%fd58, %fd53, %fd24;
	neg.f64 	%fd59, %fd58;
	fma.rn.f64 	%fd60, %fd53, %fd24, %fd59;
	fma.rn.f64 	%fd61, %fd53, %fd43, %fd60;
	fma.rn.f64 	%fd62, %fd57, %fd24, %fd61;
	mul.rn.f64 	%fd63, %fd50, %fd58;
	neg.f64 	%fd64, %fd63;
	fma.rn.f64 	%fd65, %fd50, %fd58, %fd64;
	fma.rn.f64 	%fd66, %fd50, %fd62, %fd65;
	fma.rn.f64 	%fd67, %fd52, %fd58, %fd66;
	add.f64 	%fd68, %fd63, %fd67;
	sub.f64 	%fd69, %fd63, %fd68;
	add.f64 	%fd70, %fd67, %fd69;
	add.f64 	%fd71, %fd24, %fd68;
	sub.f64 	%fd72, %fd24, %fd71;
	add.f64 	%fd73, %fd68, %fd72;
	add.f64 	%fd74, %fd70, %fd73;
	add.f64 	%fd75, %fd43, %fd74;
	add.f64 	%fd76, %fd71, %fd75;
	sub.f64 	%fd77, %fd71, %fd76;
	add.f64 	%fd78, %fd75, %fd77;
	xor.b32  	%r25, %r52, -2147483648;
	mov.u32 	%r26, -2147483648;
	mov.u32 	%r27, 1127219200;
	mov.b64 	%fd79, {%r25, %r27};
	mov.b64 	%fd80, {%r26, %r27};
	sub.f64 	%fd81, %fd79, %fd80;
	mov.f64 	%fd82, 0d3FE62E42FEFA39EF;
	fma.rn.f64 	%fd83, %fd81, %fd82, %fd76;
	neg.f64 	%fd84, %fd81;
	fma.rn.f64 	%fd85, %fd84, %fd82, %fd83;
	sub.f64 	%fd86, %fd85, %fd76;
	sub.f64 	%fd87, %fd78, %fd86;
	mov.f64 	%fd88, 0d3C7ABC9E3B39803F;
	fma.rn.f64 	%fd89, %fd81, %fd88, %fd87;
	add.f64 	%fd90, %fd83, %fd89;
	sub.f64 	%fd91, %fd83, %fd90;
	add.f64 	%fd92, %fd89, %fd91;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r28}, %fd12;
	}
	shl.b32 	%r29, %r28, 1;
	setp.gt.u32 	%p3, %r29, -33554433;
	and.b32  	%r30, %r28, -15728641;
	selp.b32 	%r31, %r30, %r28, %p3;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r32, %temp}, %fd12;
	}
	mov.b64 	%fd93, {%r32, %r31};
	mul.rn.f64 	%fd94, %fd90, %fd93;
	neg.f64 	%fd95, %fd94;
	fma.rn.f64 	%fd96, %fd90, %fd93, %fd95;
	fma.rn.f64 	%fd97, %fd92, %fd93, %fd96;
	add.f64 	%fd4, %fd94, %fd97;
	sub.f64 	%fd98, %fd94, %fd4;
	add.f64 	%fd5, %fd97, %fd98;
	mov.f64 	%fd99, 0d4338000000000000;
	mov.f64 	%fd100, 0d3FF71547652B82FE;
	fma.rn.f64 	%fd101, %fd4, %fd100, %fd99;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r13, %temp}, %fd101;
	}
	mov.f64 	%fd102, 0dC338000000000000;
	add.rn.f64 	%fd103, %fd101, %fd102;
	mov.f64 	%fd104, 0dBFE62E42FEFA39EF;
	fma.rn.f64 	%fd105, %fd103, %fd104, %fd4;
	mov.f64 	%fd106, 0dBC7ABC9E3B39803F;
	fma.rn.f64 	%fd107, %fd103, %fd106, %fd105;
	mov.f64 	%fd108, 0d3E928AF3FCA213EA;
	mov.f64 	%fd109, 0d3E5ADE1569CE2BDF;
	fma.rn.f64 	%fd110, %fd109, %fd107, %fd108;
	mov.f64 	%fd111, 0d3EC71DEE62401315;
	fma.rn.f64 	%fd112, %fd110, %fd107, %fd111;
	mov.f64 	%fd113, 0d3EFA01997C89EB71;
	fma.rn.f64 	%fd114, %fd112, %fd107, %fd113;
	mov.f64 	%fd115, 0d3F2A01A014761F65;
	fma.rn.f64 	%fd116, %fd114, %fd107, %fd115;
	mov.f64 	%fd117, 0d3F56C16C1852B7AF;
	fma.rn.f64 	%fd118, %fd116, %fd107, %fd117;
	mov.f64 	%fd119, 0d3F81111111122322;
	fma.rn.f64 	%fd120, %fd118, %fd107, %fd119;
	mov.f64 	%fd121, 0d3FA55555555502A1;
	fma.rn.f64 	%fd122, %fd120, %fd107, %fd121;
	mov.f64 	%fd123, 0d3FC5555555555511;
	fma.rn.f64 	%fd124, %fd122, %fd107, %fd123;
	mov.f64 	%fd125, 0d3FE000000000000B;
	fma.rn.f64 	%fd126, %fd124, %fd107, %fd125;
	fma.rn.f64 	%fd127, %fd126, %fd107, %fd16;
	fma.rn.f64 	%fd128, %fd127, %fd107, %fd16;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r14, %temp}, %fd128;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r15}, %fd128;
	}
	shl.b32 	%r33, %r13, 20;
	add.s32 	%r34, %r15, %r33;
	mov.b64 	%fd136, {%r14, %r34};
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r35}, %fd4;
	}
	mov.b32 	%f2, %r35;
	abs.ftz.f32 	%f1, %f2;
	setp.lt.ftz.f32 	%p4, %f1, 0f4086232B;
	@%p4 bra 	$L__BB54_7;

	setp.lt.f64 	%p5, %fd4, 0d0000000000000000;
	add.f64 	%fd129, %fd4, 0d7FF0000000000000;
	selp.f64 	%fd136, 0d0000000000000000, %fd129, %p5;
	setp.geu.ftz.f32 	%p6, %f1, 0f40874800;
	@%p6 bra 	$L__BB54_7;

	mov.f64 	%fd134, 0d4338000000000000;
	mov.f64 	%fd133, 0d3FF71547652B82FE;
	fma.rn.f64 	%fd132, %fd4, %fd133, %fd134;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r48, %temp}, %fd132;
	}
	shr.u32 	%r36, %r48, 31;
	add.s32 	%r37, %r48, %r36;
	shr.s32 	%r38, %r37, 1;
	shl.b32 	%r39, %r38, 20;
	add.s32 	%r40, %r15, %r39;
	mov.b64 	%fd130, {%r14, %r40};
	sub.s32 	%r41, %r48, %r38;
	shl.b32 	%r42, %r41, 20;
	add.s32 	%r43, %r42, 1072693248;
	mov.u32 	%r44, 0;
	mov.b64 	%fd131, {%r44, %r43};
	mul.f64 	%fd136, %fd130, %fd131;

$L__BB54_7:
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r45}, %fd136;
	}
	and.b32  	%r46, %r45, 2147483647;
	setp.eq.s32 	%p7, %r46, 2146435072;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r47, %temp}, %fd136;
	}
	setp.eq.s32 	%p8, %r47, 0;
	and.pred  	%p9, %p8, %p7;
	@%p9 bra 	$L__BB54_9;

	fma.rn.f64 	%fd136, %fd136, %fd5, %fd136;

$L__BB54_9:
	st.param.f64 	[func_retval0+0], %fd136;
	ret;

}

